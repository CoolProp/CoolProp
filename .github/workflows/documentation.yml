name: Doxygen and Sphinx documentation

on:
  push:
    branches: [ master, develop, actions_docs ]
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ master, develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install system dependencies
      shell: bash
      run: |
        set -x
        sudo apt update
        sudo apt install p7zip-full imagemagick rsync doxygen
        sudo apt install mono-mcs octave liboctave-dev r-base-dev default-jre default-jdk
        sudo apt install texlive-extra-utils
        
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9.x

    # - name: Build and install wheel with cibuildwheel
    #   env:
    #     CIBW_BEFORE_BUILD: pip install setuptools wheel Cython requests jinja2 pyyaml pybtex sphinx
    #     CIBW_ENVIRONMENT_LINUX: COOLPROP_CMAKE=default,64
    #     CIBW_BUILD: cp${{ matrix.python-version }}-*
    #     CIBW_ARCHS_LINUX: x86_64
    #     CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
    #     CIBW_BUILD_VERBOSITY: 1
    #   # python -m cibuildwheel --output-dir Python ./wrappers/Python
    #   run: |
    #     python -m cibuildwheel --output-dir Python ./wrappers/Python
    #     pip install -vvv --force-reinstall --ignore-installed --upgrade --no-index `ls Python/*.whl`

    - name: Build and install wheel using bdist_wheel
      working-directory: ./wrappers/Python/
      run: |
        pip install setuptools wheel Cython requests jinja2 pyyaml pybtex sphinx 
        pip install sphinxcontrib-napoleon sphinxcontrib-doxylink sphinxcontrib-bibtex cloud_sptheme openpyxl
        python setup.py bdist_wheel --dist-dir dist cmake=default,64
        pip install -vvv --force-reinstall --ignore-installed --upgrade --no-index `ls dist/*.whl`
        
    - name: Test the installed CoolProp version
      run: |
        python -c "import CoolProp; print(CoolProp.__gitrevision__)"
        python -c "import CoolProp; print(CoolProp.__file__)"
        
    - name: Build homepage and create graphs
      # Use a single argument with "True" or "1" to trigger a full rebuild
      working-directory: ./Web/scripts/
      run: |
        python -u __init__.py False
        
    - name: Build documentation with Doxygen
      shell: bash
      run: |
        doxygen --version
        doxygen Doxyfile
        
    - name: Build documentation with Sphinx
      working-directory: ./Web
      shell: bash
      run: |
        sphinx-apidoc -T -f -e -o apidoc ../wrappers/Python/CoolProp
        make html

    - name: Extract CoolProp version from CMakeLists.txt
      shell: bash
      run: |
        set -x
        COOLPROP_VERSION=$(python dev/extract_version.py --cmake-only)
        echo COOLPROP_VERSION=$COOLPROP_VERSION >> $GITHUB_ENV    

    - name: Zip the HTML documentation
      working-directory: ./Web/_static/doxygen/html/
      shell: bash
      run: |
        tar -cvzf CoolProp-${{ env.COOLPROP_VERSION }}-documentation-html.tar.gz ./*

    - name: Archive TGZ or ZIP artifacts
      uses: actions/upload-artifact@v2
      with:
          name: CoolProp-${{ env.COOLPROP_VERSION }}-documentation-html.tar.gz
          path: Web/_static/doxygen/html/CoolProp-${{ env.COOLPROP_VERSION }}-documentation-html.tar.gz

    - name: Upload TGZ or ZIP to release
      if: contains(github.ref, 'refs/tags')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: Web/_static/doxygen/html/CoolProp-${{ env.COOLPROP_VERSION }}-documentation-html.tar.gz
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: false
