from __future__ import division, print_function
import numpy as np
from .DataObjects import PureData

class TherminolD12(PureData):
    """
    Heat transfer fluid Therminol D12 by Solutia
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([-8.50000E+1, -8.00000E+1, -7.50000E+1, -7.00000E+1, -6.50000E+1, -6.00000E+1, -5.50000E+1, -5.00000E+1, -4.50000E+1, -4.00000E+1, -3.50000E+1, -3.00000E+1, -2.50000E+1, -2.00000E+1, -1.50000E+1, -1.00000E+1, -5.00000E+0, +0.00000E+0, +5.00000E+0, +1.00000E+1, +1.50000E+1, +2.00000E+1, +2.50000E+1, +3.00000E+1, +3.50000E+1, +4.00000E+1, +4.50000E+1, +5.00000E+1, +5.50000E+1, +6.00000E+1, +6.50000E+1, +7.00000E+1, +7.50000E+1, +8.00000E+1, +8.50000E+1, +9.00000E+1, +9.50000E+1, +1.00000E+2, +1.05000E+2, +1.10000E+2, +1.15000E+2, +1.20000E+2, +1.25000E+2, +1.30000E+2, +1.35000E+2, +1.40000E+2, +1.45000E+2, +1.50000E+2, +1.55000E+2, +1.60000E+2, +1.65000E+2, +1.70000E+2, +1.75000E+2, +1.80000E+2, +1.85000E+2, +1.90000E+2, +1.95000E+2, +2.00000E+2, +2.05000E+2, +2.10000E+2, +2.15000E+2, +2.20000E+2, +2.25000E+2, +2.30000E+2])+273.15  # Kelvin
        self.density.data             = np.array([+8.35000E+2, +8.32000E+2, +8.28000E+2, +8.25000E+2, +8.22000E+2, +8.18000E+2, +8.15000E+2, +8.11000E+2, +8.08000E+2, +8.05000E+2, +8.01000E+2, +7.98000E+2, +7.94000E+2, +7.91000E+2, +7.87000E+2, +7.84000E+2, +7.80000E+2, +7.77000E+2, +7.73000E+2, +7.70000E+2, +7.66000E+2, +7.62000E+2, +7.59000E+2, +7.55000E+2, +7.52000E+2, +7.48000E+2, +7.44000E+2, +7.41000E+2, +7.37000E+2, +7.33000E+2, +7.29000E+2, +7.26000E+2, +7.22000E+2, +7.18000E+2, +7.14000E+2, +7.10000E+2, +7.06000E+2, +7.03000E+2, +6.99000E+2, +6.95000E+2, +6.91000E+2, +6.87000E+2, +6.82000E+2, +6.78000E+2, +6.74000E+2, +6.70000E+2, +6.66000E+2, +6.61000E+2, +6.57000E+2, +6.53000E+2, +6.48000E+2, +6.44000E+2, +6.39000E+2, +6.35000E+2, +6.30000E+2, +6.25000E+2, +6.20000E+2, +6.16000E+2, +6.11000E+2, +6.06000E+2, +6.00000E+2, +5.95000E+2, +5.90000E+2, +5.84000E+2])         # kg/m3
        self.specific_heat.data       = np.array([+1.69400E+0, +1.71200E+0, +1.73100E+0, +1.75000E+0, +1.76800E+0, +1.78700E+0, +1.80600E+0, +1.82400E+0, +1.84300E+0, +1.86200E+0, +1.88100E+0, +1.90000E+0, +1.91900E+0, +1.93800E+0, +1.95700E+0, +1.97700E+0, +1.99600E+0, +2.01500E+0, +2.03500E+0, +2.05400E+0, +2.07300E+0, +2.09300E+0, +2.11300E+0, +2.13200E+0, +2.15200E+0, +2.17200E+0, +2.19100E+0, +2.21100E+0, +2.23100E+0, +2.25100E+0, +2.27100E+0, +2.29100E+0, +2.31200E+0, +2.33200E+0, +2.35200E+0, +2.37300E+0, +2.39300E+0, +2.41400E+0, +2.43400E+0, +2.45500E+0, +2.47600E+0, +2.49600E+0, +2.51700E+0, +2.53800E+0, +2.55900E+0, +2.58000E+0, +2.60200E+0, +2.62300E+0, +2.64400E+0, +2.66600E+0, +2.68700E+0, +2.70900E+0, +2.73100E+0, +2.75300E+0, +2.77500E+0, +2.79700E+0, +2.82000E+0, +2.84200E+0, +2.86500E+0, +2.88800E+0, +2.91100E+0, +2.93500E+0, +2.95900E+0, +2.98300E+0])*1000.   # J/kg-K
        self.conductivity.data        = np.array([+1.24400E-1, +1.23800E-1, +1.23200E-1, +1.22500E-1, +1.21900E-1, +1.21300E-1, +1.20600E-1, +1.20000E-1, +1.19300E-1, +1.18600E-1, +1.18000E-1, +1.17300E-1, +1.16600E-1, +1.15900E-1, +1.15200E-1, +1.14500E-1, +1.13700E-1, +1.13000E-1, +1.12200E-1, +1.11500E-1, +1.10700E-1, +1.10000E-1, +1.09200E-1, +1.08400E-1, +1.07600E-1, +1.06800E-1, +1.06000E-1, +1.05200E-1, +1.04400E-1, +1.03500E-1, +1.02700E-1, +1.01900E-1, +1.01000E-1, +1.00100E-1, +9.93000E-2, +9.84000E-2, +9.75000E-2, +9.66000E-2, +9.57000E-2, +9.48000E-2, +9.39000E-2, +9.29000E-2, +9.20000E-2, +9.10000E-2, +9.01000E-2, +8.91000E-2, +8.82000E-2, +8.72000E-2, +8.62000E-2, +8.52000E-2, +8.42000E-2, +8.32000E-2, +8.22000E-2, +8.12000E-2, +8.01000E-2, +7.91000E-2, +7.80000E-2, +7.70000E-2, +7.59000E-2, +7.48000E-2, +7.38000E-2, +7.27000E-2, +7.16000E-2, +7.05000E-2])         # W/m-K
        self.viscosity.data           = np.array([+3.59000E-1, +1.77000E-1, +9.59000E-2, +5.64000E-2, +3.55000E-2, +2.36000E-2, +1.65000E-2, +1.20000E-2, +9.07000E-3, +7.06000E-3, +5.63000E-3, +4.60000E-3, +3.82000E-3, +3.24000E-3, +2.78000E-3, +2.41000E-3, +2.12000E-3, +1.88000E-3, +1.69000E-3, +1.52000E-3, +1.38000E-3, +1.26000E-3, +1.16000E-3, +1.07000E-3, +9.88000E-4, +9.18000E-4, +8.56000E-4, +8.00000E-4, +7.50000E-4, +7.05000E-4, +6.64000E-4, +6.26000E-4, +5.92000E-4, +5.61000E-4, +5.31000E-4, +5.04000E-4, +4.79000E-4, +4.56000E-4, +4.35000E-4, +4.14000E-4, +3.95000E-4, +3.78000E-4, +3.61000E-4, +3.45000E-4, +3.30000E-4, +3.16000E-4, +3.03000E-4, +2.90000E-4, +2.78000E-4, +2.67000E-4, +2.57000E-4, +2.46000E-4, +2.37000E-4, +2.27000E-4, +2.19000E-4, +2.10000E-4, +2.02000E-4, +1.95000E-4, +1.87000E-4, +1.80000E-4, +1.74000E-4, +1.67000E-4, +1.61000E-4, +1.56000E-4])         # Pa-s
        self.saturation_pressure.data = np.array([+4.75000E-9, +2.07000E-8, +8.08000E-8, +2.81000E-7, +8.86000E-7, +2.56000E-6, +6.82000E-6, +1.70000E-5, +3.96000E-5, +8.75000E-5, +1.84000E-4, +3.68000E-4, +7.06000E-4, +1.30000E-3, +2.33000E-3, +4.02000E-3, +6.75000E-3, +1.10000E-2, +1.76000E-2, +2.73000E-2, +4.16000E-2, +6.21000E-2, +9.10000E-2, +1.31000E-1, +1.86000E-1, +2.59000E-1, +3.56000E-1, +4.84000E-1, +6.48000E-1, +8.59000E-1, +1.13000E+0, +1.46000E+0, +1.88000E+0, +2.39000E+0, +3.01000E+0, +3.77000E+0, +4.68000E+0, +5.76000E+0, +7.05000E+0, +8.57000E+0, +1.03000E+1, +1.24000E+1, +1.48000E+1, +1.76000E+1, +2.08000E+1, +2.44000E+1, +2.85000E+1, +3.32000E+1, +3.84000E+1, +4.43000E+1, +5.09000E+1, +5.83000E+1, +6.64000E+1, +7.55000E+1, +8.55000E+1, +9.65000E+1, +1.09000E+2, +1.22000E+2, +1.36000E+2, +1.52000E+2, +1.69000E+2, +1.88000E+2, +2.08000E+2, +2.29000E+2])*1000.   # Pa
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = self.Tmin
        self.name        = "TD12"
        self.description = "TherminolD12"
        self.reference   = "Therminol2014"
        self.reshapeAll()

class TherminolVP1(PureData):
    """
    Heat transfer fluid Therminol VP-1 by Solutia
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([+1.20000E+1, +1.70000E+1, +2.20000E+1, +2.70000E+1, +3.20000E+1, +3.70000E+1, +4.20000E+1, +4.70000E+1, +5.20000E+1, +5.70000E+1, +6.20000E+1, +6.70000E+1, +7.20000E+1, +7.70000E+1, +8.20000E+1, +8.70000E+1, +9.20000E+1, +9.70000E+1, +1.02000E+2, +1.07000E+2, +1.12000E+2, +1.17000E+2, +1.22000E+2, +1.27000E+2, +1.32000E+2, +1.37000E+2, +1.42000E+2, +1.47000E+2, +1.52000E+2, +1.57000E+2, +1.62000E+2, +1.67000E+2, +1.72000E+2, +1.77000E+2, +1.82000E+2, +1.87000E+2, +1.92000E+2, +1.97000E+2, +2.02000E+2, +2.07000E+2, +2.12000E+2, +2.17000E+2, +2.22000E+2, +2.27000E+2, +2.32000E+2, +2.37000E+2, +2.42000E+2, +2.47000E+2, +2.52000E+2, +2.57000E+2, +2.62000E+2, +2.67000E+2, +2.72000E+2, +2.77000E+2, +2.82000E+2, +2.87000E+2, +2.92000E+2, +2.97000E+2, +3.02000E+2, +3.07000E+2, +3.12000E+2, +3.17000E+2, +3.22000E+2, +3.27000E+2, +3.32000E+2, +3.37000E+2, +3.42000E+2, +3.47000E+2, +3.52000E+2, +3.57000E+2, +3.62000E+2, +3.67000E+2, +3.72000E+2, +3.77000E+2, +3.82000E+2, +3.87000E+2, +3.92000E+2, +3.97000E+2])+273.15  # Kelvin
        self.density.data             = np.array([+1.07000E+3, +1.07000E+3, +1.06000E+3, +1.06000E+3, +1.05000E+3, +1.05000E+3, +1.05000E+3, +1.04000E+3, +1.04000E+3, +1.03000E+3, +1.03000E+3, +1.03000E+3, +1.02000E+3, +1.02000E+3, +1.01000E+3, +1.01000E+3, +1.01000E+3, +1.00000E+3, +9.97000E+2, +9.93000E+2, +9.88000E+2, +9.84000E+2, +9.80000E+2, +9.76000E+2, +9.72000E+2, +9.67000E+2, +9.63000E+2, +9.59000E+2, +9.55000E+2, +9.50000E+2, +9.46000E+2, +9.42000E+2, +9.37000E+2, +9.33000E+2, +9.29000E+2, +9.24000E+2, +9.20000E+2, +9.15000E+2, +9.11000E+2, +9.06000E+2, +9.02000E+2, +8.98000E+2, +8.93000E+2, +8.89000E+2, +8.84000E+2, +8.79000E+2, +8.75000E+2, +8.70000E+2, +8.65000E+2, +8.60000E+2, +8.56000E+2, +8.51000E+2, +8.46000E+2, +8.41000E+2, +8.36000E+2, +8.31000E+2, +8.25000E+2, +8.20000E+2, +8.15000E+2, +8.10000E+2, +8.04000E+2, +7.99000E+2, +7.93000E+2, +7.88000E+2, +7.82000E+2, +7.76000E+2, +7.70000E+2, +7.65000E+2, +7.59000E+2, +7.52000E+2, +7.46000E+2, +7.40000E+2, +7.33000E+2, +7.27000E+2, +7.20000E+2, +7.13000E+2, +7.06000E+2, +6.99000E+2])         # kg/m3
        self.specific_heat.data       = np.array([+1.52300E+0, +1.53700E+0, +1.55200E+0, +1.56600E+0, +1.58100E+0, +1.59600E+0, +1.61000E+0, +1.62400E+0, +1.63900E+0, +1.65300E+0, +1.66800E+0, +1.68200E+0, +1.69600E+0, +1.71000E+0, +1.72400E+0, +1.73900E+0, +1.75300E+0, +1.76700E+0, +1.78100E+0, +1.79500E+0, +1.80900E+0, +1.82200E+0, +1.83600E+0, +1.85000E+0, +1.86400E+0, +1.87800E+0, +1.89100E+0, +1.90500E+0, +1.91900E+0, +1.93200E+0, +1.94600E+0, +1.95900E+0, +1.97300E+0, +1.98600E+0, +2.00000E+0, +2.01300E+0, +2.02700E+0, +2.04000E+0, +2.05400E+0, +2.06700E+0, +2.08000E+0, +2.09300E+0, +2.10700E+0, +2.12000E+0, +2.13300E+0, +2.14700E+0, +2.16000E+0, +2.17300E+0, +2.18600E+0, +2.19900E+0, +2.21300E+0, +2.22600E+0, +2.23900E+0, +2.25200E+0, +2.26600E+0, +2.27900E+0, +2.29300E+0, +2.30600E+0, +2.31900E+0, +2.33300E+0, +2.34700E+0, +2.36000E+0, +2.37400E+0, +2.38800E+0, +2.40200E+0, +2.41600E+0, +2.43100E+0, +2.44600E+0, +2.46000E+0, +2.47600E+0, +2.49100E+0, +2.50700E+0, +2.52300E+0, +2.54000E+0, +2.55800E+0, +2.57600E+0, +2.59500E+0, +2.61500E+0])*1000.   # J/kg-K
        self.conductivity.data        = np.array([+1.37000E-1, +1.36600E-1, +1.36100E-1, +1.35600E-1, +1.35200E-1, +1.34700E-1, +1.34200E-1, +1.33600E-1, +1.33100E-1, +1.32600E-1, +1.32000E-1, +1.31500E-1, +1.30900E-1, +1.30400E-1, +1.29800E-1, +1.29200E-1, +1.28600E-1, +1.28000E-1, +1.27400E-1, +1.26800E-1, +1.26200E-1, +1.25600E-1, +1.24900E-1, +1.24300E-1, +1.23600E-1, +1.22900E-1, +1.22300E-1, +1.21600E-1, +1.20900E-1, +1.20200E-1, +1.19500E-1, +1.18700E-1, +1.18000E-1, +1.17300E-1, +1.16500E-1, +1.15800E-1, +1.15000E-1, +1.14200E-1, +1.13500E-1, +1.12700E-1, +1.11900E-1, +1.11100E-1, +1.10300E-1, +1.09400E-1, +1.08600E-1, +1.07800E-1, +1.06900E-1, +1.06000E-1, +1.05200E-1, +1.04300E-1, +1.03400E-1, +1.02500E-1, +1.01600E-1, +1.00700E-1, +9.98000E-2, +9.89000E-2, +9.79000E-2, +9.70000E-2, +9.60000E-2, +9.51000E-2, +9.41000E-2, +9.31000E-2, +9.21000E-2, +9.11000E-2, +9.01000E-2, +8.91000E-2, +8.81000E-2, +8.71000E-2, +8.60000E-2, +8.50000E-2, +8.39000E-2, +8.29000E-2, +8.18000E-2, +8.07000E-2, +7.96000E-2, +7.85000E-2, +7.74000E-2, +7.63000E-2])         # W/m-K
        self.viscosity.data           = np.array([+5.48000E-3, +4.68000E-3, +4.05000E-3, +3.54000E-3, +3.12000E-3, +2.78000E-3, +2.49000E-3, +2.24000E-3, +2.04000E-3, +1.86000E-3, +1.70000E-3, +1.57000E-3, +1.45000E-3, +1.34000E-3, +1.25000E-3, +1.16000E-3, +1.09000E-3, +1.02000E-3, +9.62000E-4, +9.06000E-4, +8.56000E-4, +8.10000E-4, +7.68000E-4, +7.29000E-4, +6.93000E-4, +6.60000E-4, +6.30000E-4, +6.01000E-4, +5.75000E-4, +5.51000E-4, +5.28000E-4, +5.06000E-4, +4.86000E-4, +4.67000E-4, +4.50000E-4, +4.33000E-4, +4.18000E-4, +4.03000E-4, +3.89000E-4, +3.76000E-4, +3.64000E-4, +3.52000E-4, +3.41000E-4, +3.30000E-4, +3.20000E-4, +3.10000E-4, +3.01000E-4, +2.93000E-4, +2.84000E-4, +2.77000E-4, +2.69000E-4, +2.62000E-4, +2.55000E-4, +2.48000E-4, +2.42000E-4, +2.36000E-4, +2.30000E-4, +2.25000E-4, +2.19000E-4, +2.14000E-4, +2.09000E-4, +2.04000E-4, +2.00000E-4, +1.96000E-4, +1.91000E-4, +1.87000E-4, +1.83000E-4, +1.80000E-4, +1.76000E-4, +1.72000E-4, +1.69000E-4, +1.66000E-4, +1.62000E-4, +1.59000E-4, +1.56000E-4, +1.53000E-4, +1.51000E-4, +1.48000E-4])         # Pa-s
        self.saturation_pressure.data = np.array([+5.76000E-4, +9.86000E-4, +1.65000E-3, +2.68000E-3, +4.27000E-3, +6.67000E-3, +1.02000E-2, +1.53000E-2, +2.26000E-2, +3.29000E-2, +4.71000E-2, +6.65000E-2, +9.26000E-2, +1.27000E-1, +1.73000E-1, +2.32000E-1, +3.09000E-1, +4.07000E-1, +5.30000E-1, +6.85000E-1, +8.77000E-1, +1.11000E+0, +1.40000E+0, +1.76000E+0, +2.18000E+0, +2.70000E+0, +3.31000E+0, +4.03000E+0, +4.88000E+0, +5.88000E+0, +7.05000E+0, +8.40000E+0, +9.96000E+0, +1.18000E+1, +1.38000E+1, +1.62000E+1, +1.89000E+1, +2.19000E+1, +2.53000E+1, +2.92000E+1, +3.35000E+1, +3.84000E+1, +4.37000E+1, +4.97000E+1, +5.63000E+1, +6.37000E+1, +7.17000E+1, +8.06000E+1, +9.03000E+1, +1.01000E+2, +1.13000E+2, +1.25000E+2, +1.39000E+2, +1.54000E+2, +1.70000E+2, +1.87000E+2, +2.06000E+2, +2.26000E+2, +2.48000E+2, +2.71000E+2, +2.96000E+2, +3.23000E+2, +3.51000E+2, +3.82000E+2, +4.14000E+2, +4.48000E+2, +4.85000E+2, +5.24000E+2, +5.64000E+2, +6.08000E+2, +6.54000E+2, +7.02000E+2, +7.53000E+2, +8.06000E+2, +8.62000E+2, +9.21000E+2, +9.83000E+2, +1.05000E+3])*1000.   # Pa
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = self.Tmin
        self.name        = "TVP1"
        self.description = "TherminolVP1"
        self.reference   = "Therminol2014"
        self.reshapeAll()


class Therminol66(PureData):
    """
    Heat transfer fluid Therminol 66 by Solutia
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([2.7315E+02, 2.8315E+02, 2.9315E+02, 3.0315E+02, 3.1315E+02, 3.2315E+02, 3.3315E+02, 3.4315E+02, 3.5315E+02, 3.6315E+02, 3.7315E+02, 3.8315E+02, 3.9315E+02, 4.0315E+02, 4.1315E+02, 4.2315E+02, 4.3315E+02, 4.4315E+02, 4.5315E+02, 4.6315E+02, 4.7315E+02, 4.8315E+02, 4.9315E+02, 5.0315E+02, 5.1315E+02, 5.2315E+02, 5.3315E+02, 5.4315E+02, 5.5315E+02, 5.6315E+02, 5.7315E+02, 5.8315E+02, 5.9315E+02, 6.0315E+02, 6.1315E+02, 6.2315E+02, 6.3315E+02, 6.4315E+02, 6.5315E+02])
        self.density.data             = np.array([1.0215E+03, 1.0149E+03, 1.0084E+03, 1.0018E+03, 9.9520E+02, 9.8860E+02, 9.8190E+02, 9.7520E+02, 9.6850E+02, 9.6180E+02, 9.5500E+02, 9.4820E+02, 9.4140E+02, 9.3450E+02, 9.2760E+02, 9.2060E+02, 9.1360E+02, 9.0660E+02, 8.9950E+02, 8.9230E+02, 8.8510E+02, 8.7780E+02, 8.7040E+02, 8.6300E+02, 8.5550E+02, 8.4790E+02, 8.4030E+02, 8.3250E+02, 8.2460E+02, 8.1660E+02, 8.0850E+02, 8.0030E+02, 7.9200E+02, 7.8350E+02, 7.7480E+02, 7.6590E+02, 7.5690E+02, 7.4770E+02, 7.3820E+02])
        self.specific_heat.data       = np.array([1.4950E+03, 1.5290E+03, 1.5620E+03, 1.5960E+03, 1.6300E+03, 1.6650E+03, 1.6990E+03, 1.7330E+03, 1.7680E+03, 1.8030E+03, 1.8370E+03, 1.8730E+03, 1.9080E+03, 1.9430E+03, 1.9780E+03, 2.0140E+03, 2.0500E+03, 2.0860E+03, 2.1220E+03, 2.1580E+03, 2.1950E+03, 2.2310E+03, 2.2680E+03, 2.3050E+03, 2.3420E+03, 2.3790E+03, 2.4170E+03, 2.4550E+03, 2.4920E+03, 2.5310E+03, 2.5690E+03, 2.6080E+03, 2.6470E+03, 2.6860E+03, 2.7260E+03, 2.7660E+03, 2.8060E+03, 2.8470E+03, 2.8890E+03])
        self.conductivity.data        = np.array([1.1800E-01, 1.1800E-01, 1.1800E-01, 1.1700E-01, 1.1700E-01, 1.1600E-01, 1.1600E-01, 1.1500E-01, 1.1500E-01, 1.1400E-01, 1.1400E-01, 1.1300E-01, 1.1200E-01, 1.1100E-01, 1.1100E-01, 1.1000E-01, 1.0900E-01, 1.0800E-01, 1.0700E-01, 1.0700E-01, 1.0600E-01, 1.0500E-01, 1.0400E-01, 1.0300E-01, 1.0200E-01, 1.0000E-01, 9.9000E-02, 9.8000E-02, 9.7000E-02, 9.6000E-02, 9.5000E-02, 9.3000E-02, 9.2000E-02, 9.1000E-02, 8.9000E-02, 8.8000E-02, 8.6000E-02, 8.5000E-02, 8.4000E-02])
        self.viscosity.data           = np.array([1.3249E+00, 3.4426E-01, 1.2347E-01, 5.5600E-02, 2.9500E-02, 1.7640E-02, 1.1530E-02, 8.0600E-03, 5.9300E-03, 4.5500E-03, 3.6000E-03, 2.9200E-03, 2.4200E-03, 2.0500E-03, 1.7500E-03, 1.5200E-03, 1.3400E-03, 1.1800E-03, 1.0600E-03, 9.5000E-04, 8.6000E-04, 7.8000E-04, 7.2000E-04, 6.6000E-04, 6.1000E-04, 5.7000E-04, 5.3000E-04, 4.9000E-04, 4.6000E-04, 4.4000E-04, 4.1000E-04, 3.9000E-04, 3.7000E-04, 3.5000E-04, 3.4000E-04, 3.2000E-04, 3.1000E-04, 3.0000E-04, 2.8000E-04])
        self.saturation_pressure.data = np.array([    np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN, 1.0000E+01, 2.0000E+01, 3.0000E+01, 5.0000E+01, 8.0000E+01, 1.2000E+02, 1.8000E+02, 2.7000E+02, 4.0000E+02, 5.8000E+02, 8.3000E+02, 1.1700E+03, 1.6200E+03, 2.2300E+03, 3.0200E+03, 4.0600E+03, 5.3900E+03, 7.1000E+03, 9.2500E+03, 1.1950E+04, 1.5310E+04, 1.9460E+04, 2.4550E+04, 3.0730E+04, 3.8220E+04, 4.7200E+04, 5.7940E+04, 7.0680E+04, 8.5740E+04, 1.0342E+05, 1.2409E+05, 1.4813E+05])
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = 70+273.15
        self.name        = "T66"
        self.description = "Therminol66"
        self.reference   = "Therminol2014"
        self.reshapeAll()


class Therminol72(PureData):
    """
    Heat transfer fluid Therminol 72 by Solutia
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([-1.00000E+1, -5.00000E+0, +0.00000E+0, +5.00000E+0, +1.00000E+1, +1.50000E+1, +2.00000E+1, +2.50000E+1, +3.00000E+1, +3.50000E+1, +4.00000E+1, +4.50000E+1, +5.00000E+1, +5.50000E+1, +6.00000E+1, +6.50000E+1, +7.00000E+1, +7.50000E+1, +8.00000E+1, +8.50000E+1, +9.00000E+1, +9.50000E+1, +1.00000E+2, +1.05000E+2, +1.10000E+2, +1.15000E+2, +1.20000E+2, +1.25000E+2, +1.30000E+2, +1.35000E+2, +1.40000E+2, +1.45000E+2, +1.50000E+2, +1.55000E+2, +1.60000E+2, +1.65000E+2, +1.70000E+2, +1.75000E+2, +1.80000E+2, +1.85000E+2, +1.90000E+2, +1.95000E+2, +2.00000E+2, +2.05000E+2, +2.10000E+2, +2.15000E+2, +2.20000E+2, +2.25000E+2, +2.30000E+2, +2.35000E+2, +2.40000E+2, +2.45000E+2, +2.50000E+2, +2.55000E+2, +2.60000E+2, +2.65000E+2, +2.70000E+2, +2.75000E+2, +2.80000E+2, +2.85000E+2, +2.90000E+2, +2.95000E+2, +3.00000E+2, +3.05000E+2, +3.10000E+2, +3.15000E+2, +3.20000E+2, +3.25000E+2, +3.30000E+2, +3.35000E+2, +3.40000E+2, +3.45000E+2, +3.50000E+2, +3.55000E+2, +3.60000E+2, +3.65000E+2, +3.70000E+2, +3.75000E+2, +3.80000E+2])+273.15  # Kelvin
        self.density.data             = np.array([+1.11000E+3, +1.10000E+3, +1.10000E+3, +1.09000E+3, +1.09000E+3, +1.08000E+3, +1.08000E+3, +1.07000E+3, +1.07000E+3, +1.07000E+3, +1.06000E+3, +1.06000E+3, +1.05000E+3, +1.05000E+3, +1.04000E+3, +1.04000E+3, +1.03000E+3, +1.03000E+3, +1.02000E+3, +1.02000E+3, +1.02000E+3, +1.01000E+3, +1.01000E+3, +1.00000E+3, +9.97000E+2, +9.93000E+2, +9.88000E+2, +9.84000E+2, +9.79000E+2, +9.74000E+2, +9.70000E+2, +9.65000E+2, +9.61000E+2, +9.56000E+2, +9.52000E+2, +9.47000E+2, +9.43000E+2, +9.38000E+2, +9.34000E+2, +9.29000E+2, +9.25000E+2, +9.20000E+2, +9.16000E+2, +9.11000E+2, +9.06000E+2, +9.02000E+2, +8.98000E+2, +8.93000E+2, +8.89000E+2, +8.84000E+2, +8.80000E+2, +8.75000E+2, +8.71000E+2, +8.66000E+2, +8.62000E+2, +8.57000E+2, +8.53000E+2, +8.48000E+2, +8.44000E+2, +8.39000E+2, +8.34000E+2, +8.30000E+2, +8.25000E+2, +8.21000E+2, +8.16000E+2, +8.12000E+2, +8.07000E+2, +8.03000E+2, +7.98000E+2, +7.94000E+2, +7.89000E+2, +7.85000E+2, +7.80000E+2, +7.76000E+2, +7.71000E+2, +7.66000E+2, +7.62000E+2, +7.57000E+2, +7.53000E+2])         # kg/m3
        self.specific_heat.data       = np.array([+1.47100E+0, +1.48400E+0, +1.49800E+0, +1.51200E+0, +1.52500E+0, +1.53900E+0, +1.55200E+0, +1.56600E+0, +1.57900E+0, +1.59300E+0, +1.60600E+0, +1.62000E+0, +1.63400E+0, +1.64700E+0, +1.66100E+0, +1.67400E+0, +1.68800E+0, +1.70100E+0, +1.71500E+0, +1.72800E+0, +1.74200E+0, +1.75500E+0, +1.76900E+0, +1.78300E+0, +1.79600E+0, +1.81000E+0, +1.82300E+0, +1.83700E+0, +1.85000E+0, +1.86400E+0, +1.87700E+0, +1.89100E+0, +1.90500E+0, +1.91800E+0, +1.93200E+0, +1.94500E+0, +1.95900E+0, +1.97200E+0, +1.98600E+0, +1.99900E+0, +2.01300E+0, +2.02600E+0, +2.04000E+0, +2.05400E+0, +2.06700E+0, +2.08100E+0, +2.09400E+0, +2.10800E+0, +2.12100E+0, +2.13500E+0, +2.14800E+0, +2.16200E+0, +2.17600E+0, +2.18900E+0, +2.20300E+0, +2.21600E+0, +2.23000E+0, +2.24300E+0, +2.25700E+0, +2.27000E+0, +2.28400E+0, +2.29700E+0, +2.31100E+0, +2.32500E+0, +2.33800E+0, +2.35200E+0, +2.36500E+0, +2.37900E+0, +2.39200E+0, +2.40600E+0, +2.41900E+0, +2.43300E+0, +2.44600E+0, +2.46000E+0, +2.47400E+0, +2.48700E+0, +2.50100E+0, +2.51400E+0, +2.52800E+0])*1000.   # J/kg-K
        self.conductivity.data        = np.array([+1.43200E-1, +1.42600E-1, +1.42000E-1, +1.41400E-1, +1.40800E-1, +1.40200E-1, +1.39600E-1, +1.39000E-1, +1.38400E-1, +1.37800E-1, +1.37100E-1, +1.36500E-1, +1.35900E-1, +1.35300E-1, +1.34700E-1, +1.34100E-1, +1.33500E-1, +1.32900E-1, +1.32300E-1, +1.31700E-1, +1.31100E-1, +1.30500E-1, +1.29900E-1, +1.29300E-1, +1.28700E-1, +1.28000E-1, +1.27400E-1, +1.26800E-1, +1.26200E-1, +1.25600E-1, +1.25000E-1, +1.24400E-1, +1.23800E-1, +1.23200E-1, +1.22600E-1, +1.22000E-1, +1.21400E-1, +1.20800E-1, +1.20200E-1, +1.19600E-1, +1.18900E-1, +1.18300E-1, +1.17700E-1, +1.17100E-1, +1.16500E-1, +1.15900E-1, +1.15300E-1, +1.14700E-1, +1.14100E-1, +1.13500E-1, +1.12900E-1, +1.12300E-1, +1.11700E-1, +1.11100E-1, +1.10500E-1, +1.09800E-1, +1.09200E-1, +1.08600E-1, +1.08000E-1, +1.07400E-1, +1.06800E-1, +1.06200E-1, +1.05600E-1, +1.05000E-1, +1.04400E-1, +1.03800E-1, +1.03200E-1, +1.02600E-1, +1.02000E-1, +1.01400E-1, +1.00700E-1, +1.00100E-1, +9.95000E-2, +9.89000E-2, +9.83000E-2, +9.77000E-2, +9.71000E-2, +9.65000E-2, +9.59000E-2])         # W/m-K
        self.viscosity.data           = np.array([+3.83000E-1, +1.19000E-1, +5.92000E-2, +3.60000E-2, +2.44000E-2, +1.77000E-2, +1.35000E-2, +1.07000E-2, +8.68000E-3, +7.21000E-3, +6.09000E-3, +5.21000E-3, +4.52000E-3, +3.96000E-3, +3.50000E-3, +3.12000E-3, +2.79000E-3, +2.52000E-3, +2.28000E-3, +2.08000E-3, +1.90000E-3, +1.75000E-3, +1.61000E-3, +1.49000E-3, +1.38000E-3, +1.29000E-3, +1.20000E-3, +1.12000E-3, +1.05000E-3, +9.86000E-4, +9.28000E-4, +8.74000E-4, +8.25000E-4, +7.79000E-4, +7.38000E-4, +6.99000E-4, +6.64000E-4, +6.31000E-4, +6.00000E-4, +5.72000E-4, +5.45000E-4, +5.20000E-4, +4.97000E-4, +4.75000E-4, +4.55000E-4, +4.36000E-4, +4.18000E-4, +4.01000E-4, +3.85000E-4, +3.70000E-4, +3.55000E-4, +3.42000E-4, +3.29000E-4, +3.17000E-4, +3.05000E-4, +2.95000E-4, +2.84000E-4, +2.74000E-4, +2.65000E-4, +2.56000E-4, +2.47000E-4, +2.39000E-4, +2.31000E-4, +2.24000E-4, +2.17000E-4, +2.10000E-4, +2.03000E-4, +1.97000E-4, +1.91000E-4, +1.85000E-4, +1.80000E-4, +1.75000E-4, +1.69000E-4, +1.65000E-4, +1.60000E-4, +1.55000E-4, +1.51000E-4, +1.47000E-4, +1.43000E-4])         # Pa-s
        self.saturation_pressure.data = np.array([+9.60000E-1, +1.05000E+0, +1.14000E+0, +1.24000E+0, +1.35000E+0, +1.47000E+0, +1.60000E+0, +1.74000E+0, +1.89000E+0, +2.06000E+0, +2.24000E+0, +2.44000E+0, +2.65000E+0, +2.88000E+0, +3.14000E+0, +3.41000E+0, +3.71000E+0, +4.03000E+0, +4.39000E+0, +4.77000E+0, +5.18000E+0, +5.63000E+0, +6.12000E+0, +6.66000E+0, +7.23000E+0, +7.86000E+0, +8.54000E+0, +9.27000E+0, +1.01000E+1, +1.10000E+1, +1.19000E+1, +1.29000E+1, +1.40000E+1, +1.52000E+1, +1.65000E+1, +1.80000E+1, +1.95000E+1, +2.12000E+1, +2.30000E+1, +2.49000E+1, +2.71000E+1, +2.94000E+1, +3.19000E+1, +3.46000E+1, +3.75000E+1, +4.07000E+1, +4.42000E+1, +4.79000E+1, +5.20000E+1, +5.64000E+1, +6.11000E+1, +6.63000E+1, +7.19000E+1, +7.79000E+1, +8.45000E+1, +9.15000E+1, +9.92000E+1, +1.08000E+2, +1.17000E+2, +1.26000E+2, +1.37000E+2, +1.48000E+2, +1.61000E+2, +1.74000E+2, +1.89000E+2, +2.04000E+2, +2.21000E+2, +2.40000E+2, +2.60000E+2, +2.81000E+2, +3.04000E+2, +3.30000E+2, +3.57000E+2, +3.86000E+2, +4.18000E+2, +4.53000E+2, +4.90000E+2, +5.30000E+2, +5.74000E+2])*1000.   # Pa
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = self.Tmin
        self.name        = "T72"
        self.description = "Therminol72"
        self.reference   = "Therminol2014"
        self.reshapeAll()



class DowthermJ(PureData):
    """
    Heat transfer fluid Dowtherm J by Dow Chemicals
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([-8.00000E+1, -7.00000E+1, -6.00000E+1, -5.00000E+1, -4.00000E+1, -3.00000E+1, -2.00000E+1, -1.00000E+1, +0.00000E+0, +1.00000E+1, +2.00000E+1, +3.00000E+1, +4.00000E+1, +5.00000E+1, +6.00000E+1, +7.00000E+1, +8.00000E+1, +9.00000E+1, +1.00000E+2, +1.10000E+2, +1.20000E+2, +1.30000E+2, +1.40000E+2, +1.50000E+2, +1.60000E+2, +1.70000E+2, +1.80000E+2, +1.81300E+2, +1.90000E+2, +2.00000E+2, +2.10000E+2, +2.20000E+2, +2.30000E+2, +2.40000E+2, +2.50000E+2, +2.60000E+2, +2.70000E+2, +2.80000E+2, +2.90000E+2, +3.00000E+2, +3.10000E+2, +3.20000E+2, +3.30000E+2, +3.40000E+2, +3.45000E+2])+273.15  # Kelvin
        self.density.data             = np.array([+9.31300E+2, +9.27900E+2, +9.21000E+2, +9.14100E+2, +9.07100E+2, +9.00000E+2, +8.92900E+2, +8.85700E+2, +8.78500E+2, +8.71100E+2, +8.63700E+2, +8.56200E+2, +8.48700E+2, +8.41000E+2, +8.33200E+2, +8.25400E+2, +8.17400E+2, +8.09400E+2, +8.01200E+2, +7.92900E+2, +7.84400E+2, +7.75900E+2, +7.67100E+2, +7.58300E+2, +7.49200E+2, +7.40000E+2, +7.30600E+2, +7.29300E+2, +7.20900E+2, +7.11000E+2, +7.00900E+2, +6.90500E+2, +6.79800E+2, +6.68800E+2, +6.57300E+2, +6.45500E+2, +6.33100E+2, +6.20200E+2, +6.06600E+2, +5.92200E+2, +5.76900E+2, +5.60400E+2, +5.42400E+2, +5.22400E+2, +5.11400E+2])         # kg/m3
        self.specific_heat.data       = np.array([+1.58400E+0, +1.59400E+0, +1.61600E+0, +1.63900E+0, +1.66300E+0, +1.68800E+0, +1.71400E+0, +1.74100E+0, +1.76900E+0, +1.79800E+0, +1.82800E+0, +1.85900E+0, +1.89000E+0, +1.92300E+0, +1.95500E+0, +1.98900E+0, +2.02300E+0, +2.05800E+0, +2.09300E+0, +2.12900E+0, +2.16500E+0, +2.20200E+0, +2.23900E+0, +2.27700E+0, +2.31500E+0, +2.35300E+0, +2.39200E+0, +2.39700E+0, +2.43200E+0, +2.47200E+0, +2.51200E+0, +2.55300E+0, +2.59400E+0, +2.63600E+0, +2.68000E+0, +2.72400E+0, +2.76900E+0, +2.81600E+0, +2.86600E+0, +2.91900E+0, +2.97600E+0, +3.04000E+0, +3.11500E+0, +3.20800E+0, +3.26500E+0])*1000.   # J/kg-K
        self.conductivity.data        = np.array([+1.48500E-1, +1.47500E-1, +1.45300E-1, +1.43200E-1, +1.41100E-1, +1.39000E-1, +1.36800E-1, +1.34700E-1, +1.32600E-1, +1.30500E-1, +1.28400E-1, +1.26200E-1, +1.24100E-1, +1.22000E-1, +1.19900E-1, +1.17700E-1, +1.15600E-1, +1.13500E-1, +1.11400E-1, +1.09300E-1, +1.07100E-1, +1.05000E-1, +1.02900E-1, +1.00800E-1, +9.87000E-2, +9.65000E-2, +9.44000E-2, +9.41000E-2, +9.23000E-2, +9.02000E-2, +8.80000E-2, +8.59000E-2, +8.38000E-2, +8.17000E-2, +7.96000E-2, +7.74000E-2, +7.53000E-2, +7.32000E-2, +7.11000E-2, +6.90000E-2, +6.68000E-2, +6.47000E-2, +6.26000E-2, +6.05000E-2, +5.94000E-2])         # W/m-K
        self.viscosity.data           = np.array([+8.43000E+0, +7.11000E+0, +5.12000E+0, +3.78000E+0, +2.88000E+0, +2.25000E+0, +1.80000E+0, +1.48000E+0, +1.23000E+0, +1.05000E+0, +9.10000E-1, +7.90000E-1, +7.00000E-1, +6.30000E-1, +5.60000E-1, +5.10000E-1, +4.70000E-1, +4.30000E-1, +4.00000E-1, +3.70000E-1, +3.50000E-1, +3.30000E-1, +3.10000E-1, +2.90000E-1, +2.80000E-1, +2.70000E-1, +2.50000E-1, +2.50000E-1, +2.40000E-1, +2.30000E-1, +2.30000E-1, +2.20000E-1, +2.10000E-1, +2.00000E-1, +2.00000E-1, +1.90000E-1, +1.80000E-1, +1.80000E-1, +1.70000E-1, +1.70000E-1, +1.70000E-1, +1.60000E-1, +1.60000E-1, +1.60000E-1, +1.50000E-1])/1000.   # Pa-s
        self.saturation_pressure.data = np.array([     np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN, +5.00000E-3, +1.00000E-2, +2.00000E-2, +3.00000E-2, +5.00000E-2, +8.00000E-2, +1.10000E-1, +1.60000E-1, +2.30000E-1, +3.20000E-1, +4.30000E-1, +5.80000E-1, +7.60000E-1, +9.80000E-1, +1.01000E+0, +1.25000E+0, +1.58000E+0, +1.97000E+0, +2.43000E+0, +2.96000E+0, +3.59000E+0, +4.30000E+0, +5.13000E+0, +6.06000E+0, +7.12000E+0, +8.31000E+0, +9.64000E+0, +1.11300E+1, +1.27900E+1, +1.46400E+1, +1.66900E+1, +1.78000E+1])*1e5     # Pa
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = 50 + 273.15
        self.name        = "DowJ"
        self.description = "DowthermJ"
        self.reference   = "Dow1997"
        self.reshapeAll()

class DowthermQ(PureData):
    """
    Heat transfer fluid Dowtherm Q by Dow Chemicals
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([-3.50000E+1, -3.00000E+1, -2.00000E+1, -1.00000E+1, +0.00000E+0, +1.00000E+1, +2.00000E+1, +3.00000E+1, +4.00000E+1, +5.00000E+1, +6.00000E+1, +7.00000E+1, +8.00000E+1, +9.00000E+1, +1.00000E+2, +1.10000E+2, +1.20000E+2, +1.30000E+2, +1.40000E+2, +1.50000E+2, +1.60000E+2, +1.70000E+2, +1.80000E+2, +1.90000E+2, +2.00000E+2, +2.10000E+2, +2.20000E+2, +2.30000E+2, +2.40000E+2, +2.50000E+2, +2.60000E+2, +2.70000E+2, +2.80000E+2, +2.90000E+2, +3.00000E+2, +3.10000E+2, +3.20000E+2, +3.30000E+2, +3.40000E+2, +3.50000E+2, +3.60000E+2])+273.15  # Kelvin
        self.density.data             = np.array([+1.01140E+3, +1.00320E+3, +9.95600E+2, +9.88000E+2, +9.80500E+2, +9.72900E+2, +9.65400E+2, +9.57800E+2, +9.50200E+2, +9.42700E+2, +9.35100E+2, +9.27600E+2, +9.20000E+2, +9.12400E+2, +9.04900E+2, +8.97300E+2, +8.89800E+2, +8.82200E+2, +8.74600E+2, +8.67100E+2, +8.59500E+2, +8.52000E+2, +8.44400E+2, +8.36800E+2, +8.29300E+2, +8.21700E+2, +8.14200E+2, +8.06600E+2, +7.99000E+2, +7.91500E+2, +7.83900E+2, +7.76400E+2, +7.68800E+2, +7.61200E+2, +7.53700E+2, +7.46100E+2, +7.38600E+2, +7.31000E+2, +7.23400E+2, +7.15900E+2, +7.08300E+2])         # kg/m3
        self.specific_heat.data       = np.array([+1.47800E+0, +1.49200E+0, +1.52500E+0, +1.55700E+0, +1.58900E+0, +1.62100E+0, +1.65300E+0, +1.68500E+0, +1.71600E+0, +1.74800E+0, +1.77900E+0, +1.81100E+0, +1.84200E+0, +1.87300E+0, +1.90400E+0, +1.93500E+0, +1.96600E+0, +1.99700E+0, +2.02700E+0, +2.05800E+0, +2.08800E+0, +2.11800E+0, +2.14800E+0, +2.17800E+0, +2.20800E+0, +2.23800E+0, +2.26800E+0, +2.29700E+0, +2.32700E+0, +2.35600E+0, +2.38600E+0, +2.41500E+0, +2.44400E+0, +2.47300E+0, +2.50200E+0, +2.53000E+0, +2.55900E+0, +2.58700E+0, +2.61600E+0, +2.64400E+0, +2.67200E+0])*1000.   # J/kg-K
        self.conductivity.data        = np.array([+1.28000E-1, +1.27700E-1, +1.26600E-1, +1.25500E-1, +1.24400E-1, +1.23200E-1, +1.22000E-1, +1.20800E-1, +1.19500E-1, +1.18300E-1, +1.17000E-1, +1.15600E-1, +1.14300E-1, +1.12900E-1, +1.11500E-1, +1.10100E-1, +1.08700E-1, +1.07200E-1, +1.05800E-1, +1.04300E-1, +1.02800E-1, +1.01300E-1, +9.98000E-2, +9.82000E-2, +9.67000E-2, +9.52000E-2, +9.36000E-2, +9.21000E-2, +9.05000E-2, +8.89000E-2, +8.74000E-2, +8.58000E-2, +8.43000E-2, +8.27000E-2, +8.11000E-2, +7.96000E-2, +7.80000E-2, +7.65000E-2, +7.49000E-2, +7.34000E-2, +7.19000E-2])         # W/m-K
        self.viscosity.data           = np.array([+4.66000E+1, +2.42000E+1, +1.61000E+1, +1.09000E+1, +7.56000E+0, +5.42000E+0, +4.00000E+0, +3.04000E+0, +2.37000E+0, +1.89000E+0, +1.54000E+0, +1.28000E+0, +1.07000E+0, +9.20000E-1, +8.00000E-1, +7.00000E-1, +6.20000E-1, +5.50000E-1, +5.00000E-1, +4.50000E-1, +4.10000E-1, +3.80000E-1, +3.50000E-1, +3.30000E-1, +3.10000E-1, +2.90000E-1, +2.70000E-1, +2.60000E-1, +2.40000E-1, +2.30000E-1, +2.20000E-1, +2.10000E-1, +2.00000E-1, +1.90000E-1, +1.90000E-1, +1.80000E-1, +1.70000E-1, +1.70000E-1, +1.60000E-1, +1.60000E-1, +1.50000E-1])/1000.   # Pa-s
        self.saturation_pressure.data = np.array([     np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN,      np.NAN, +5.00000E-3, +1.00000E-2, +2.00000E-2, +3.00000E-2, +5.00000E-2, +7.00000E-2, +9.00000E-2, +1.30000E-1, +1.70000E-1, +2.30000E-1, +3.10000E-1, +4.00000E-1, +5.10000E-1, +6.40000E-1, +8.10000E-1, +1.00000E+0, +1.24000E+0, +1.51000E+0, +1.82000E+0, +2.19000E+0, +2.61000E+0, +3.09000E+0, +3.64000E+0, +4.25000E+0, +4.95000E+0])*1e5     # Pa
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = 120 + 273.15
        self.name        = "DowQ"
        self.description = "DowthermQ"
        self.reference   = "Dow1997"
        self.reshapeAll()


class Texatherm22(PureData):
    """
    Heat transfer fluid Texatherm 22 by Texaco
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([+0.00000E+0, +4.00000E+1, +5.00000E+1, +1.00000E+2, +1.50000E+2, +2.00000E+2, +2.50000E+2, +3.00000E+2, +3.50000E+2])+273.15  # Kelvin
        self.density.data             = np.array([+8.74500E+2, +8.47300E+2, +8.42500E+2, +8.10500E+2, +7.76300E+2, +7.41600E+2, +7.03200E+2, +6.68000E+2, +6.21500E+2])         # kg/m3
        self.specific_heat.data       = np.array([+1.81000E+0, +1.95000E+0, +1.99000E+0, +2.18000E+0, +2.36000E+0, +2.54000E+0, +2.72000E+0, +2.90000E+0, +3.08000E+0])*1e3     # J/kg-K
        self.conductivity.data        = np.array([+1.35000E-1, +1.32000E-1, +1.32000E-1, +1.28000E-1, +1.25000E-1, +1.21000E-1, +1.17100E-1, +1.13000E-1, +1.10000E-1])         # W/m-K
        self.viscosity.data           = np.array([+4.19760E+2,      np.NAN, +2.31688E+1,      np.NAN, +2.09601E+0, +1.26072E+0,      np.NAN,      np.NAN,      np.NAN])/1000.   # Pa-s
        self.saturation_pressure.data = np.array([     np.NAN, +5.3300E-10, +4.00000E-8, +2.67000E-7, +2.27000E-5, +4.67000E-4, +6.67000E-3, +2.13000E-2, +5.33000E-2])*1e5     # Pa
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = 40 + 273.15
        self.name        = "TX22"
        self.description = "Texatherm22"
        self.reference   = "Chevron2004"
        self.reshapeAll()


class SylthermXLT(PureData):
    """
    Heat transfer fluid Syltherm XLT by Dow Chemicals
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.temperature.data         = np.array([-1.00000E+2, -9.50000E+1, -9.00000E+1, -8.50000E+1, -8.00000E+1, -7.50000E+1, -7.00000E+1, -6.50000E+1, -6.00000E+1, -5.50000E+1, -5.00000E+1, -4.50000E+1, -4.00000E+1, -3.50000E+1, -3.00000E+1, -2.50000E+1, -2.00000E+1, -1.50000E+1, -1.00000E+1, -5.00000E+0, +0.00000E+0, +5.00000E+0, +1.00000E+1, +1.50000E+1, +2.00000E+1, +2.50000E+1, +3.00000E+1, +3.50000E+1, +4.00000E+1, +4.50000E+1, +5.00000E+1, +5.50000E+1, +6.00000E+1, +6.50000E+1, +7.00000E+1, +7.50000E+1, +8.00000E+1, +8.50000E+1, +9.00000E+1, +9.50000E+1, +1.00000E+2, +1.05000E+2, +1.10000E+2, +1.15000E+2, +1.20000E+2, +1.25000E+2, +1.30000E+2, +1.35000E+2, +1.40000E+2, +1.45000E+2, +1.50000E+2, +1.55000E+2, +1.60000E+2, +1.65000E+2, +1.70000E+2, +1.75000E+2, +1.80000E+2, +1.85000E+2, +1.90000E+2, +1.95000E+2, +2.00000E+2, +2.05000E+2, +2.10000E+2, +2.15000E+2, +2.20000E+2, +2.25000E+2, +2.30000E+2, +2.35000E+2, +2.40000E+2, +2.45000E+2, +2.50000E+2, +2.55000E+2, +2.60000E+2])+273.15  # Kelvin
        self.density.data             = np.array([+9.78500E+2, +9.73400E+2, +9.68300E+2, +9.63100E+2, +9.58000E+2, +9.52900E+2, +9.47700E+2, +9.42600E+2, +9.37500E+2, +9.32300E+2, +9.27200E+2, +9.22000E+2, +9.16900E+2, +9.11800E+2, +9.06600E+2, +9.01500E+2, +8.96400E+2, +8.91200E+2, +8.86100E+2, +8.81000E+2, +8.75800E+2, +8.70700E+2, +8.65500E+2, +8.60400E+2, +8.55300E+2, +8.50100E+2, +8.45000E+2, +8.39900E+2, +8.34700E+2, +8.29600E+2, +8.24500E+2, +8.19300E+2, +8.14200E+2, +8.09100E+2, +8.03900E+2, +7.98800E+2, +7.93600E+2, +7.88500E+2, +7.83400E+2, +7.78200E+2, +7.73100E+2, +7.68000E+2, +7.62800E+2, +7.57700E+2, +7.52600E+2, +7.47400E+2, +7.42300E+2, +7.37200E+2, +7.32000E+2, +7.26900E+2, +7.21700E+2, +7.16600E+2, +7.11500E+2, +7.06300E+2, +7.01200E+2, +6.96100E+2, +6.90900E+2, +6.85800E+2, +6.80700E+2, +6.75500E+2, +6.70400E+2, +6.65300E+2, +6.60100E+2, +6.55000E+2, +6.49800E+2, +6.44700E+2, +6.39600E+2, +6.34400E+2, +6.29300E+2, +6.24200E+2, +6.19000E+2, +6.13900E+2, +6.08800E+2])         # kg/m3
        self.specific_heat.data       = np.array([+1.52000E+0, +1.53000E+0, +1.54100E+0, +1.55100E+0, +1.56200E+0, +1.57200E+0, +1.58300E+0, +1.59300E+0, +1.60400E+0, +1.61400E+0, +1.62500E+0, +1.63500E+0, +1.64600E+0, +1.65600E+0, +1.66700E+0, +1.67700E+0, +1.68800E+0, +1.69800E+0, +1.70900E+0, +1.71900E+0, +1.73000E+0, +1.74000E+0, +1.75100E+0, +1.76100E+0, +1.77200E+0, +1.78200E+0, +1.79300E+0, +1.80300E+0, +1.81400E+0, +1.82400E+0, +1.83500E+0, +1.84500E+0, +1.85600E+0, +1.86600E+0, +1.87700E+0, +1.88700E+0, +1.89800E+0, +1.90800E+0, +1.91900E+0, +1.92900E+0, +1.94000E+0, +1.95000E+0, +1.96100E+0, +1.97100E+0, +1.98200E+0, +1.99200E+0, +2.00300E+0, +2.01300E+0, +2.02400E+0, +2.03400E+0, +2.04500E+0, +2.05500E+0, +2.06600E+0, +2.07600E+0, +2.08700E+0, +2.09700E+0, +2.10800E+0, +2.11800E+0, +2.12900E+0, +2.13900E+0, +2.15000E+0, +2.16000E+0, +2.17100E+0, +2.18100E+0, +2.19200E+0, +2.20200E+0, +2.21300E+0, +2.22300E+0, +2.23400E+0, +2.24400E+0, +2.25500E+0, +2.26500E+0, +2.27600E+0])*1e3     # J/kg-K
        self.conductivity.data        = np.array([+1.34100E-1, +1.33200E-1, +1.32400E-1, +1.31500E-1, +1.30600E-1, +1.29700E-1, +1.28800E-1, +1.27900E-1, +1.26900E-1, +1.26000E-1, +1.25000E-1, +1.24100E-1, +1.23100E-1, +1.22100E-1, +1.21100E-1, +1.20100E-1, +1.19100E-1, +1.18100E-1, +1.17100E-1, +1.16100E-1, +1.15000E-1, +1.14000E-1, +1.12900E-1, +1.11900E-1, +1.10800E-1, +1.09700E-1, +1.08600E-1, +1.07500E-1, +1.06400E-1, +1.05300E-1, +1.04200E-1, +1.03000E-1, +1.01900E-1, +1.00800E-1, +9.96000E-2, +9.84400E-2, +9.72800E-2, +9.61000E-2, +9.49200E-2, +9.37300E-2, +9.25300E-2, +9.13300E-2, +9.01200E-2, +8.89100E-2, +8.76800E-2, +8.64500E-2, +8.52200E-2, +8.39800E-2, +8.27300E-2, +8.14700E-2, +8.02100E-2, +7.89500E-2, +7.76700E-2, +7.64000E-2, +7.51100E-2, +7.38200E-2, +7.25300E-2, +7.12300E-2, +6.99200E-2, +6.86100E-2, +6.72900E-2, +6.59700E-2, +6.46500E-2, +6.33100E-2, +6.19800E-2, +6.06400E-2, +5.92900E-2, +5.79400E-2, +5.65800E-2, +5.52300E-2, +5.38600E-2, +5.24900E-2, +5.11200E-2])         # W/m-K
        self.viscosity.data           = np.array([+7.86100E+1, +5.01300E+1, +3.48600E+1, +2.58300E+1, +2.00400E+1, +1.60800E+1, +1.32200E+1, +1.10500E+1, +9.35600E+0, +7.99400E+0, +6.87900E+0, +5.95600E+0, +5.18400E+0, +4.53500E+0, +3.98600E+0, +3.52100E+0, +3.12600E+0, +2.78800E+0, +2.49900E+0, +2.25000E+0, +2.03500E+0, +1.84900E+0, +1.68700E+0, +1.54500E+0, +1.41900E+0, +1.30900E+0, +1.21000E+0, +1.12200E+0, +1.04300E+0, +9.72000E-1, +9.08000E-1, +8.49000E-1, +7.96000E-1, +7.48000E-1, +7.05000E-1, +6.65000E-1, +6.28000E-1, +5.95000E-1, +5.64000E-1, +5.36000E-1, +5.11000E-1, +4.87000E-1, +4.65000E-1, +4.45000E-1, +4.26000E-1, +4.09000E-1, +3.93000E-1, +3.77000E-1, +3.63000E-1, +3.50000E-1, +3.37000E-1, +3.25000E-1, +3.14000E-1, +3.03000E-1, +2.93000E-1, +2.84000E-1, +2.75000E-1, +2.66000E-1, +2.58000E-1, +2.51000E-1, +2.44000E-1, +2.38000E-1, +2.32000E-1, +2.26000E-1, +2.20000E-1, +2.15000E-1, +2.09000E-1, +2.04000E-1, +1.99000E-1, +1.94000E-1, +1.89000E-1, +1.85000E-1, +1.82000E-1])/1000.   # Pa-s
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = self.Tmax
        self.name        = "XLT"
        self.description = "SylthermXLT"
        self.reference   = "Dow1997"
        self.reshapeAll()


class HC50(PureData):
    """
    Heat transfer fluid Dynalene HC-50
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([+2.23150E+2,+2.33150E+2,+2.43150E+2,+2.53150E+2,+2.63150E+2,+2.73150E+2,+2.83150E+2,+2.93150E+2,+3.03150E+2,+3.13150E+2,+3.23150E+2,+3.33150E+2,+3.43150E+2,+3.53150E+2,+3.63150E+2,+3.73150E+2,+3.83150E+2,+3.93150E+2,+4.03150E+2,+4.13150E+2,+4.23150E+2,+4.33150E+2,+4.43150E+2,+4.53150E+2,+4.63150E+2,+4.73150E+2,+4.83150E+2]) # Kelvin
        self.density.data             = np.array([+1.37800E+3,+1.37300E+3,+1.36700E+3,+1.36200E+3,+1.35600E+3,+1.35100E+3,+1.34500E+3,+1.34000E+3,+1.33400E+3,+1.32800E+3,+1.32300E+3,+1.31700E+3,+1.31200E+3,+1.30600E+3,+1.30100E+3,+1.29500E+3,+1.29000E+3,+1.28400E+3,+1.27900E+3,+1.27300E+3,+1.26700E+3,+1.26200E+3,+1.25600E+3,+1.25100E+3,+1.24500E+3,+1.24000E+3,+1.23400E+3]) # kg/m3
        self.specific_heat.data       = np.array([+2.56300E+3,+2.58300E+3,+2.60200E+3,+2.62200E+3,+2.64200E+3,+2.66100E+3,+2.68100E+3,+2.70100E+3,+2.72000E+3,+2.74000E+3,+2.76000E+3,+2.78000E+3,+2.79900E+3,+2.81900E+3,+2.83900E+3,+2.85800E+3,+2.87800E+3,+2.89800E+3,+2.91700E+3,+2.93700E+3,+2.95700E+3,+2.97700E+3,+2.99600E+3,+3.01600E+3,+3.03600E+3,+3.05500E+3,+3.07500E+3]) # J/kg-K
        self.conductivity.data        = np.array([+4.35000E+2,+4.45000E+2,+4.55000E+2,+4.65000E+2,+4.75000E+2,+4.85000E+2,+4.95000E+2,+5.05000E+2,+5.15000E+2,+5.25000E+2,+5.35000E+2,+5.45000E+2,+5.55000E+2,+5.65000E+2,+5.75000E+2,+5.85000E+2,+5.95000E+2,+6.05000E+2,+6.15000E+2,+6.25000E+2,+6.35000E+2,+6.45000E+2,+6.55000E+2,+6.65000E+2,+6.75000E+2,+6.85000E+2,+6.94500E+2])/1e3 # W/m-K
        self.viscosity.data           = np.array([+3.84000E-2,+2.04000E-2,+1.25000E-2,+8.40000E-3,+5.99000E-3,+4.70000E-3,+3.80000E-3,+3.20000E-3,+2.70000E-3,+2.40000E-3,+2.10000E-3,+1.80000E-3,+1.60000E-3,+1.50000E-3,+1.30000E-3,+1.20000E-3,+1.10000E-3,+1.00000E-3,+9.40000E-4,+8.70000E-4,+8.10000E-4,+7.60000E-4,+7.10000E-4,+6.60000E-4,+6.20000E-4,+5.80000E-4,+5.50000E-4]) # Pa-s
        self.saturation_pressure.data = np.array([     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,+1.58579E+3,+1.93053E+3,+3.10264E+3,+5.58475E+3,+9.85950E+3,+1.64785E+4,+2.60622E+4,+3.93691E+4,+5.72954E+4,+8.06687E+4,+1.11695E+5,+1.50995E+5,+2.00637E+5,+2.63380E+5,+3.41290E+5,+4.36438E+5,+5.53649E+5,+6.95681E+5,+8.67360E+5,+1.07282E+6]) # Pa
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = 20+273.15
        self.name        = "HC50"
        self.description = "Dynalene "+ self.name
        self.reference   = "Dynalene2014"
        self.reshapeAll()


class HC40(PureData):
    """
    Heat transfer fluid Dynalene HC-40
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([+2.33150E+2,+2.43150E+2,+2.53150E+2,+2.63150E+2,+2.73150E+2,+2.83150E+2,+2.93150E+2,+3.03150E+2,+3.13150E+2,+3.23150E+2,+3.33150E+2,+3.43150E+2,+3.53150E+2,+3.63150E+2,+3.73150E+2,+3.83150E+2,+3.93150E+2,+4.03150E+2,+4.13150E+2,+4.23150E+2,+4.33150E+2,+4.38150E+2,+4.43150E+2,+4.53150E+2,+4.63150E+2,+4.73150E+2]) # Kelvin
        self.density.data             = np.array([+1.34800E+3,+1.34300E+3,+1.33700E+3,+1.33200E+3,+1.32600E+3,+1.32100E+3,+1.31500E+3,+1.30900E+3,+1.30400E+3,+1.29800E+3,+1.29300E+3,+1.28700E+3,+1.28100E+3,+1.27600E+3,+1.27000E+3,+1.26500E+3,+1.25900E+3,+1.25300E+3,+1.24800E+3,+1.24200E+3,+1.23700E+3,+1.23400E+3,+1.23100E+3,+1.22500E+3,+1.22000E+3,+1.21400E+3]) # kg/m3
        self.specific_heat.data       = np.array([+2.80000E+3,+2.82000E+3,+2.84000E+3,+2.87000E+3,+2.89000E+3,+2.91000E+3,+2.93000E+3,+2.96000E+3,+2.98000E+3,+3.00000E+3,+3.03000E+3,+3.05000E+3,+3.07000E+3,+3.09000E+3,+3.12000E+3,+3.14000E+3,+3.16000E+3,+3.19000E+3,+3.21000E+3,+3.23000E+3,+3.25000E+3,+3.27000E+3,+3.28000E+3,+3.30000E+3,+3.32000E+3,+3.35000E+3]) # J/kg-K
        self.conductivity.data        = np.array([+4.49000E+2,+4.59000E+2,+4.69000E+2,+4.79000E+2,+4.89000E+2,+4.99000E+2,+5.09000E+2,+5.19000E+2,+5.29000E+2,+5.39000E+2,+5.49000E+2,+5.59000E+2,+5.69000E+2,+5.79000E+2,+5.89000E+2,+5.99000E+2,+6.09000E+2,+6.19000E+2,+6.29000E+2,+6.39000E+2,+6.49000E+2,+6.54000E+2,+6.59000E+2,+6.69000E+2,+6.79000E+2,+6.89000E+2])/1e3 # W/m-K
        self.viscosity.data           = np.array([+1.49000E-2,+9.20000E-3,+6.50000E-3,+4.90000E-3,+3.90000E-3,+3.20000E-3,+2.70000E-3,+2.30000E-3,+1.96000E-3,+1.70000E-3,+1.50000E-3,+1.40000E-3,+1.20000E-3,+1.10000E-3,+9.90000E-4,+9.10000E-4,+8.30000E-4,+7.70000E-4,+7.10000E-4,+6.60000E-4,+6.10000E-4,+5.90000E-4,+5.70000E-4,+5.30000E-4,+5.00000E-4,+4.70000E-4]) # Pa-s
        self.saturation_pressure.data = np.array([     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,+1.51685E+3,+2.20632E+3,+3.79212E+3,+6.68791E+3,+1.15142E+4,+1.87537E+4,+2.92338E+4,+4.37817E+4,+6.35007E+4,+8.96318E+4,+1.23416E+5,+1.66853E+5,+2.22701E+5,+2.92338E+5,+3.79212E+5,+4.85391E+5,+6.16391E+5,+7.74971E+5,+9.65955E+5,+1.19417E+6]) # Pa
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = 20+273.15
        self.name        = "HC40"
        self.description = "Dynalene "+ self.name
        self.reference   = "Dynalene2014"
        self.reshapeAll()


class HC30(PureData):
    """
    Heat transfer fluid Dynalene HC-30
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([+2.43150E+2,+2.53150E+2,+2.63150E+2,+2.73150E+2,+2.83150E+2,+2.93150E+2,+3.03150E+2,+3.13150E+2,+3.23150E+2,+3.33150E+2,+3.43150E+2,+3.53150E+2,+3.63150E+2,+3.73150E+2,+3.83150E+2,+3.93150E+2,+4.03150E+2,+4.13150E+2,+4.23150E+2,+4.33150E+2,+4.43150E+2,+4.53150E+2,+4.63150E+2,+4.73150E+2,+4.83150E+2]) # Kelvin
        self.density.data             = np.array([+1.30000E+3,+1.29500E+3,+1.29000E+3,+1.28500E+3,+1.28000E+3,+1.27500E+3,+1.27000E+3,+1.26500E+3,+1.26000E+3,+1.25500E+3,+1.25000E+3,+1.24400E+3,+1.23900E+3,+1.23400E+3,+1.22900E+3,+1.22400E+3,+1.21900E+3,+1.21400E+3,+1.20900E+3,+1.20400E+3,+1.19900E+3,+1.19300E+3,+1.18800E+3,+1.18300E+3,+1.17800E+3]) # kg/m3
        self.specific_heat.data       = np.array([+2.96100E+3,+2.98400E+3,+3.00700E+3,+3.03100E+3,+3.05400E+3,+3.07700E+3,+3.10000E+3,+3.12300E+3,+3.14600E+3,+3.16900E+3,+3.19200E+3,+3.21500E+3,+3.23800E+3,+3.26200E+3,+3.28500E+3,+3.30800E+3,+3.33100E+3,+3.35400E+3,+3.37700E+3,+3.40000E+3,+3.42300E+3,+3.44600E+3,+3.46900E+3,+3.49300E+3,+3.51600E+3]) # J/kg-K
        self.conductivity.data        = np.array([+4.69000E+2,+4.79000E+2,+4.89000E+2,+4.99000E+2,+5.09000E+2,+5.19000E+2,+5.29000E+2,+5.39000E+2,+5.49000E+2,+5.59000E+2,+5.69000E+2,+5.79000E+2,+5.89000E+2,+5.99000E+2,+6.09000E+2,+6.19000E+2,+6.29000E+2,+6.39000E+2,+6.49000E+2,+6.59000E+2,+6.69000E+2,+6.79000E+2,+6.89000E+2,+6.99000E+2,+7.09000E+2])/1e3 # W/m-K
        self.viscosity.data           = np.array([+7.00000E-3,+5.50000E-3,+4.50000E-3,+3.70000E-3,+3.00000E-3,+2.50000E-3,+2.20000E-3,+1.90000E-3,+1.60000E-3,+1.40000E-3,+1.30000E-3,+1.10000E-3,+9.90000E-4,+8.90000E-4,+8.00000E-4,+7.30000E-4,+6.70000E-4,+6.10000E-4,+5.70000E-4,+5.20000E-4,+4.80000E-4,+4.50000E-4,+4.20000E-4,+3.90000E-4,+3.70000E-4]) # Pa-s
        self.saturation_pressure.data = np.array([     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,+1.79264E+3,+2.41317E+3,+3.99896E+3,+7.17055E+3,+1.24795E+4,+2.06153E+4,+3.23364E+4,+4.86770E+4,+7.10160E+4,+9.99740E+4,+1.37895E+5,+1.86158E+5,+2.47522E+5,+3.24743E+5,+4.20580E+5,+5.39170E+5,+6.83960E+5,+8.59087E+5,+1.07145E+6,+1.32517E+6]) # Pa
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = 20+273.15
        self.name        = "HC30"
        self.description = "Dynalene "+ self.name
        self.reference   = "Dynalene2014"
        self.reshapeAll()


class HC20(PureData):
    """
    Heat transfer fluid Dynalene HC-20
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([+2.53150E+2,+2.63150E+2,+2.73150E+2,+2.83150E+2,+2.93150E+2,+3.03150E+2,+3.13150E+2,+3.23150E+2,+3.33150E+2,+3.43150E+2,+3.53150E+2,+3.63150E+2,+3.73150E+2,+3.83150E+2,+3.93150E+2,+4.03150E+2,+4.13150E+2,+4.23150E+2,+4.33150E+2,+4.43150E+2,+4.53150E+2,+4.63150E+2,+4.73150E+2,+4.83150E+2]) # Kelvin
        self.density.data             = np.array([+1.25800E+3,+1.25300E+3,+1.24800E+3,+1.24200E+3,+1.23700E+3,+1.23200E+3,+1.22700E+3,+1.22200E+3,+1.21600E+3,+1.21100E+3,+1.20600E+3,+1.20100E+3,+1.19600E+3,+1.19100E+3,+1.18500E+3,+1.18000E+3,+1.17500E+3,+1.17000E+3,+1.16500E+3,+1.15900E+3,+1.15400E+3,+1.14900E+3,+1.14400E+3,+1.13900E+3]) # kg/m3
        self.specific_heat.data       = np.array([+3.11700E+3,+3.14100E+3,+3.16400E+3,+3.18800E+3,+3.21200E+3,+3.23500E+3,+3.25900E+3,+3.28200E+3,+3.30600E+3,+3.33000E+3,+3.35300E+3,+3.37700E+3,+3.40000E+3,+3.42400E+3,+3.44800E+3,+3.47100E+3,+3.49500E+3,+3.51800E+3,+3.54200E+3,+3.56600E+3,+3.58900E+3,+3.61300E+3,+3.63600E+3,+3.66000E+3]) # J/kg-K
        self.conductivity.data        = np.array([+4.83000E+2,+4.93000E+2,+5.03000E+2,+5.13000E+2,+5.23000E+2,+5.33000E+2,+5.43000E+2,+5.53000E+2,+5.63000E+2,+5.73000E+2,+5.83000E+2,+5.93000E+2,+6.03000E+2,+6.13000E+2,+6.23000E+2,+6.33000E+2,+6.43000E+2,+6.53000E+2,+6.63000E+2,+6.73000E+2,+6.83000E+2,+6.93000E+2,+7.03000E+2,+7.13000E+2])/1e3 # W/m-K
        self.viscosity.data           = np.array([+4.50000E-3,+3.60000E-3,+3.00000E-3,+2.50000E-3,+2.10000E-3,+1.80000E-3,+1.60000E-3,+1.40000E-3,+1.20000E-3,+1.10000E-3,+9.50000E-4,+8.50000E-4,+7.70000E-4,+7.00000E-4,+6.30000E-4,+5.80000E-4,+5.40000E-4,+4.90000E-4,+4.60000E-4,+4.30000E-4,+4.00000E-4,+3.70000E-4,+3.50000E-4,+3.30000E-4]) # Pa-s
        self.saturation_pressure.data = np.array([     np.NAN,     np.NAN,     np.NAN,     np.NAN,+2.06843E+3,+2.75790E+3,+4.55054E+3,+7.99792E+3,+1.37206E+4,+2.24769E+4,+3.52322E+4,+5.29517E+4,+7.72213E+4,+1.08937E+5,+1.50306E+5,+2.04085E+5,+2.71653E+5,+3.57148E+5,+4.62638E+5,+5.93639E+5,+7.52907E+5,+9.46650E+5,+1.18038E+6,+1.45962E+6]) # Pa
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = 20+273.15
        self.name        = "HC20"
        self.description = "Dynalene "+ self.name
        self.reference   = "Dynalene2014"
        self.reshapeAll()


class HC10(PureData):
    """
    Heat transfer fluid Dynalene HC-10
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([+2.63150E+2,+2.73150E+2,+2.83150E+2,+2.93150E+2,+3.03150E+2,+3.13150E+2,+3.23150E+2,+3.33150E+2,+3.43150E+2,+3.53150E+2,+3.63150E+2,+3.73150E+2,+3.83150E+2,+3.93150E+2,+4.03150E+2,+4.13150E+2,+4.23150E+2,+4.33150E+2,+4.43150E+2,+4.53150E+2,+4.63150E+2,+4.73150E+2,+4.83150E+2,+4.91150E+2]) # Kelvin
        self.density.data             = np.array([+1.20400E+3,+1.19900E+3,+1.19500E+3,+1.19000E+3,+1.18600E+3,+1.18100E+3,+1.17700E+3,+1.17200E+3,+1.16700E+3,+1.16300E+3,+1.15800E+3,+1.15400E+3,+1.14900E+3,+1.14500E+3,+1.14000E+3,+1.13600E+3,+1.13100E+3,+1.12700E+3,+1.12200E+3,+1.11800E+3,+1.11300E+3,+1.10900E+3,+1.10400E+3,+1.10100E+3]) # kg/m3
        self.specific_heat.data       = np.array([+3.24600E+3,+3.27100E+3,+3.29600E+3,+3.32000E+3,+3.34500E+3,+3.37000E+3,+3.39500E+3,+3.42000E+3,+3.44400E+3,+3.46900E+3,+3.49400E+3,+3.51900E+3,+3.54400E+3,+3.56800E+3,+3.59300E+3,+3.61800E+3,+3.64300E+3,+3.66800E+3,+3.69200E+3,+3.71700E+3,+3.74200E+3,+3.76700E+3,+3.79200E+3,+3.81100E+3]) # J/kg-K
        self.conductivity.data        = np.array([+4.94000E+2,+5.04000E+2,+5.14000E+2,+5.24000E+2,+5.34000E+2,+5.44000E+2,+5.54000E+2,+5.64000E+2,+5.74000E+2,+5.84000E+2,+5.94000E+2,+6.04000E+2,+6.14000E+2,+6.24000E+2,+6.34000E+2,+6.44000E+2,+6.54000E+2,+6.64000E+2,+6.74000E+2,+6.84000E+2,+6.94000E+2,+7.04000E+2,+7.14000E+2,+7.22000E+2])/1e3 # W/m-K
        self.viscosity.data           = np.array([+3.00000E-3,+2.50000E-3,+2.10000E-3,+1.80000E-3,+1.50000E-3,+1.30000E-3,+1.20000E-3,+1.00000E-3,+9.10000E-4,+8.10000E-4,+7.30000E-4,+6.60000E-4,+6.00000E-4,+5.50000E-4,+5.10000E-4,+4.70000E-4,+4.30000E-4,+4.00000E-4,+3.70000E-4,+3.50000E-4,+3.30000E-4,+3.10000E-4,+2.90000E-4,+2.80000E-4]) # Pa-s
        self.saturation_pressure.data = np.array([     np.NAN,     np.NAN,     np.NAN,+2.27527E+3,+2.89580E+3,+4.75738E+3,+8.54950E+3,+1.48927E+4,+2.46143E+4,+3.87485E+4,+5.83986E+4,+8.48055E+4,+1.19969E+5,+1.65474E+5,+2.23390E+5,+2.97164E+5,+3.90243E+5,+5.05386E+5,+6.47418E+5,+8.20476E+5,+1.03146E+6,+1.28587E+6,+1.58993E+6,+1.87468E+6]) # Pa
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = 20+273.15
        self.name        = "HC10"
        self.description = "Dynalene "+ self.name
        self.reference   = "Dynalene2014"
        self.reshapeAll()



## Paratherm, see http://paracalc.paratherm.com
class PCR(PureData):
    """
    The Paratherm CR (Patent Pending) heat transfer fluid provides predictable,
    repeatable performance in cryogenically-driven processes. Consistent
    properties improve productivity, and eliminate runaway coil freeze-ups.
    10-cP viscosity @ -88 C (20-cP @ -96 C) brings higher efficiency at lower
    temperatures. Ease of containment and handling allow greater latitude in
    system design and component specification, and eliminate contamination and
    costly clean-up.
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([1.731500E+2,1.741500E+2,1.751500E+2,1.761500E+2,1.771500E+2,1.781500E+2,1.791500E+2,1.801500E+2,1.811500E+2,1.821500E+2,1.831500E+2,1.841500E+2,1.851500E+2,1.861500E+2,1.871500E+2,1.881500E+2,1.891500E+2,1.901500E+2,1.911500E+2,1.921500E+2,1.931500E+2,1.941500E+2,1.951500E+2,1.961500E+2,1.971500E+2,1.981500E+2,1.991500E+2,2.001500E+2,2.011500E+2,2.021500E+2,2.031500E+2,2.041500E+2,2.051500E+2,2.061500E+2,2.071500E+2,2.081500E+2,2.091500E+2,2.101500E+2,2.111500E+2,2.121500E+2,2.131500E+2,2.141500E+2,2.151500E+2,2.161500E+2,2.171500E+2,2.181500E+2,2.191500E+2,2.201500E+2,2.211500E+2,2.221500E+2,2.231500E+2,2.241500E+2,2.251500E+2,2.261500E+2,2.271500E+2,2.281500E+2,2.291500E+2,2.301500E+2,2.311500E+2,2.321500E+2,2.331500E+2,2.341500E+2,2.351500E+2,2.361500E+2,2.371500E+2,2.381500E+2,2.391500E+2,2.401500E+2,2.411500E+2,2.421500E+2,2.431500E+2,2.441500E+2,2.451500E+2,2.461500E+2,2.471500E+2,2.481500E+2,2.491500E+2,2.501500E+2,2.511500E+2,2.521500E+2,2.531500E+2,2.541500E+2,2.551500E+2,2.561500E+2,2.571500E+2,2.581500E+2,2.591500E+2,2.601500E+2,2.611500E+2,2.621500E+2,2.631500E+2,2.641500E+2,2.651500E+2,2.661500E+2,2.671500E+2,2.681500E+2,2.691500E+2,2.701500E+2,2.711500E+2,2.721500E+2,2.731500E+2,2.741500E+2,2.751500E+2,2.761500E+2,2.771500E+2,2.781500E+2,2.791500E+2,2.801500E+2,2.811500E+2,2.821500E+2,2.831500E+2,2.841500E+2,2.851500E+2,2.861500E+2,2.871500E+2,2.881500E+2,2.891500E+2,2.901500E+2,2.911500E+2,2.921500E+2,2.931500E+2,2.941500E+2,2.951500E+2,2.961500E+2,2.971500E+2,2.981500E+2,2.991500E+2,3.001500E+2,3.011500E+2,3.021500E+2,3.031500E+2,3.041500E+2,3.051500E+2,3.061500E+2,3.071500E+2,3.081500E+2,3.091500E+2,3.101500E+2,3.111500E+2,3.121500E+2,3.131500E+2,3.141500E+2,3.151500E+2,3.161500E+2,3.171500E+2,3.181500E+2,3.191500E+2,3.201500E+2,3.211500E+2,3.221500E+2,3.231500E+2,3.241500E+2,3.251500E+2,3.261500E+2,3.271500E+2,3.281500E+2,3.291500E+2,3.301500E+2,3.311500E+2,3.321500E+2,3.331500E+2,3.341500E+2,3.351500E+2,3.361500E+2,3.371500E+2,3.381500E+2,3.391500E+2,3.401500E+2,3.411500E+2,3.421500E+2,3.431500E+2,3.441500E+2,3.451500E+2,3.461500E+2,3.471500E+2,3.481500E+2,3.491500E+2,3.501500E+2,3.511500E+2,3.521500E+2,3.531500E+2,3.541500E+2,3.551500E+2,3.561500E+2,3.571500E+2,3.581500E+2,3.591500E+2,3.601500E+2,3.611500E+2,3.621500E+2,3.631500E+2,3.641500E+2,3.651500E+2,3.661500E+2,3.671500E+2,3.681500E+2,3.691500E+2,3.701500E+2,3.711500E+2,3.721500E+2,3.731500E+2,3.741500E+2,3.751500E+2,3.761500E+2,3.771500E+2,3.781500E+2,3.791500E+2,3.801500E+2,3.811500E+2,3.821500E+2,3.831500E+2,3.841500E+2,3.851500E+2,3.861500E+2,3.871500E+2,3.881500E+2,3.891500E+2,3.901500E+2,3.911500E+2,3.921500E+2,3.931500E+2,3.941500E+2,3.951500E+2,3.961500E+2,3.971500E+2,3.981500E+2,3.991500E+2,4.001500E+2,4.011500E+2,4.021500E+2,4.031500E+2,4.041500E+2,4.051500E+2,4.061500E+2,4.071500E+2,4.081500E+2,4.091500E+2,4.101500E+2,4.111500E+2,4.121500E+2,4.131500E+2,4.141500E+2,4.151500E+2,4.161500E+2,4.171500E+2,4.181500E+2,4.191500E+2,4.201500E+2,4.211500E+2,4.221500E+2,4.231500E+2,4.241500E+2,4.251500E+2,4.261500E+2,4.271500E+2,4.281500E+2,4.291500E+2,4.301500E+2,4.311500E+2,4.321500E+2,4.331500E+2,4.341500E+2,4.351500E+2,4.361500E+2,4.371500E+2,4.381500E+2,4.391500E+2,4.401500E+2,4.411500E+2,4.421500E+2,4.431500E+2,4.441500E+2,4.451500E+2,4.461500E+2,4.471500E+2,4.481500E+2,4.491500E+2,4.501500E+2,4.511500E+2,4.521500E+2,4.531500E+2,4.541500E+2,4.551500E+2,4.561500E+2,4.571500E+2,4.581500E+2,4.591500E+2,4.601500E+2,4.611500E+2,4.621500E+2,4.631500E+2,4.641500E+2,4.651500E+2,4.661500E+2,4.671500E+2,4.681500E+2,4.691500E+2,4.701500E+2,4.711500E+2,4.721500E+2,4.731500E+2,4.741500E+2,4.751500E+2,4.761500E+2,4.771500E+2,4.781500E+2,4.791500E+2,4.801500E+2,4.811500E+2,4.821500E+2,4.831500E+2,4.841500E+2,4.851500E+2,4.861500E+2,4.871500E+2,4.881500E+2,4.891500E+2,4.901500E+2,4.911500E+2,4.921500E+2,4.931500E+2])
        self.density.data             = np.array([9.490000E+2,9.480000E+2,9.470000E+2,9.460000E+2,9.450000E+2,9.440000E+2,9.430000E+2,9.420000E+2,9.410000E+2,9.400000E+2,9.390000E+2,9.380000E+2,9.370000E+2,9.360000E+2,9.350000E+2,9.340000E+2,9.330000E+2,9.320000E+2,9.310000E+2,9.300000E+2,9.290000E+2,9.280000E+2,9.270000E+2,9.260000E+2,9.250000E+2,9.240000E+2,9.230000E+2,9.220000E+2,9.210000E+2,9.200000E+2,9.190000E+2,9.180000E+2,9.170000E+2,9.160000E+2,9.150000E+2,9.140000E+2,9.130000E+2,9.120000E+2,9.110000E+2,9.100000E+2,9.090000E+2,9.080000E+2,9.070000E+2,9.060000E+2,9.050000E+2,9.040000E+2,9.030000E+2,9.020000E+2,9.010000E+2,9.000000E+2,8.990000E+2,8.980000E+2,8.970000E+2,8.960000E+2,8.950000E+2,8.940000E+2,8.930000E+2,8.920000E+2,8.910000E+2,8.900000E+2,8.890000E+2,8.880000E+2,8.870000E+2,8.860000E+2,8.850000E+2,8.830000E+2,8.820000E+2,8.810000E+2,8.800000E+2,8.790000E+2,8.780000E+2,8.770000E+2,8.760000E+2,8.750000E+2,8.740000E+2,8.730000E+2,8.720000E+2,8.710000E+2,8.700000E+2,8.690000E+2,8.680000E+2,8.670000E+2,8.660000E+2,8.650000E+2,8.640000E+2,8.630000E+2,8.620000E+2,8.610000E+2,8.600000E+2,8.590000E+2,8.580000E+2,8.570000E+2,8.560000E+2,8.550000E+2,8.540000E+2,8.530000E+2,8.520000E+2,8.510000E+2,8.500000E+2,8.490000E+2,8.480000E+2,8.470000E+2,8.460000E+2,8.450000E+2,8.440000E+2,8.430000E+2,8.420000E+2,8.410000E+2,8.400000E+2,8.390000E+2,8.380000E+2,8.370000E+2,8.360000E+2,8.350000E+2,8.340000E+2,8.330000E+2,8.320000E+2,8.310000E+2,8.300000E+2,8.290000E+2,8.280000E+2,8.270000E+2,8.260000E+2,8.250000E+2,8.240000E+2,8.230000E+2,8.220000E+2,8.210000E+2,8.200000E+2,8.190000E+2,8.180000E+2,8.170000E+2,8.160000E+2,8.150000E+2,8.140000E+2,8.130000E+2,8.120000E+2,8.110000E+2,8.100000E+2,8.090000E+2,8.080000E+2,8.070000E+2,8.060000E+2,8.050000E+2,8.040000E+2,8.030000E+2,8.020000E+2,8.010000E+2,8.000000E+2,7.990000E+2,7.980000E+2,7.970000E+2,7.960000E+2,7.950000E+2,7.940000E+2,7.930000E+2,7.920000E+2,7.910000E+2,7.900000E+2,7.890000E+2,7.880000E+2,7.870000E+2,7.860000E+2,7.850000E+2,7.840000E+2,7.830000E+2,7.820000E+2,7.810000E+2,7.800000E+2,7.790000E+2,7.780000E+2,7.770000E+2,7.760000E+2,7.750000E+2,7.740000E+2,7.730000E+2,7.720000E+2,7.710000E+2,7.700000E+2,7.690000E+2,7.680000E+2,7.670000E+2,7.660000E+2,7.650000E+2,7.640000E+2,7.630000E+2,7.620000E+2,7.610000E+2,7.600000E+2,7.590000E+2,7.580000E+2,7.570000E+2,7.560000E+2,7.550000E+2,7.540000E+2,7.520000E+2,7.510000E+2,7.500000E+2,7.490000E+2,7.480000E+2,7.470000E+2,7.460000E+2,7.450000E+2,7.440000E+2,7.430000E+2,7.420000E+2,7.410000E+2,7.400000E+2,7.390000E+2,7.380000E+2,7.370000E+2,7.360000E+2,7.350000E+2,7.340000E+2,7.330000E+2,7.320000E+2,7.310000E+2,7.300000E+2,7.290000E+2,7.280000E+2,7.270000E+2,7.260000E+2,7.250000E+2,7.240000E+2,7.230000E+2,7.220000E+2,7.210000E+2,7.200000E+2,7.190000E+2,7.180000E+2,7.170000E+2,7.160000E+2,7.150000E+2,7.140000E+2,7.130000E+2,7.120000E+2,7.110000E+2,7.100000E+2,7.090000E+2,7.080000E+2,7.070000E+2,7.060000E+2,7.050000E+2,7.040000E+2,7.030000E+2,7.020000E+2,7.010000E+2,7.000000E+2,6.990000E+2,6.980000E+2,6.970000E+2,6.960000E+2,6.950000E+2,6.940000E+2,6.930000E+2,6.920000E+2,6.910000E+2,6.900000E+2,6.890000E+2,6.880000E+2,6.870000E+2,6.860000E+2,6.850000E+2,6.840000E+2,6.830000E+2,6.820000E+2,6.810000E+2,6.800000E+2,6.790000E+2,6.780000E+2,6.770000E+2,6.760000E+2,6.750000E+2,6.740000E+2,6.730000E+2,6.720000E+2,6.710000E+2,6.700000E+2,6.690000E+2,6.680000E+2,6.670000E+2,6.660000E+2,6.650000E+2,6.640000E+2,6.630000E+2,6.620000E+2,6.610000E+2,6.600000E+2,6.590000E+2,6.580000E+2,6.570000E+2,6.560000E+2,6.550000E+2,6.540000E+2,6.530000E+2,6.520000E+2,6.510000E+2,6.500000E+2,6.490000E+2,6.480000E+2,6.470000E+2,6.460000E+2,6.450000E+2,6.440000E+2,6.430000E+2,6.420000E+2,6.410000E+2,6.400000E+2,6.390000E+2,6.380000E+2,6.370000E+2,6.360000E+2,6.350000E+2,6.340000E+2,6.330000E+2,6.320000E+2,6.310000E+2,6.300000E+2,6.290000E+2,6.280000E+2,6.270000E+2])
        self.viscosity.data           = np.array([3.400000E-5,3.300000E-5,3.100000E-5,3.000000E-5,2.800000E-5,2.700000E-5,2.500000E-5,2.400000E-5,2.300000E-5,2.100000E-5,2.000000E-5,1.900000E-5,1.800000E-5,1.700000E-5,1.600000E-5,1.500000E-5,1.400000E-5,1.300000E-5,1.200000E-5,1.100000E-5,9.900000E-6,9.100000E-6,8.300000E-6,7.500000E-6,6.800000E-6,6.100000E-6,5.500000E-6,5.000000E-6,4.900000E-6,4.800000E-6,4.600000E-6,4.500000E-6,4.400000E-6,4.300000E-6,4.200000E-6,4.100000E-6,4.000000E-6,3.800000E-6,3.800000E-6,3.700000E-6,3.600000E-6,3.500000E-6,3.400000E-6,3.300000E-6,3.200000E-6,3.100000E-6,3.000000E-6,3.000000E-6,2.900000E-6,2.800000E-6,2.700000E-6,2.700000E-6,2.600000E-6,2.500000E-6,2.500000E-6,2.400000E-6,2.400000E-6,2.300000E-6,2.200000E-6,2.200000E-6,2.100000E-6,2.100000E-6,2.000000E-6,2.000000E-6,2.000000E-6,1.900000E-6,1.900000E-6,1.800000E-6,1.800000E-6,1.800000E-6,1.700000E-6,1.700000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,9.900000E-7,9.700000E-7,9.600000E-7,9.400000E-7,9.300000E-7,9.100000E-7,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.000000E-6,1.000000E-6,9.900000E-7,9.700000E-7,9.400000E-7,9.200000E-7,9.000000E-7,8.800000E-7,8.600000E-7,8.400000E-7,8.200000E-7,8.000000E-7,7.900000E-7,7.700000E-7,7.500000E-7,7.300000E-7,7.200000E-7,7.000000E-7,6.800000E-7,6.700000E-7,6.500000E-7,6.400000E-7,6.200000E-7,6.100000E-7,5.900000E-7,5.800000E-7,5.700000E-7,5.600000E-7,5.400000E-7,5.300000E-7,5.200000E-7,5.100000E-7,5.000000E-7,4.900000E-7,4.800000E-7,4.700000E-7,4.600000E-7,4.500000E-7,4.400000E-7,4.400000E-7,4.300000E-7,4.200000E-7,4.200000E-7,4.100000E-7,4.000000E-7,4.000000E-7,3.900000E-7,3.900000E-7,3.900000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.900000E-7,3.900000E-7,4.000000E-7,3.900000E-7,3.900000E-7,3.900000E-7,3.900000E-7,3.900000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.600000E-7,3.600000E-7,3.600000E-7,3.600000E-7,3.600000E-7,3.500000E-7,3.500000E-7,3.500000E-7,3.500000E-7,3.500000E-7,3.500000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.000000E-7,3.000000E-7,3.000000E-7,3.000000E-7,3.000000E-7,3.000000E-7,3.000000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.200000E-7,2.200000E-7,2.200000E-7,2.200000E-7,2.200000E-7,2.200000E-7,2.200000E-7,2.200000E-7])*1e3
        self.specific_heat.data       = np.array
        self.conductivity.data        = np.array([1.500000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1])
        self.saturation_pressure.data = np.array([     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,3.000000E+3,4.000000E+3,5.000000E+3,5.000000E+3,6.000000E+3,7.000000E+3,7.000000E+3,8.000000E+3,9.000000E+3,1.000000E+4,1.000000E+4,1.100000E+4,1.200000E+4,1.300000E+4,1.400000E+4,1.400000E+4,1.500000E+4,1.600000E+4,1.700000E+4,1.800000E+4,1.800000E+4,1.900000E+4,2.000000E+4,2.100000E+4,2.200000E+4,2.300000E+4,2.300000E+4,2.400000E+4,2.500000E+4,2.600000E+4,2.700000E+4,2.800000E+4,2.900000E+4,3.000000E+4,3.000000E+4,3.100000E+4,3.200000E+4,3.300000E+4,3.400000E+4,3.500000E+4,3.600000E+4,3.700000E+4,3.800000E+4,3.900000E+4,4.000000E+4,4.100000E+4,4.200000E+4,4.300000E+4,4.400000E+4,4.500000E+4,4.600000E+4,4.700000E+4,4.800000E+4,4.900000E+4,5.000000E+4,5.100000E+4,5.200000E+4,5.300000E+4,5.400000E+4,5.500000E+4,5.600000E+4,5.700000E+4,5.800000E+4,5.900000E+4,6.000000E+4,6.100000E+4,6.200000E+4,6.300000E+4,6.400000E+4,6.600000E+4,6.700000E+4,6.800000E+4,6.900000E+4,7.000000E+4,7.100000E+4,7.200000E+4,7.300000E+4,7.500000E+4,7.600000E+4,7.700000E+4,7.800000E+4,7.900000E+4,8.000000E+4,8.200000E+4,8.300000E+4,8.400000E+4,8.500000E+4,8.600000E+4,8.800000E+4,8.900000E+4,9.000000E+4,9.100000E+4,9.200000E+4,9.400000E+4,9.500000E+4,9.600000E+4,9.700000E+4,9.900000E+4,1.000000E+5,1.010000E+5,1.030000E+5,1.040000E+5,1.050000E+5,1.060000E+5,1.080000E+5,1.090000E+5,1.100000E+5,1.120000E+5,1.130000E+5,1.140000E+5,1.160000E+5,1.170000E+5,1.180000E+5,1.200000E+5,1.210000E+5,1.220000E+5,1.240000E+5,1.250000E+5,1.270000E+5,1.280000E+5,1.290000E+5,1.310000E+5,1.320000E+5,1.340000E+5,1.350000E+5,1.370000E+5,1.380000E+5,1.390000E+5,1.410000E+5,1.420000E+5,1.440000E+5,1.450000E+5,1.470000E+5,1.480000E+5,1.500000E+5,1.510000E+5])
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = np.min(self.temperature.data[~np.isnan(self.saturation_pressure.data)])
        self.name        = "PCR"
        self.description = "Paratherm "+ self.name[1:]
        self.reference   = "Paratherm2013"
        self.reshapeAll()




class PGLT(PureData):
    """
    Heat transfer fluid Paratherm GLT The Paratherm GLT heat transfer fluid is
    an alkylated-aromatic based heat transfer fluid formulated for closed-loop
    liquid-phase heating systems to 550 F using fired heaters and to 575 F in
    waste-heat recovery systems.
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([2.581500E+2,2.591500E+2,2.601500E+2,2.611500E+2,2.621500E+2,2.631500E+2,2.641500E+2,2.651500E+2,2.661500E+2,2.671500E+2,2.681500E+2,2.691500E+2,2.701500E+2,2.711500E+2,2.721500E+2,2.731500E+2,2.741500E+2,2.751500E+2,2.761500E+2,2.771500E+2,2.781500E+2,2.791500E+2,2.801500E+2,2.811500E+2,2.821500E+2,2.831500E+2,2.841500E+2,2.851500E+2,2.861500E+2,2.871500E+2,2.881500E+2,2.891500E+2,2.901500E+2,2.911500E+2,2.921500E+2,2.931500E+2,2.941500E+2,2.951500E+2,2.961500E+2,2.971500E+2,2.981500E+2,2.991500E+2,3.001500E+2,3.011500E+2,3.021500E+2,3.031500E+2,3.041500E+2,3.051500E+2,3.061500E+2,3.071500E+2,3.081500E+2,3.091500E+2,3.101500E+2,3.111500E+2,3.121500E+2,3.131500E+2,3.141500E+2,3.151500E+2,3.161500E+2,3.171500E+2,3.181500E+2,3.191500E+2,3.201500E+2,3.211500E+2,3.221500E+2,3.231500E+2,3.241500E+2,3.251500E+2,3.261500E+2,3.271500E+2,3.281500E+2,3.291500E+2,3.301500E+2,3.311500E+2,3.321500E+2,3.331500E+2,3.341500E+2,3.351500E+2,3.361500E+2,3.371500E+2,3.381500E+2,3.391500E+2,3.401500E+2,3.411500E+2,3.421500E+2,3.431500E+2,3.441500E+2,3.451500E+2,3.461500E+2,3.471500E+2,3.481500E+2,3.491500E+2,3.501500E+2,3.511500E+2,3.521500E+2,3.531500E+2,3.541500E+2,3.551500E+2,3.561500E+2,3.571500E+2,3.581500E+2,3.591500E+2,3.601500E+2,3.611500E+2,3.621500E+2,3.631500E+2,3.641500E+2,3.651500E+2,3.661500E+2,3.671500E+2,3.681500E+2,3.691500E+2,3.701500E+2,3.711500E+2,3.721500E+2,3.731500E+2,3.741500E+2,3.751500E+2,3.761500E+2,3.771500E+2,3.781500E+2,3.791500E+2,3.801500E+2,3.811500E+2,3.821500E+2,3.831500E+2,3.841500E+2,3.851500E+2,3.861500E+2,3.871500E+2,3.881500E+2,3.891500E+2,3.901500E+2,3.911500E+2,3.921500E+2,3.931500E+2,3.941500E+2,3.951500E+2,3.961500E+2,3.971500E+2,3.981500E+2,3.991500E+2,4.001500E+2,4.011500E+2,4.021500E+2,4.031500E+2,4.041500E+2,4.051500E+2,4.061500E+2,4.071500E+2,4.081500E+2,4.091500E+2,4.101500E+2,4.111500E+2,4.121500E+2,4.131500E+2,4.141500E+2,4.151500E+2,4.161500E+2,4.171500E+2,4.181500E+2,4.191500E+2,4.201500E+2,4.211500E+2,4.221500E+2,4.231500E+2,4.241500E+2,4.251500E+2,4.261500E+2,4.271500E+2,4.281500E+2,4.291500E+2,4.301500E+2,4.311500E+2,4.321500E+2,4.331500E+2,4.341500E+2,4.351500E+2,4.361500E+2,4.371500E+2,4.381500E+2,4.391500E+2,4.401500E+2,4.411500E+2,4.421500E+2,4.431500E+2,4.441500E+2,4.451500E+2,4.461500E+2,4.471500E+2,4.481500E+2,4.491500E+2,4.501500E+2,4.511500E+2,4.521500E+2,4.531500E+2,4.541500E+2,4.551500E+2,4.561500E+2,4.571500E+2,4.581500E+2,4.591500E+2,4.601500E+2,4.611500E+2,4.621500E+2,4.631500E+2,4.641500E+2,4.651500E+2,4.661500E+2,4.671500E+2,4.681500E+2,4.691500E+2,4.701500E+2,4.711500E+2,4.721500E+2,4.731500E+2,4.741500E+2,4.751500E+2,4.761500E+2,4.771500E+2,4.781500E+2,4.791500E+2,4.801500E+2,4.811500E+2,4.821500E+2,4.831500E+2,4.841500E+2,4.851500E+2,4.861500E+2,4.871500E+2,4.881500E+2,4.891500E+2,4.901500E+2,4.911500E+2,4.921500E+2,4.931500E+2,4.941500E+2,4.951500E+2,4.961500E+2,4.971500E+2,4.981500E+2,4.991500E+2,5.001500E+2,5.011500E+2,5.021500E+2,5.031500E+2,5.041500E+2,5.051500E+2,5.061500E+2,5.071500E+2,5.081500E+2,5.091500E+2,5.101500E+2,5.111500E+2,5.121500E+2,5.131500E+2,5.141500E+2,5.151500E+2,5.161500E+2,5.171500E+2,5.181500E+2,5.191500E+2,5.201500E+2,5.211500E+2,5.221500E+2,5.231500E+2,5.241500E+2,5.251500E+2,5.261500E+2,5.271500E+2,5.281500E+2,5.291500E+2,5.301500E+2,5.311500E+2,5.321500E+2,5.331500E+2,5.341500E+2,5.351500E+2,5.361500E+2,5.371500E+2,5.381500E+2,5.391500E+2,5.401500E+2,5.411500E+2,5.421500E+2,5.431500E+2,5.441500E+2,5.451500E+2,5.461500E+2,5.471500E+2,5.481500E+2,5.491500E+2,5.501500E+2,5.511500E+2,5.521500E+2,5.531500E+2,5.541500E+2,5.551500E+2,5.561500E+2,5.571500E+2,5.581500E+2,5.591500E+2,5.601500E+2,5.611500E+2,5.621500E+2,5.631500E+2,5.641500E+2,5.651500E+2,5.661500E+2,5.671500E+2,5.681500E+2,5.691500E+2,5.701500E+2,5.711500E+2,5.721500E+2,5.731500E+2,5.741500E+2,5.751500E+2,5.761500E+2,5.771500E+2,5.781500E+2,5.791500E+2,5.801500E+2,5.811500E+2,5.821500E+2,5.831500E+2,5.841500E+2,5.851500E+2,5.861500E+2,5.871500E+2,5.881500E+2])
        self.density.data             = np.array([9.020000E+2,9.010000E+2,9.000000E+2,9.000000E+2,8.990000E+2,8.980000E+2,8.970000E+2,8.970000E+2,8.960000E+2,8.950000E+2,8.950000E+2,8.940000E+2,8.930000E+2,8.930000E+2,8.920000E+2,8.910000E+2,8.910000E+2,8.900000E+2,8.890000E+2,8.880000E+2,8.880000E+2,8.870000E+2,8.860000E+2,8.860000E+2,8.850000E+2,8.840000E+2,8.840000E+2,8.830000E+2,8.820000E+2,8.810000E+2,8.810000E+2,8.800000E+2,8.790000E+2,8.790000E+2,8.780000E+2,8.770000E+2,8.770000E+2,8.760000E+2,8.750000E+2,8.740000E+2,8.740000E+2,8.730000E+2,8.720000E+2,8.720000E+2,8.710000E+2,8.700000E+2,8.700000E+2,8.690000E+2,8.680000E+2,8.680000E+2,8.670000E+2,8.660000E+2,8.650000E+2,8.650000E+2,8.640000E+2,8.630000E+2,8.630000E+2,8.620000E+2,8.610000E+2,8.610000E+2,8.600000E+2,8.590000E+2,8.580000E+2,8.580000E+2,8.570000E+2,8.560000E+2,8.560000E+2,8.550000E+2,8.540000E+2,8.540000E+2,8.530000E+2,8.520000E+2,8.510000E+2,8.510000E+2,8.500000E+2,8.490000E+2,8.490000E+2,8.480000E+2,8.470000E+2,8.470000E+2,8.460000E+2,8.450000E+2,8.440000E+2,8.440000E+2,8.430000E+2,8.420000E+2,8.420000E+2,8.410000E+2,8.400000E+2,8.400000E+2,8.390000E+2,8.380000E+2,8.380000E+2,8.370000E+2,8.360000E+2,8.350000E+2,8.350000E+2,8.340000E+2,8.330000E+2,8.330000E+2,8.320000E+2,8.310000E+2,8.310000E+2,8.300000E+2,8.290000E+2,8.280000E+2,8.280000E+2,8.270000E+2,8.260000E+2,8.260000E+2,8.250000E+2,8.240000E+2,8.240000E+2,8.230000E+2,8.220000E+2,8.210000E+2,8.210000E+2,8.200000E+2,8.190000E+2,8.190000E+2,8.180000E+2,8.170000E+2,8.170000E+2,8.160000E+2,8.150000E+2,8.150000E+2,8.140000E+2,8.130000E+2,8.120000E+2,8.120000E+2,8.110000E+2,8.100000E+2,8.100000E+2,8.090000E+2,8.080000E+2,8.080000E+2,8.070000E+2,8.060000E+2,8.050000E+2,8.050000E+2,8.040000E+2,8.030000E+2,8.030000E+2,8.020000E+2,8.010000E+2,8.010000E+2,8.000000E+2,7.990000E+2,7.980000E+2,7.980000E+2,7.970000E+2,7.960000E+2,7.960000E+2,7.950000E+2,7.940000E+2,7.940000E+2,7.930000E+2,7.920000E+2,7.910000E+2,7.910000E+2,7.900000E+2,7.890000E+2,7.890000E+2,7.880000E+2,7.870000E+2,7.870000E+2,7.860000E+2,7.850000E+2,7.850000E+2,7.840000E+2,7.830000E+2,7.820000E+2,7.820000E+2,7.810000E+2,7.800000E+2,7.800000E+2,7.790000E+2,7.780000E+2,7.780000E+2,7.770000E+2,7.760000E+2,7.750000E+2,7.750000E+2,7.740000E+2,7.730000E+2,7.730000E+2,7.720000E+2,7.710000E+2,7.710000E+2,7.700000E+2,7.690000E+2,7.680000E+2,7.680000E+2,7.670000E+2,7.660000E+2,7.660000E+2,7.650000E+2,7.640000E+2,7.640000E+2,7.630000E+2,7.620000E+2,7.620000E+2,7.610000E+2,7.600000E+2,7.590000E+2,7.590000E+2,7.580000E+2,7.570000E+2,7.570000E+2,7.560000E+2,7.550000E+2,7.550000E+2,7.540000E+2,7.530000E+2,7.520000E+2,7.520000E+2,7.510000E+2,7.500000E+2,7.500000E+2,7.490000E+2,7.480000E+2,7.480000E+2,7.470000E+2,7.460000E+2,7.450000E+2,7.450000E+2,7.440000E+2,7.430000E+2,7.430000E+2,7.420000E+2,7.410000E+2,7.410000E+2,7.400000E+2,7.390000E+2,7.380000E+2,7.380000E+2,7.370000E+2,7.360000E+2,7.360000E+2,7.350000E+2,7.340000E+2,7.340000E+2,7.330000E+2,7.320000E+2,7.320000E+2,7.310000E+2,7.300000E+2,7.290000E+2,7.290000E+2,7.280000E+2,7.270000E+2,7.270000E+2,7.260000E+2,7.250000E+2,7.250000E+2,7.240000E+2,7.230000E+2,7.220000E+2,7.220000E+2,7.210000E+2,7.200000E+2,7.200000E+2,7.190000E+2,7.180000E+2,7.180000E+2,7.170000E+2,7.160000E+2,7.150000E+2,7.150000E+2,7.140000E+2,7.130000E+2,7.130000E+2,7.120000E+2,7.110000E+2,7.110000E+2,7.100000E+2,7.090000E+2,7.090000E+2,7.080000E+2,7.070000E+2,7.060000E+2,7.060000E+2,7.050000E+2,7.040000E+2,7.040000E+2,7.030000E+2,7.020000E+2,7.020000E+2,7.010000E+2,7.000000E+2,6.990000E+2,6.990000E+2,6.980000E+2,6.970000E+2,6.970000E+2,6.960000E+2,6.950000E+2,6.950000E+2,6.940000E+2,6.930000E+2,6.920000E+2,6.920000E+2,6.910000E+2,6.900000E+2,6.900000E+2,6.890000E+2,6.880000E+2,6.880000E+2,6.870000E+2,6.860000E+2,6.850000E+2,6.850000E+2,6.840000E+2,6.830000E+2,6.830000E+2,6.820000E+2,6.810000E+2,6.810000E+2,6.800000E+2,6.790000E+2,6.790000E+2,6.780000E+2,6.770000E+2,6.760000E+2,6.760000E+2,6.750000E+2,6.740000E+2,6.740000E+2,6.730000E+2,6.720000E+2,6.720000E+2])
        self.viscosity.data           = np.array([5.620000E-4,5.120000E-4,4.660000E-4,4.240000E-4,3.860000E-4,3.500000E-4,3.180000E-4,2.890000E-4,2.620000E-4,2.380000E-4,2.170000E-4,1.980000E-4,1.810000E-4,1.660000E-4,1.530000E-4,1.380000E-4,1.300000E-4,1.230000E-4,1.160000E-4,1.090000E-4,1.020000E-4,9.600000E-5,9.100000E-5,8.500000E-5,8.000000E-5,7.600000E-5,7.100000E-5,6.700000E-5,6.300000E-5,5.900000E-5,5.600000E-5,5.300000E-5,5.000000E-5,4.700000E-5,4.400000E-5,4.200000E-5,4.000000E-5,3.800000E-5,3.600000E-5,3.400000E-5,3.200000E-5,3.100000E-5,2.900000E-5,2.800000E-5,2.700000E-5,2.500000E-5,2.400000E-5,2.300000E-5,2.200000E-5,2.100000E-5,2.000000E-5,1.900000E-5,1.800000E-5,1.700000E-5,1.600000E-5,1.600000E-5,1.500000E-5,1.500000E-5,1.400000E-5,1.300000E-5,1.300000E-5,1.300000E-5,1.200000E-5,1.200000E-5,1.100000E-5,1.100000E-5,1.100000E-5,1.000000E-5,9.900000E-6,9.600000E-6,9.200000E-6,8.900000E-6,8.600000E-6,8.300000E-6,8.100000E-6,7.800000E-6,7.600000E-6,7.300000E-6,7.100000E-6,6.900000E-6,6.700000E-6,6.500000E-6,6.300000E-6,6.100000E-6,5.900000E-6,5.800000E-6,5.600000E-6,5.400000E-6,5.300000E-6,5.200000E-6,5.000000E-6,4.900000E-6,4.800000E-6,4.700000E-6,4.600000E-6,4.400000E-6,4.300000E-6,4.200000E-6,4.100000E-6,4.000000E-6,3.900000E-6,3.800000E-6,3.800000E-6,3.700000E-6,3.600000E-6,3.500000E-6,3.400000E-6,3.400000E-6,3.300000E-6,3.200000E-6,3.200000E-6,3.100000E-6,3.000000E-6,3.000000E-6,2.900000E-6,2.900000E-6,2.800000E-6,2.800000E-6,2.700000E-6,2.700000E-6,2.600000E-6,2.500000E-6,2.500000E-6,2.500000E-6,2.400000E-6,2.400000E-6,2.300000E-6,2.300000E-6,2.200000E-6,2.200000E-6,2.200000E-6,2.100000E-6,2.100000E-6,2.100000E-6,2.000000E-6,2.000000E-6,2.000000E-6,1.900000E-6,1.900000E-6,1.900000E-6,1.900000E-6,1.800000E-6,1.800000E-6,1.800000E-6,1.700000E-6,1.700000E-6,1.700000E-6,1.700000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,9.900000E-7,9.800000E-7,9.700000E-7,9.600000E-7,9.500000E-7,9.400000E-7,9.300000E-7,9.200000E-7,9.100000E-7,9.000000E-7,8.900000E-7,8.800000E-7,8.700000E-7,8.600000E-7,8.500000E-7,8.400000E-7,8.300000E-7,8.300000E-7,8.200000E-7,8.100000E-7,8.000000E-7,7.900000E-7,7.800000E-7,7.800000E-7,7.700000E-7,7.600000E-7,7.500000E-7,7.500000E-7,7.400000E-7,7.300000E-7,7.200000E-7,7.200000E-7,7.100000E-7,7.000000E-7,7.000000E-7,6.900000E-7,6.800000E-7,6.800000E-7,6.700000E-7,6.600000E-7,6.600000E-7,6.500000E-7,6.500000E-7,6.400000E-7,6.300000E-7,6.300000E-7,6.200000E-7,6.200000E-7,6.100000E-7,6.100000E-7,6.000000E-7,6.000000E-7,5.900000E-7,5.800000E-7,5.800000E-7,5.700000E-7,5.700000E-7,5.600000E-7,5.600000E-7,5.600000E-7,5.500000E-7,5.500000E-7,5.400000E-7,5.400000E-7,5.300000E-7,5.300000E-7,5.200000E-7,5.200000E-7,5.100000E-7,5.100000E-7,5.100000E-7,5.000000E-7,5.000000E-7,4.900000E-7,4.900000E-7,4.900000E-7,4.800000E-7,4.800000E-7,4.700000E-7,4.700000E-7,4.700000E-7,4.600000E-7,4.600000E-7,4.600000E-7,4.500000E-7,4.500000E-7,4.500000E-7,4.400000E-7,4.400000E-7,4.400000E-7,4.300000E-7,4.300000E-7,4.300000E-7,4.200000E-7,4.200000E-7,4.200000E-7,4.100000E-7,4.100000E-7,4.100000E-7,4.000000E-7,4.000000E-7,4.000000E-7,4.000000E-7,3.900000E-7,3.900000E-7,3.900000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.600000E-7,3.600000E-7,3.600000E-7,3.600000E-7,3.500000E-7,3.500000E-7,3.500000E-7,3.500000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.000000E-7,3.000000E-7,3.000000E-7])*1e3
        self.specific_heat.data       = np.array([1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3])
        self.conductivity.data        = np.array([1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1])
        self.saturation_pressure.data = np.array([     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,1.000000E+4,1.000000E+4,1.000000E+4,1.000000E+4,1.100000E+4,1.100000E+4,1.100000E+4,1.200000E+4,1.200000E+4,1.200000E+4,1.200000E+4,1.300000E+4,1.300000E+4,1.300000E+4,1.400000E+4,1.400000E+4,1.400000E+4,1.500000E+4,1.500000E+4,1.500000E+4,1.600000E+4,1.600000E+4,1.700000E+4,1.700000E+4,1.700000E+4,1.800000E+4,1.800000E+4,1.900000E+4,1.900000E+4,1.900000E+4,2.000000E+4,2.000000E+4,2.100000E+4,2.100000E+4,2.200000E+4,2.200000E+4,2.300000E+4,2.300000E+4,2.400000E+4,2.400000E+4,2.500000E+4,2.500000E+4,2.600000E+4,2.700000E+4,2.700000E+4,2.800000E+4,2.800000E+4,2.900000E+4,3.000000E+4,3.000000E+4,3.100000E+4,3.100000E+4,3.200000E+4,3.300000E+4,3.300000E+4,3.400000E+4,3.500000E+4,3.600000E+4,3.600000E+4,3.700000E+4,3.800000E+4,3.900000E+4,3.900000E+4,4.000000E+4,4.100000E+4,4.200000E+4,4.300000E+4,4.400000E+4])
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = np.min(self.temperature.data[~np.isnan(self.saturation_pressure.data)])
        self.name        = "PGLT"
        self.description = "Paratherm "+ self.name[1:]
        self.reference   = "Paratherm2013"
        self.reshapeAll()



class PHE(PureData):
    """
    The Paratherm HE high flash and fire point heat transfer fluid is rated for
    an optimal service range of 150 F to 600 F (66 C to 316 C). Engineered for
    higher thermal and oxidative stability, it is efficient and cost effective.
    Its greater purity allows it to strongly resist degradation while holding
    thermal properties and maintaining efficiency. This provides for low
    maintenance and solid performance over an extended operating life.
    Non-toxic, the HE fluid is safe to use and easy to dispose. It can be
    safely combined with spent lubricating oils and recycled locally.
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([2.731500E+2,2.741500E+2,2.751500E+2,2.761500E+2,2.771500E+2,2.781500E+2,2.791500E+2,2.801500E+2,2.811500E+2,2.821500E+2,2.831500E+2,2.841500E+2,2.851500E+2,2.861500E+2,2.871500E+2,2.881500E+2,2.891500E+2,2.901500E+2,2.911500E+2,2.921500E+2,2.931500E+2,2.941500E+2,2.951500E+2,2.961500E+2,2.971500E+2,2.981500E+2,2.991500E+2,3.001500E+2,3.011500E+2,3.021500E+2,3.031500E+2,3.041500E+2,3.051500E+2,3.061500E+2,3.071500E+2,3.081500E+2,3.091500E+2,3.101500E+2,3.111500E+2,3.121500E+2,3.131500E+2,3.141500E+2,3.151500E+2,3.161500E+2,3.171500E+2,3.181500E+2,3.191500E+2,3.201500E+2,3.211500E+2,3.221500E+2,3.231500E+2,3.241500E+2,3.251500E+2,3.261500E+2,3.271500E+2,3.281500E+2,3.291500E+2,3.301500E+2,3.311500E+2,3.321500E+2,3.331500E+2,3.341500E+2,3.351500E+2,3.361500E+2,3.371500E+2,3.381500E+2,3.391500E+2,3.401500E+2,3.411500E+2,3.421500E+2,3.431500E+2,3.441500E+2,3.451500E+2,3.461500E+2,3.471500E+2,3.481500E+2,3.491500E+2,3.501500E+2,3.511500E+2,3.521500E+2,3.531500E+2,3.541500E+2,3.551500E+2,3.561500E+2,3.571500E+2,3.581500E+2,3.591500E+2,3.601500E+2,3.611500E+2,3.621500E+2,3.631500E+2,3.641500E+2,3.651500E+2,3.661500E+2,3.671500E+2,3.681500E+2,3.691500E+2,3.701500E+2,3.711500E+2,3.721500E+2,3.731500E+2,3.741500E+2,3.751500E+2,3.761500E+2,3.771500E+2,3.781500E+2,3.791500E+2,3.801500E+2,3.811500E+2,3.821500E+2,3.831500E+2,3.841500E+2,3.851500E+2,3.861500E+2,3.871500E+2,3.881500E+2,3.891500E+2,3.901500E+2,3.911500E+2,3.921500E+2,3.931500E+2,3.941500E+2,3.951500E+2,3.961500E+2,3.971500E+2,3.981500E+2,3.991500E+2,4.001500E+2,4.011500E+2,4.021500E+2,4.031500E+2,4.041500E+2,4.051500E+2,4.061500E+2,4.071500E+2,4.081500E+2,4.091500E+2,4.101500E+2,4.111500E+2,4.121500E+2,4.131500E+2,4.141500E+2,4.151500E+2,4.161500E+2,4.171500E+2,4.181500E+2,4.191500E+2,4.201500E+2,4.211500E+2,4.221500E+2,4.231500E+2,4.241500E+2,4.251500E+2,4.261500E+2,4.271500E+2,4.281500E+2,4.291500E+2,4.301500E+2,4.311500E+2,4.321500E+2,4.331500E+2,4.341500E+2,4.351500E+2,4.361500E+2,4.371500E+2,4.381500E+2,4.391500E+2,4.401500E+2,4.411500E+2,4.421500E+2,4.431500E+2,4.441500E+2,4.451500E+2,4.461500E+2,4.471500E+2,4.481500E+2,4.491500E+2,4.501500E+2,4.511500E+2,4.521500E+2,4.531500E+2,4.541500E+2,4.551500E+2,4.561500E+2,4.571500E+2,4.581500E+2,4.591500E+2,4.601500E+2,4.611500E+2,4.621500E+2,4.631500E+2,4.641500E+2,4.651500E+2,4.661500E+2,4.671500E+2,4.681500E+2,4.691500E+2,4.701500E+2,4.711500E+2,4.721500E+2,4.731500E+2,4.741500E+2,4.751500E+2,4.761500E+2,4.771500E+2,4.781500E+2,4.791500E+2,4.801500E+2,4.811500E+2,4.821500E+2,4.831500E+2,4.841500E+2,4.851500E+2,4.861500E+2,4.871500E+2,4.881500E+2,4.891500E+2,4.901500E+2,4.911500E+2,4.921500E+2,4.931500E+2,4.941500E+2,4.951500E+2,4.961500E+2,4.971500E+2,4.981500E+2,4.991500E+2,5.001500E+2,5.011500E+2,5.021500E+2,5.031500E+2,5.041500E+2,5.051500E+2,5.061500E+2,5.071500E+2,5.081500E+2,5.091500E+2,5.101500E+2,5.111500E+2,5.121500E+2,5.131500E+2,5.141500E+2,5.151500E+2,5.161500E+2,5.171500E+2,5.181500E+2,5.191500E+2,5.201500E+2,5.211500E+2,5.221500E+2,5.231500E+2,5.241500E+2,5.251500E+2,5.261500E+2,5.271500E+2,5.281500E+2,5.291500E+2,5.301500E+2,5.311500E+2,5.321500E+2,5.331500E+2,5.341500E+2,5.351500E+2,5.361500E+2,5.371500E+2,5.381500E+2,5.391500E+2,5.401500E+2,5.411500E+2,5.421500E+2,5.431500E+2,5.441500E+2,5.451500E+2,5.461500E+2,5.471500E+2,5.481500E+2,5.491500E+2,5.501500E+2,5.511500E+2,5.521500E+2,5.531500E+2,5.541500E+2,5.551500E+2,5.561500E+2,5.571500E+2,5.581500E+2,5.591500E+2,5.601500E+2,5.611500E+2,5.621500E+2,5.631500E+2,5.641500E+2,5.651500E+2,5.661500E+2,5.671500E+2,5.681500E+2,5.691500E+2,5.701500E+2,5.711500E+2,5.721500E+2,5.731500E+2,5.741500E+2,5.751500E+2,5.761500E+2,5.771500E+2,5.781500E+2,5.791500E+2,5.801500E+2,5.811500E+2,5.821500E+2,5.831500E+2,5.841500E+2,5.851500E+2,5.861500E+2,5.871500E+2,5.881500E+2,5.891500E+2,5.901500E+2,5.911500E+2,5.921500E+2,5.931500E+2,5.941500E+2,5.951500E+2,5.961500E+2,5.971500E+2,5.981500E+2,5.991500E+2,6.001500E+2,6.011500E+2,6.021500E+2,6.031500E+2])
        self.density.data             = np.array([8.750000E+2,8.750000E+2,8.740000E+2,8.740000E+2,8.730000E+2,8.720000E+2,8.720000E+2,8.710000E+2,8.700000E+2,8.700000E+2,8.690000E+2,8.680000E+2,8.680000E+2,8.670000E+2,8.660000E+2,8.660000E+2,8.650000E+2,8.650000E+2,8.640000E+2,8.630000E+2,8.630000E+2,8.620000E+2,8.610000E+2,8.610000E+2,8.600000E+2,8.590000E+2,8.590000E+2,8.580000E+2,8.580000E+2,8.570000E+2,8.560000E+2,8.560000E+2,8.550000E+2,8.540000E+2,8.540000E+2,8.530000E+2,8.520000E+2,8.520000E+2,8.510000E+2,8.500000E+2,8.500000E+2,8.490000E+2,8.490000E+2,8.480000E+2,8.470000E+2,8.470000E+2,8.460000E+2,8.450000E+2,8.450000E+2,8.440000E+2,8.430000E+2,8.430000E+2,8.420000E+2,8.420000E+2,8.410000E+2,8.400000E+2,8.400000E+2,8.390000E+2,8.380000E+2,8.380000E+2,8.370000E+2,8.360000E+2,8.360000E+2,8.350000E+2,8.340000E+2,8.340000E+2,8.330000E+2,8.330000E+2,8.320000E+2,8.310000E+2,8.310000E+2,8.300000E+2,8.290000E+2,8.290000E+2,8.280000E+2,8.270000E+2,8.270000E+2,8.260000E+2,8.250000E+2,8.250000E+2,8.240000E+2,8.240000E+2,8.230000E+2,8.220000E+2,8.220000E+2,8.210000E+2,8.200000E+2,8.200000E+2,8.190000E+2,8.180000E+2,8.180000E+2,8.170000E+2,8.170000E+2,8.160000E+2,8.150000E+2,8.150000E+2,8.140000E+2,8.130000E+2,8.130000E+2,8.120000E+2,8.110000E+2,8.110000E+2,8.100000E+2,8.090000E+2,8.090000E+2,8.080000E+2,8.080000E+2,8.070000E+2,8.060000E+2,8.060000E+2,8.050000E+2,8.040000E+2,8.040000E+2,8.030000E+2,8.020000E+2,8.020000E+2,8.010000E+2,8.000000E+2,8.000000E+2,7.990000E+2,7.990000E+2,7.980000E+2,7.970000E+2,7.970000E+2,7.960000E+2,7.950000E+2,7.950000E+2,7.940000E+2,7.930000E+2,7.930000E+2,7.920000E+2,7.920000E+2,7.910000E+2,7.900000E+2,7.900000E+2,7.890000E+2,7.880000E+2,7.880000E+2,7.870000E+2,7.860000E+2,7.860000E+2,7.850000E+2,7.840000E+2,7.840000E+2,7.830000E+2,7.830000E+2,7.820000E+2,7.810000E+2,7.810000E+2,7.800000E+2,7.790000E+2,7.790000E+2,7.780000E+2,7.770000E+2,7.770000E+2,7.760000E+2,7.750000E+2,7.750000E+2,7.740000E+2,7.740000E+2,7.730000E+2,7.720000E+2,7.720000E+2,7.710000E+2,7.700000E+2,7.700000E+2,7.690000E+2,7.680000E+2,7.680000E+2,7.670000E+2,7.670000E+2,7.660000E+2,7.650000E+2,7.650000E+2,7.640000E+2,7.630000E+2,7.630000E+2,7.620000E+2,7.610000E+2,7.610000E+2,7.600000E+2,7.590000E+2,7.590000E+2,7.580000E+2,7.580000E+2,7.570000E+2,7.560000E+2,7.560000E+2,7.550000E+2,7.540000E+2,7.540000E+2,7.530000E+2,7.520000E+2,7.520000E+2,7.510000E+2,7.500000E+2,7.500000E+2,7.490000E+2,7.490000E+2,7.480000E+2,7.470000E+2,7.470000E+2,7.460000E+2,7.450000E+2,7.450000E+2,7.440000E+2,7.430000E+2,7.430000E+2,7.420000E+2,7.420000E+2,7.410000E+2,7.400000E+2,7.400000E+2,7.390000E+2,7.380000E+2,7.380000E+2,7.370000E+2,7.360000E+2,7.360000E+2,7.350000E+2,7.340000E+2,7.340000E+2,7.330000E+2,7.330000E+2,7.320000E+2,7.310000E+2,7.310000E+2,7.300000E+2,7.290000E+2,7.290000E+2,7.280000E+2,7.270000E+2,7.270000E+2,7.260000E+2,7.250000E+2,7.250000E+2,7.240000E+2,7.240000E+2,7.230000E+2,7.220000E+2,7.220000E+2,7.210000E+2,7.200000E+2,7.200000E+2,7.190000E+2,7.180000E+2,7.180000E+2,7.170000E+2,7.170000E+2,7.160000E+2,7.150000E+2,7.150000E+2,7.140000E+2,7.130000E+2,7.130000E+2,7.120000E+2,7.110000E+2,7.110000E+2,7.100000E+2,7.090000E+2,7.090000E+2,7.080000E+2,7.080000E+2,7.070000E+2,7.060000E+2,7.060000E+2,7.050000E+2,7.040000E+2,7.040000E+2,7.030000E+2,7.020000E+2,7.020000E+2,7.010000E+2,7.010000E+2,7.000000E+2,6.990000E+2,6.990000E+2,6.980000E+2,6.970000E+2,6.970000E+2,6.960000E+2,6.950000E+2,6.950000E+2,6.940000E+2,6.930000E+2,6.930000E+2,6.920000E+2,6.920000E+2,6.910000E+2,6.900000E+2,6.900000E+2,6.890000E+2,6.880000E+2,6.880000E+2,6.870000E+2,6.860000E+2,6.860000E+2,6.850000E+2,6.840000E+2,6.840000E+2,6.830000E+2,6.830000E+2,6.820000E+2,6.810000E+2,6.810000E+2,6.800000E+2,6.790000E+2,6.790000E+2,6.780000E+2,6.770000E+2,6.770000E+2,6.760000E+2,6.760000E+2,6.750000E+2,6.740000E+2,6.740000E+2,6.730000E+2,6.720000E+2,6.720000E+2,6.710000E+2,6.700000E+2,6.700000E+2,6.690000E+2,6.680000E+2,6.680000E+2,6.670000E+2,6.670000E+2,6.660000E+2,6.650000E+2,6.650000E+2,6.640000E+2])
        self.viscosity.data           = np.array([4.070000E-4,3.770000E-4,3.490000E-4,3.230000E-4,2.990000E-4,2.760000E-4,2.560000E-4,2.370000E-4,2.190000E-4,2.030000E-4,1.880000E-4,1.740000E-4,1.610000E-4,1.490000E-4,1.380000E-4,1.270000E-4,1.180000E-4,1.140000E-4,1.050000E-4,9.700000E-5,9.000000E-5,8.400000E-5,7.800000E-5,7.400000E-5,6.900000E-5,6.500000E-5,6.200000E-5,5.800000E-5,5.500000E-5,5.300000E-5,5.000000E-5,4.800000E-5,4.600000E-5,4.400000E-5,4.200000E-5,4.000000E-5,3.800000E-5,3.700000E-5,3.500000E-5,3.400000E-5,3.300000E-5,3.200000E-5,3.100000E-5,3.000000E-5,2.900000E-5,2.800000E-5,2.700000E-5,2.600000E-5,2.500000E-5,2.400000E-5,2.300000E-5,2.200000E-5,2.100000E-5,2.000000E-5,1.900000E-5,1.800000E-5,1.800000E-5,1.700000E-5,1.600000E-5,1.600000E-5,1.500000E-5,1.500000E-5,1.400000E-5,1.400000E-5,1.300000E-5,1.300000E-5,1.200000E-5,1.200000E-5,1.200000E-5,1.100000E-5,1.100000E-5,1.100000E-5,1.000000E-5,1.000000E-5,9.800000E-6,9.500000E-6,9.300000E-6,9.000000E-6,8.800000E-6,8.500000E-6,8.300000E-6,8.100000E-6,7.900000E-6,7.700000E-6,7.500000E-6,7.300000E-6,7.100000E-6,6.900000E-6,6.800000E-6,6.600000E-6,6.500000E-6,6.300000E-6,6.200000E-6,6.000000E-6,5.900000E-6,5.800000E-6,5.600000E-6,5.500000E-6,5.400000E-6,5.300000E-6,5.200000E-6,5.100000E-6,5.000000E-6,4.900000E-6,4.800000E-6,4.700000E-6,4.600000E-6,4.500000E-6,4.400000E-6,4.300000E-6,4.200000E-6,4.100000E-6,4.100000E-6,4.000000E-6,3.900000E-6,3.800000E-6,3.800000E-6,3.600000E-6,3.500000E-6,3.500000E-6,3.400000E-6,3.300000E-6,3.300000E-6,3.200000E-6,3.200000E-6,3.100000E-6,3.100000E-6,3.000000E-6,3.000000E-6,2.900000E-6,2.900000E-6,2.800000E-6,2.800000E-6,2.800000E-6,2.700000E-6,2.700000E-6,2.600000E-6,2.600000E-6,2.600000E-6,2.500000E-6,2.500000E-6,2.500000E-6,2.400000E-6,2.400000E-6,2.300000E-6,2.300000E-6,2.300000E-6,2.200000E-6,2.200000E-6,2.200000E-6,2.200000E-6,2.100000E-6,2.100000E-6,2.100000E-6,2.000000E-6,2.000000E-6,2.000000E-6,2.000000E-6,1.900000E-6,1.900000E-6,1.900000E-6,1.900000E-6,1.900000E-6,1.800000E-6,1.800000E-6,1.800000E-6,1.800000E-6,1.700000E-6,1.700000E-6,1.700000E-6,1.700000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,9.900000E-7,9.800000E-7,9.700000E-7,9.600000E-7,9.600000E-7,9.500000E-7,9.400000E-7,9.300000E-7,9.200000E-7,9.100000E-7,9.100000E-7,9.000000E-7,8.900000E-7,8.800000E-7,8.700000E-7,8.700000E-7,8.600000E-7,8.500000E-7,8.400000E-7,8.400000E-7,8.300000E-7,8.200000E-7,8.200000E-7,8.100000E-7,8.000000E-7,8.000000E-7,7.900000E-7,7.800000E-7,7.800000E-7,7.700000E-7,7.600000E-7,7.600000E-7,7.500000E-7,7.500000E-7,7.400000E-7,7.300000E-7,7.300000E-7,7.200000E-7,7.200000E-7,7.100000E-7,7.100000E-7,7.000000E-7,6.900000E-7,6.900000E-7,6.800000E-7,6.800000E-7,6.700000E-7,6.700000E-7,6.600000E-7,6.600000E-7,6.500000E-7,6.500000E-7,6.400000E-7,6.400000E-7,6.300000E-7,6.300000E-7,6.200000E-7,6.200000E-7,6.200000E-7,6.100000E-7,6.100000E-7,6.000000E-7,6.000000E-7,5.900000E-7,5.900000E-7,5.900000E-7,5.800000E-7,5.800000E-7,5.700000E-7,5.700000E-7,5.700000E-7,5.600000E-7,5.600000E-7,5.500000E-7,5.500000E-7,5.500000E-7,5.400000E-7,5.400000E-7,5.300000E-7,5.300000E-7,5.300000E-7,5.200000E-7,5.200000E-7,5.200000E-7,5.100000E-7,5.100000E-7,5.100000E-7,5.000000E-7,5.000000E-7,5.000000E-7,4.900000E-7,4.900000E-7,4.900000E-7,4.800000E-7,4.800000E-7,4.800000E-7,4.700000E-7,4.700000E-7,4.700000E-7,4.700000E-7,4.600000E-7,4.600000E-7,4.600000E-7,4.500000E-7,4.500000E-7,4.500000E-7,4.500000E-7,4.400000E-7,4.400000E-7,4.400000E-7,4.300000E-7])*1e3
        self.specific_heat.data       = np.array([1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.800000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,1.900000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.000000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.100000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.200000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.300000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.400000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.500000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.600000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.700000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.800000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,2.900000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3])
        self.conductivity.data        = np.array([1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.340000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.330000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.320000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.310000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.300000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.290000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.280000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.270000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.260000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.250000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.240000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.230000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.220000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.210000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.200000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.190000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1])
        self.saturation_pressure.data = np.array([     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,1.000000E+4,1.000000E+4,1.000000E+4,1.100000E+4,1.100000E+4,1.100000E+4])
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = np.min(self.temperature.data[~np.isnan(self.saturation_pressure.data)])
        self.name        = "PHE"
        self.description = "Paratherm "+ self.name[1:]
        self.reference   = "Paratherm2013"
        self.reshapeAll()



class PHR(PureData):
    """
    The Paratherm HR Heat Transfer Fluid is an alkylated-aromatic based heat
    transfer fluid formulated for closed loop liquid phase heating to 650 F in
    fired heaters and 675 F in waste heat recovery and full convection heaters.
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([2.581500E+2,2.591500E+2,2.601500E+2,2.611500E+2,2.621500E+2,2.631500E+2,2.641500E+2,2.651500E+2,2.661500E+2,2.671500E+2,2.681500E+2,2.691500E+2,2.701500E+2,2.711500E+2,2.721500E+2,2.731500E+2,2.741500E+2,2.751500E+2,2.761500E+2,2.771500E+2,2.781500E+2,2.791500E+2,2.801500E+2,2.811500E+2,2.821500E+2,2.831500E+2,2.841500E+2,2.851500E+2,2.861500E+2,2.871500E+2,2.881500E+2,2.891500E+2,2.901500E+2,2.911500E+2,2.921500E+2,2.931500E+2,2.941500E+2,2.951500E+2,2.961500E+2,2.971500E+2,2.981500E+2,2.991500E+2,3.001500E+2,3.011500E+2,3.021500E+2,3.031500E+2,3.041500E+2,3.051500E+2,3.061500E+2,3.071500E+2,3.081500E+2,3.091500E+2,3.101500E+2,3.111500E+2,3.121500E+2,3.131500E+2,3.141500E+2,3.151500E+2,3.161500E+2,3.171500E+2,3.181500E+2,3.191500E+2,3.201500E+2,3.211500E+2,3.221500E+2,3.231500E+2,3.241500E+2,3.251500E+2,3.261500E+2,3.271500E+2,3.281500E+2,3.291500E+2,3.301500E+2,3.311500E+2,3.321500E+2,3.331500E+2,3.341500E+2,3.351500E+2,3.361500E+2,3.371500E+2,3.381500E+2,3.391500E+2,3.401500E+2,3.411500E+2,3.421500E+2,3.431500E+2,3.441500E+2,3.451500E+2,3.461500E+2,3.471500E+2,3.481500E+2,3.491500E+2,3.501500E+2,3.511500E+2,3.521500E+2,3.531500E+2,3.541500E+2,3.551500E+2,3.561500E+2,3.571500E+2,3.581500E+2,3.591500E+2,3.601500E+2,3.611500E+2,3.621500E+2,3.631500E+2,3.641500E+2,3.651500E+2,3.661500E+2,3.671500E+2,3.681500E+2,3.691500E+2,3.701500E+2,3.711500E+2,3.721500E+2,3.731500E+2,3.741500E+2,3.751500E+2,3.761500E+2,3.771500E+2,3.781500E+2,3.791500E+2,3.801500E+2,3.811500E+2,3.821500E+2,3.831500E+2,3.841500E+2,3.851500E+2,3.861500E+2,3.871500E+2,3.881500E+2,3.891500E+2,3.901500E+2,3.911500E+2,3.921500E+2,3.931500E+2,3.941500E+2,3.951500E+2,3.961500E+2,3.971500E+2,3.981500E+2,3.991500E+2,4.001500E+2,4.011500E+2,4.021500E+2,4.031500E+2,4.041500E+2,4.051500E+2,4.061500E+2,4.071500E+2,4.081500E+2,4.091500E+2,4.101500E+2,4.111500E+2,4.121500E+2,4.131500E+2,4.141500E+2,4.151500E+2,4.161500E+2,4.171500E+2,4.181500E+2,4.191500E+2,4.201500E+2,4.211500E+2,4.221500E+2,4.231500E+2,4.241500E+2,4.251500E+2,4.261500E+2,4.271500E+2,4.281500E+2,4.291500E+2,4.301500E+2,4.311500E+2,4.321500E+2,4.331500E+2,4.341500E+2,4.351500E+2,4.361500E+2,4.371500E+2,4.381500E+2,4.391500E+2,4.401500E+2,4.411500E+2,4.421500E+2,4.431500E+2,4.441500E+2,4.451500E+2,4.461500E+2,4.471500E+2,4.481500E+2,4.491500E+2,4.501500E+2,4.511500E+2,4.521500E+2,4.531500E+2,4.541500E+2,4.551500E+2,4.561500E+2,4.571500E+2,4.581500E+2,4.591500E+2,4.601500E+2,4.611500E+2,4.621500E+2,4.631500E+2,4.641500E+2,4.651500E+2,4.661500E+2,4.671500E+2,4.681500E+2,4.691500E+2,4.701500E+2,4.711500E+2,4.721500E+2,4.731500E+2,4.741500E+2,4.751500E+2,4.761500E+2,4.771500E+2,4.781500E+2,4.791500E+2,4.801500E+2,4.811500E+2,4.821500E+2,4.831500E+2,4.841500E+2,4.851500E+2,4.861500E+2,4.871500E+2,4.881500E+2,4.891500E+2,4.901500E+2,4.911500E+2,4.921500E+2,4.931500E+2,4.941500E+2,4.951500E+2,4.961500E+2,4.971500E+2,4.981500E+2,4.991500E+2,5.001500E+2,5.011500E+2,5.021500E+2,5.031500E+2,5.041500E+2,5.051500E+2,5.061500E+2,5.071500E+2,5.081500E+2,5.091500E+2,5.101500E+2,5.111500E+2,5.121500E+2,5.131500E+2,5.141500E+2,5.151500E+2,5.161500E+2,5.171500E+2,5.181500E+2,5.191500E+2,5.201500E+2,5.211500E+2,5.221500E+2,5.231500E+2,5.241500E+2,5.251500E+2,5.261500E+2,5.271500E+2,5.281500E+2,5.291500E+2,5.301500E+2,5.311500E+2,5.321500E+2,5.331500E+2,5.341500E+2,5.351500E+2,5.361500E+2,5.371500E+2,5.381500E+2,5.391500E+2,5.401500E+2,5.411500E+2,5.421500E+2,5.431500E+2,5.441500E+2,5.451500E+2,5.461500E+2,5.471500E+2,5.481500E+2,5.491500E+2,5.501500E+2,5.511500E+2,5.521500E+2,5.531500E+2,5.541500E+2,5.551500E+2,5.561500E+2,5.571500E+2,5.581500E+2,5.591500E+2,5.601500E+2,5.611500E+2,5.621500E+2,5.631500E+2,5.641500E+2,5.651500E+2,5.661500E+2,5.671500E+2,5.681500E+2,5.691500E+2,5.701500E+2,5.711500E+2,5.721500E+2,5.731500E+2,5.741500E+2,5.751500E+2,5.761500E+2,5.771500E+2,5.781500E+2,5.791500E+2,5.801500E+2,5.811500E+2,5.821500E+2,5.831500E+2,5.841500E+2,5.851500E+2,5.861500E+2,5.871500E+2,5.881500E+2,5.891500E+2,5.901500E+2,5.911500E+2,5.921500E+2,5.931500E+2,5.941500E+2,5.951500E+2,5.961500E+2,5.971500E+2,5.981500E+2,5.991500E+2,6.001500E+2,6.011500E+2,6.021500E+2,6.031500E+2,6.041500E+2,6.051500E+2,6.061500E+2,6.071500E+2,6.081500E+2,6.091500E+2,6.101500E+2,6.111500E+2,6.121500E+2,6.131500E+2,6.141500E+2,6.151500E+2,6.161500E+2,6.171500E+2,6.181500E+2,6.191500E+2,6.201500E+2,6.211500E+2,6.221500E+2,6.231500E+2,6.241500E+2,6.251500E+2,6.261500E+2,6.271500E+2,6.281500E+2,6.291500E+2,6.301500E+2,6.311500E+2,6.321500E+2,6.331500E+2,6.341500E+2,6.351500E+2,6.361500E+2,6.371500E+2,6.381500E+2,6.391500E+2,6.401500E+2,6.411500E+2,6.421500E+2,6.431500E+2])
        self.density.data             = np.array([9.870000E+2,9.860000E+2,9.850000E+2,9.850000E+2,9.840000E+2,9.830000E+2,9.820000E+2,9.810000E+2,9.810000E+2,9.800000E+2,9.790000E+2,9.780000E+2,9.780000E+2,9.770000E+2,9.760000E+2,9.750000E+2,9.750000E+2,9.740000E+2,9.730000E+2,9.720000E+2,9.710000E+2,9.710000E+2,9.700000E+2,9.690000E+2,9.680000E+2,9.680000E+2,9.670000E+2,9.660000E+2,9.650000E+2,9.650000E+2,9.640000E+2,9.630000E+2,9.620000E+2,9.610000E+2,9.610000E+2,9.600000E+2,9.590000E+2,9.580000E+2,9.580000E+2,9.570000E+2,9.560000E+2,9.550000E+2,9.550000E+2,9.540000E+2,9.530000E+2,9.520000E+2,9.510000E+2,9.510000E+2,9.500000E+2,9.490000E+2,9.480000E+2,9.480000E+2,9.470000E+2,9.460000E+2,9.450000E+2,9.450000E+2,9.440000E+2,9.430000E+2,9.420000E+2,9.410000E+2,9.410000E+2,9.400000E+2,9.390000E+2,9.380000E+2,9.380000E+2,9.370000E+2,9.360000E+2,9.350000E+2,9.350000E+2,9.340000E+2,9.330000E+2,9.320000E+2,9.310000E+2,9.310000E+2,9.300000E+2,9.290000E+2,9.280000E+2,9.280000E+2,9.270000E+2,9.260000E+2,9.250000E+2,9.250000E+2,9.240000E+2,9.230000E+2,9.220000E+2,9.210000E+2,9.210000E+2,9.200000E+2,9.190000E+2,9.180000E+2,9.180000E+2,9.170000E+2,9.160000E+2,9.150000E+2,9.150000E+2,9.140000E+2,9.130000E+2,9.120000E+2,9.110000E+2,9.110000E+2,9.100000E+2,9.090000E+2,9.080000E+2,9.080000E+2,9.070000E+2,9.060000E+2,9.050000E+2,9.050000E+2,9.040000E+2,9.030000E+2,9.020000E+2,9.010000E+2,9.010000E+2,9.000000E+2,8.990000E+2,8.980000E+2,8.980000E+2,8.970000E+2,8.960000E+2,8.950000E+2,8.950000E+2,8.940000E+2,8.930000E+2,8.920000E+2,8.910000E+2,8.910000E+2,8.900000E+2,8.890000E+2,8.880000E+2,8.880000E+2,8.870000E+2,8.860000E+2,8.850000E+2,8.850000E+2,8.840000E+2,8.830000E+2,8.820000E+2,8.810000E+2,8.810000E+2,8.800000E+2,8.790000E+2,8.780000E+2,8.780000E+2,8.770000E+2,8.760000E+2,8.750000E+2,8.750000E+2,8.740000E+2,8.730000E+2,8.720000E+2,8.710000E+2,8.710000E+2,8.700000E+2,8.690000E+2,8.680000E+2,8.680000E+2,8.670000E+2,8.660000E+2,8.650000E+2,8.650000E+2,8.640000E+2,8.630000E+2,8.620000E+2,8.610000E+2,8.610000E+2,8.600000E+2,8.590000E+2,8.580000E+2,8.580000E+2,8.570000E+2,8.560000E+2,8.550000E+2,8.540000E+2,8.540000E+2,8.530000E+2,8.520000E+2,8.510000E+2,8.510000E+2,8.500000E+2,8.490000E+2,8.480000E+2,8.480000E+2,8.470000E+2,8.460000E+2,8.450000E+2,8.440000E+2,8.440000E+2,8.430000E+2,8.420000E+2,8.410000E+2,8.410000E+2,8.400000E+2,8.390000E+2,8.380000E+2,8.380000E+2,8.370000E+2,8.360000E+2,8.350000E+2,8.340000E+2,8.340000E+2,8.330000E+2,8.320000E+2,8.310000E+2,8.310000E+2,8.300000E+2,8.290000E+2,8.280000E+2,8.280000E+2,8.270000E+2,8.260000E+2,8.250000E+2,8.240000E+2,8.240000E+2,8.230000E+2,8.220000E+2,8.210000E+2,8.210000E+2,8.200000E+2,8.190000E+2,8.180000E+2,8.180000E+2,8.170000E+2,8.160000E+2,8.150000E+2,8.140000E+2,8.140000E+2,8.130000E+2,8.120000E+2,8.110000E+2,8.110000E+2,8.100000E+2,8.090000E+2,8.080000E+2,8.080000E+2,8.070000E+2,8.060000E+2,8.050000E+2,8.040000E+2,8.040000E+2,8.030000E+2,8.020000E+2,8.010000E+2,8.010000E+2,8.000000E+2,7.990000E+2,7.980000E+2,7.980000E+2,7.970000E+2,7.960000E+2,7.950000E+2,7.940000E+2,7.940000E+2,7.930000E+2,7.920000E+2,7.910000E+2,7.910000E+2,7.900000E+2,7.890000E+2,7.880000E+2,7.880000E+2,7.870000E+2,7.860000E+2,7.850000E+2,7.840000E+2,7.840000E+2,7.830000E+2,7.820000E+2,7.810000E+2,7.810000E+2,7.800000E+2,7.790000E+2,7.780000E+2,7.780000E+2,7.770000E+2,7.760000E+2,7.750000E+2,7.740000E+2,7.740000E+2,7.730000E+2,7.720000E+2,7.710000E+2,7.710000E+2,7.700000E+2,7.690000E+2,7.680000E+2,7.680000E+2,7.670000E+2,7.660000E+2,7.650000E+2,7.640000E+2,7.640000E+2,7.630000E+2,7.620000E+2,7.610000E+2,7.610000E+2,7.600000E+2,7.590000E+2,7.580000E+2,7.580000E+2,7.570000E+2,7.560000E+2,7.550000E+2,7.540000E+2,7.540000E+2,7.530000E+2,7.520000E+2,7.510000E+2,7.510000E+2,7.500000E+2,7.490000E+2,7.480000E+2,7.480000E+2,7.470000E+2,7.460000E+2,7.450000E+2,7.440000E+2,7.440000E+2,7.430000E+2,7.420000E+2,7.410000E+2,7.410000E+2,7.400000E+2,7.390000E+2,7.380000E+2,7.380000E+2,7.370000E+2,7.360000E+2,7.350000E+2,7.340000E+2,7.340000E+2,7.330000E+2,7.320000E+2,7.310000E+2,7.310000E+2,7.300000E+2,7.290000E+2,7.280000E+2,7.280000E+2,7.270000E+2,7.260000E+2,7.250000E+2,7.240000E+2,7.240000E+2,7.230000E+2,7.220000E+2,7.210000E+2,7.210000E+2,7.200000E+2,7.190000E+2,7.180000E+2,7.180000E+2,7.170000E+2,7.160000E+2,7.150000E+2,7.140000E+2,7.140000E+2,7.130000E+2,7.120000E+2,7.110000E+2,7.110000E+2,7.100000E+2,7.090000E+2,7.080000E+2,7.080000E+2,7.070000E+2,7.060000E+2,7.050000E+2,7.040000E+2,7.040000E+2,7.030000E+2,7.020000E+2,7.010000E+2,7.010000E+2,7.000000E+2,6.990000E+2,6.980000E+2,6.980000E+2,6.970000E+2,6.960000E+2,6.950000E+2,6.940000E+2,6.940000E+2,6.930000E+2,6.920000E+2,6.910000E+2,6.910000E+2])
        self.viscosity.data           = np.array([4.180000E-4,3.800000E-4,3.440000E-4,3.120000E-4,2.810000E-4,2.530000E-4,2.280000E-4,2.040000E-4,1.830000E-4,1.640000E-4,1.470000E-4,1.320000E-4,1.180000E-4,1.060000E-4,9.600000E-5,8.600000E-5,7.900000E-5,7.500000E-5,7.100000E-5,6.800000E-5,6.500000E-5,6.200000E-5,5.900000E-5,5.600000E-5,5.300000E-5,5.000000E-5,4.700000E-5,4.500000E-5,4.200000E-5,4.000000E-5,3.800000E-5,3.500000E-5,3.300000E-5,3.100000E-5,2.900000E-5,2.800000E-5,2.600000E-5,2.400000E-5,2.300000E-5,2.100000E-5,2.000000E-5,2.000000E-5,1.900000E-5,1.800000E-5,1.700000E-5,1.600000E-5,1.600000E-5,1.500000E-5,1.400000E-5,1.400000E-5,1.300000E-5,1.200000E-5,1.200000E-5,1.100000E-5,1.100000E-5,1.000000E-5,9.900000E-6,9.500000E-6,9.200000E-6,8.800000E-6,8.500000E-6,8.300000E-6,8.000000E-6,7.800000E-6,7.600000E-6,7.300000E-6,7.100000E-6,6.800000E-6,6.600000E-6,6.400000E-6,6.200000E-6,6.000000E-6,5.800000E-6,5.700000E-6,5.500000E-6,5.300000E-6,5.200000E-6,5.000000E-6,4.900000E-6,4.800000E-6,4.600000E-6,4.500000E-6,4.400000E-6,4.300000E-6,4.200000E-6,4.100000E-6,4.000000E-6,3.900000E-6,3.800000E-6,3.700000E-6,3.600000E-6,3.500000E-6,3.500000E-6,3.400000E-6,3.300000E-6,3.200000E-6,3.200000E-6,3.100000E-6,3.000000E-6,3.000000E-6,2.900000E-6,2.800000E-6,2.800000E-6,2.700000E-6,2.700000E-6,2.600000E-6,2.600000E-6,2.500000E-6,2.500000E-6,2.500000E-6,2.400000E-6,2.400000E-6,2.300000E-6,2.300000E-6,2.200000E-6,2.200000E-6,2.200000E-6,2.100000E-6,2.100000E-6,2.000000E-6,2.000000E-6,2.000000E-6,2.000000E-6,1.900000E-6,1.900000E-6,1.900000E-6,1.800000E-6,1.800000E-6,1.800000E-6,1.800000E-6,1.700000E-6,1.700000E-6,1.700000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,9.900000E-7,9.800000E-7,9.700000E-7,9.600000E-7,9.500000E-7,9.400000E-7,9.300000E-7,9.200000E-7,9.100000E-7,9.000000E-7,8.900000E-7,8.800000E-7,8.800000E-7,8.700000E-7,8.600000E-7,8.500000E-7,8.400000E-7,8.300000E-7,8.200000E-7,8.200000E-7,8.100000E-7,8.000000E-7,7.900000E-7,7.900000E-7,7.800000E-7,7.700000E-7,7.600000E-7,7.600000E-7,7.500000E-7,7.400000E-7,7.400000E-7,7.300000E-7,7.200000E-7,7.200000E-7,7.100000E-7,7.000000E-7,7.000000E-7,6.900000E-7,6.800000E-7,6.800000E-7,6.700000E-7,6.700000E-7,6.600000E-7,6.600000E-7,6.500000E-7,6.400000E-7,6.400000E-7,6.300000E-7,6.300000E-7,6.200000E-7,6.200000E-7,6.100000E-7,6.100000E-7,6.000000E-7,6.000000E-7,5.900000E-7,5.900000E-7,5.800000E-7,5.800000E-7,5.700000E-7,5.700000E-7,5.600000E-7,5.600000E-7,5.600000E-7,5.500000E-7,5.500000E-7,5.400000E-7,5.400000E-7,5.300000E-7,5.300000E-7,5.300000E-7,5.200000E-7,5.200000E-7,5.100000E-7,5.100000E-7,5.100000E-7,5.000000E-7,5.000000E-7,5.000000E-7,4.900000E-7,4.900000E-7,4.900000E-7,4.800000E-7,4.800000E-7,4.700000E-7,4.700000E-7,4.700000E-7,4.600000E-7,4.600000E-7,4.600000E-7,4.600000E-7,4.500000E-7,4.500000E-7,4.500000E-7,4.400000E-7,4.400000E-7,4.400000E-7,4.300000E-7,4.300000E-7,4.300000E-7,4.200000E-7,4.200000E-7,4.200000E-7,4.200000E-7,4.100000E-7,4.100000E-7,4.100000E-7,4.100000E-7,4.000000E-7,4.000000E-7,4.000000E-7,4.000000E-7,3.900000E-7,3.900000E-7,3.900000E-7,3.900000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.600000E-7,3.600000E-7,3.600000E-7,3.600000E-7,3.600000E-7,3.500000E-7,3.500000E-7,3.500000E-7,3.500000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.000000E-7,3.000000E-7,3.000000E-7,3.000000E-7,3.000000E-7,3.000000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7])*1e3
        self.specific_heat.data       = np.array
        self.conductivity.data        = np.array([1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.180000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.170000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.160000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.150000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.140000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.130000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.120000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.110000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.100000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.090000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.080000E-1,1.070000E-1,1.070000E-1,1.070000E-1,1.070000E-1,1.070000E-1,1.070000E-1,1.070000E-1,1.070000E-1,1.070000E-1,1.070000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.000000E-2,9.000000E-2,9.000000E-2,9.000000E-2,9.000000E-2,9.000000E-2,9.000000E-2,8.900000E-2,8.900000E-2,8.900000E-2,8.900000E-2,8.900000E-2,8.900000E-2,8.800000E-2,8.800000E-2,8.800000E-2,8.800000E-2,8.800000E-2,8.800000E-2,8.700000E-2,8.700000E-2,8.700000E-2,8.700000E-2,8.700000E-2,8.700000E-2,8.700000E-2,8.600000E-2,8.600000E-2,8.600000E-2,8.600000E-2,8.600000E-2,8.600000E-2,8.500000E-2,8.500000E-2,8.500000E-2,8.500000E-2,8.500000E-2,8.500000E-2,8.400000E-2,8.400000E-2,8.400000E-2,8.400000E-2,8.400000E-2,8.400000E-2,8.300000E-2])
        self.saturation_pressure.data = np.array([     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,1.000000E+4,1.000000E+4,1.000000E+4,1.000000E+4,1.100000E+4,1.100000E+4,1.100000E+4,1.200000E+4,1.200000E+4,1.200000E+4,1.300000E+4,1.300000E+4,1.300000E+4,1.400000E+4,1.400000E+4,1.500000E+4,1.500000E+4,1.500000E+4,1.600000E+4,1.600000E+4,1.700000E+4,1.700000E+4,1.800000E+4,1.800000E+4,1.900000E+4,1.900000E+4,1.900000E+4,2.000000E+4,2.100000E+4,2.100000E+4,2.200000E+4,2.200000E+4,2.300000E+4,2.300000E+4,2.400000E+4,2.500000E+4,2.500000E+4,2.600000E+4,2.600000E+4,2.700000E+4,2.800000E+4,2.900000E+4,2.900000E+4,3.000000E+4,3.100000E+4,3.100000E+4,3.200000E+4,3.300000E+4,3.400000E+4,3.500000E+4,3.500000E+4,3.600000E+4,3.700000E+4,3.800000E+4,3.900000E+4,4.000000E+4,4.100000E+4,4.200000E+4,4.300000E+4,4.400000E+4,4.500000E+4,4.600000E+4,4.700000E+4,4.800000E+4,4.900000E+4,5.000000E+4,5.100000E+4,5.300000E+4,5.400000E+4,5.500000E+4,5.600000E+4,5.800000E+4,5.900000E+4,6.000000E+4,6.100000E+4,6.300000E+4,6.400000E+4,6.600000E+4,6.700000E+4,6.900000E+4,7.000000E+4,7.200000E+4,7.300000E+4,7.500000E+4,7.600000E+4,7.800000E+4,8.000000E+4,8.100000E+4,8.300000E+4,8.500000E+4,8.700000E+4,8.900000E+4,9.000000E+4,9.200000E+4,9.400000E+4,9.600000E+4,9.800000E+4,1.000000E+5,1.020000E+5,1.050000E+5,1.070000E+5,1.090000E+5,1.110000E+5,1.130000E+5,1.160000E+5,1.180000E+5,1.200000E+5,1.230000E+5,1.250000E+5,1.280000E+5,1.300000E+5,1.330000E+5,1.360000E+5,1.380000E+5,1.410000E+5,1.440000E+5,1.470000E+5,1.500000E+5,1.520000E+5,1.550000E+5,1.580000E+5,1.610000E+5,1.650000E+5,1.680000E+5,1.710000E+5,1.740000E+5,1.780000E+5,1.810000E+5,1.840000E+5,1.880000E+5,1.920000E+5,1.950000E+5])
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = np.min(self.temperature.data[~np.isnan(self.saturation_pressure.data)])
        self.name        = "PHR"
        self.description = "Paratherm "+ self.name[1:]
        self.reference   = "Paratherm2013"
        self.reshapeAll()




class PLR(PureData):
    """
    The Paratherm LR low-range heat transfer fluid is rated for service from
    -40 F to 400 F (-40 C to 204 C). Non-aromatic, this non-toxic liquid is safe
    to use and is easy to dispose. Tough and durable, the Paratherm LR fluid is
    designed for a broad variety of cooling and heating applications. It is
    engineered to provide extended performance under rugged operating
    conditions, yet is easy and safe to handle.
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([1.881500E+2,1.891500E+2,1.901500E+2,1.911500E+2,1.921500E+2,1.931500E+2,1.941500E+2,1.951500E+2,1.961500E+2,1.971500E+2,1.981500E+2,1.991500E+2,2.001500E+2,2.011500E+2,2.021500E+2,2.031500E+2,2.041500E+2,2.051500E+2,2.061500E+2,2.071500E+2,2.081500E+2,2.091500E+2,2.101500E+2,2.111500E+2,2.121500E+2,2.131500E+2,2.141500E+2,2.151500E+2,2.161500E+2,2.171500E+2,2.181500E+2,2.191500E+2,2.201500E+2,2.211500E+2,2.221500E+2,2.231500E+2,2.241500E+2,2.251500E+2,2.261500E+2,2.271500E+2,2.281500E+2,2.291500E+2,2.301500E+2,2.311500E+2,2.321500E+2,2.331500E+2,2.341500E+2,2.351500E+2,2.361500E+2,2.371500E+2,2.381500E+2,2.391500E+2,2.401500E+2,2.411500E+2,2.421500E+2,2.431500E+2,2.441500E+2,2.451500E+2,2.461500E+2,2.471500E+2,2.481500E+2,2.491500E+2,2.501500E+2,2.511500E+2,2.521500E+2,2.531500E+2,2.541500E+2,2.551500E+2,2.561500E+2,2.571500E+2,2.581500E+2,2.591500E+2,2.601500E+2,2.611500E+2,2.621500E+2,2.631500E+2,2.641500E+2,2.651500E+2,2.661500E+2,2.671500E+2,2.681500E+2,2.691500E+2,2.701500E+2,2.711500E+2,2.721500E+2,2.731500E+2,2.741500E+2,2.751500E+2,2.761500E+2,2.771500E+2,2.781500E+2,2.791500E+2,2.801500E+2,2.811500E+2,2.821500E+2,2.831500E+2,2.841500E+2,2.851500E+2,2.861500E+2,2.871500E+2,2.881500E+2,2.891500E+2,2.901500E+2,2.911500E+2,2.921500E+2,2.931500E+2,2.941500E+2,2.951500E+2,2.961500E+2,2.971500E+2,2.981500E+2,2.991500E+2,3.001500E+2,3.011500E+2,3.021500E+2,3.031500E+2,3.041500E+2,3.051500E+2,3.061500E+2,3.071500E+2,3.081500E+2,3.091500E+2,3.101500E+2,3.111500E+2,3.121500E+2,3.131500E+2,3.141500E+2,3.151500E+2,3.161500E+2,3.171500E+2,3.181500E+2,3.191500E+2,3.201500E+2,3.211500E+2,3.221500E+2,3.231500E+2,3.241500E+2,3.251500E+2,3.261500E+2,3.271500E+2,3.281500E+2,3.291500E+2,3.301500E+2,3.311500E+2,3.321500E+2,3.331500E+2,3.341500E+2,3.351500E+2,3.361500E+2,3.371500E+2,3.381500E+2,3.391500E+2,3.401500E+2,3.411500E+2,3.421500E+2,3.431500E+2,3.441500E+2,3.451500E+2,3.461500E+2,3.471500E+2,3.481500E+2,3.491500E+2,3.501500E+2,3.511500E+2,3.521500E+2,3.531500E+2,3.541500E+2,3.551500E+2,3.561500E+2,3.571500E+2,3.581500E+2,3.591500E+2,3.601500E+2,3.611500E+2,3.621500E+2,3.631500E+2,3.641500E+2,3.651500E+2,3.661500E+2,3.671500E+2,3.681500E+2,3.691500E+2,3.701500E+2,3.711500E+2,3.721500E+2,3.731500E+2,3.741500E+2,3.751500E+2,3.761500E+2,3.771500E+2,3.781500E+2,3.791500E+2,3.801500E+2,3.811500E+2,3.821500E+2,3.831500E+2,3.841500E+2,3.851500E+2,3.861500E+2,3.871500E+2,3.881500E+2,3.891500E+2,3.901500E+2,3.911500E+2,3.921500E+2,3.931500E+2,3.941500E+2,3.951500E+2,3.961500E+2,3.971500E+2,3.981500E+2,3.991500E+2,4.001500E+2,4.011500E+2,4.021500E+2,4.031500E+2,4.041500E+2,4.051500E+2,4.061500E+2,4.071500E+2,4.081500E+2,4.091500E+2,4.101500E+2,4.111500E+2,4.121500E+2,4.131500E+2,4.141500E+2,4.151500E+2,4.161500E+2,4.171500E+2,4.181500E+2,4.191500E+2,4.201500E+2,4.211500E+2,4.221500E+2,4.231500E+2,4.241500E+2,4.251500E+2,4.261500E+2,4.271500E+2,4.281500E+2,4.291500E+2,4.301500E+2,4.311500E+2,4.321500E+2,4.331500E+2,4.341500E+2,4.351500E+2,4.361500E+2,4.371500E+2,4.381500E+2,4.391500E+2,4.401500E+2,4.411500E+2,4.421500E+2,4.431500E+2,4.441500E+2,4.451500E+2,4.461500E+2,4.471500E+2,4.481500E+2,4.491500E+2,4.501500E+2,4.511500E+2,4.521500E+2,4.531500E+2,4.541500E+2,4.551500E+2,4.561500E+2,4.571500E+2,4.581500E+2,4.591500E+2,4.601500E+2,4.611500E+2,4.621500E+2,4.631500E+2,4.641500E+2,4.651500E+2,4.661500E+2,4.671500E+2,4.681500E+2,4.691500E+2,4.701500E+2,4.711500E+2,4.721500E+2,4.731500E+2,4.741500E+2,4.751500E+2,4.761500E+2,4.771500E+2,4.781500E+2,4.791500E+2,4.801500E+2,4.811500E+2,4.821500E+2,4.831500E+2,4.841500E+2,4.851500E+2,4.861500E+2,4.871500E+2,4.881500E+2,4.891500E+2,4.901500E+2,4.911500E+2,4.921500E+2,4.931500E+2,4.941500E+2,4.951500E+2,4.961500E+2,4.971500E+2,4.981500E+2,4.991500E+2,5.001500E+2,5.011500E+2,5.021500E+2,5.031500E+2])
        self.density.data             = np.array([8.390000E+2,8.380000E+2,8.380000E+2,8.370000E+2,8.360000E+2,8.350000E+2,8.350000E+2,8.340000E+2,8.330000E+2,8.330000E+2,8.320000E+2,8.310000E+2,8.300000E+2,8.300000E+2,8.290000E+2,8.280000E+2,8.270000E+2,8.270000E+2,8.260000E+2,8.250000E+2,8.240000E+2,8.240000E+2,8.230000E+2,8.220000E+2,8.210000E+2,8.210000E+2,8.200000E+2,8.190000E+2,8.190000E+2,8.180000E+2,8.170000E+2,8.160000E+2,8.160000E+2,8.150000E+2,8.140000E+2,8.130000E+2,8.130000E+2,8.120000E+2,8.110000E+2,8.100000E+2,8.100000E+2,8.090000E+2,8.080000E+2,8.070000E+2,8.070000E+2,8.060000E+2,8.050000E+2,8.050000E+2,8.040000E+2,8.030000E+2,8.020000E+2,8.020000E+2,8.010000E+2,8.000000E+2,7.990000E+2,7.990000E+2,7.980000E+2,7.970000E+2,7.960000E+2,7.960000E+2,7.950000E+2,7.940000E+2,7.930000E+2,7.930000E+2,7.920000E+2,7.910000E+2,7.910000E+2,7.900000E+2,7.890000E+2,7.880000E+2,7.880000E+2,7.870000E+2,7.860000E+2,7.850000E+2,7.850000E+2,7.840000E+2,7.830000E+2,7.820000E+2,7.820000E+2,7.810000E+2,7.800000E+2,7.800000E+2,7.790000E+2,7.780000E+2,7.770000E+2,7.770000E+2,7.760000E+2,7.750000E+2,7.740000E+2,7.740000E+2,7.730000E+2,7.720000E+2,7.710000E+2,7.710000E+2,7.700000E+2,7.690000E+2,7.680000E+2,7.680000E+2,7.670000E+2,7.660000E+2,7.660000E+2,7.650000E+2,7.640000E+2,7.630000E+2,7.630000E+2,7.620000E+2,7.610000E+2,7.600000E+2,7.600000E+2,7.590000E+2,7.580000E+2,7.570000E+2,7.570000E+2,7.560000E+2,7.550000E+2,7.540000E+2,7.540000E+2,7.530000E+2,7.520000E+2,7.520000E+2,7.510000E+2,7.500000E+2,7.490000E+2,7.490000E+2,7.480000E+2,7.470000E+2,7.460000E+2,7.460000E+2,7.450000E+2,7.440000E+2,7.430000E+2,7.430000E+2,7.420000E+2,7.410000E+2,7.410000E+2,7.400000E+2,7.390000E+2,7.380000E+2,7.380000E+2,7.370000E+2,7.360000E+2,7.350000E+2,7.350000E+2,7.340000E+2,7.330000E+2,7.320000E+2,7.320000E+2,7.310000E+2,7.300000E+2,7.290000E+2,7.290000E+2,7.280000E+2,7.270000E+2,7.270000E+2,7.260000E+2,7.250000E+2,7.240000E+2,7.240000E+2,7.230000E+2,7.220000E+2,7.210000E+2,7.210000E+2,7.200000E+2,7.190000E+2,7.180000E+2,7.180000E+2,7.170000E+2,7.160000E+2,7.150000E+2,7.150000E+2,7.140000E+2,7.130000E+2,7.130000E+2,7.120000E+2,7.110000E+2,7.100000E+2,7.100000E+2,7.090000E+2,7.080000E+2,7.070000E+2,7.070000E+2,7.060000E+2,7.050000E+2,7.040000E+2,7.040000E+2,7.030000E+2,7.020000E+2,7.010000E+2,7.010000E+2,7.000000E+2,6.990000E+2,6.990000E+2,6.980000E+2,6.970000E+2,6.960000E+2,6.960000E+2,6.950000E+2,6.940000E+2,6.930000E+2,6.930000E+2,6.920000E+2,6.910000E+2,6.900000E+2,6.900000E+2,6.890000E+2,6.880000E+2,6.880000E+2,6.870000E+2,6.860000E+2,6.850000E+2,6.850000E+2,6.840000E+2,6.830000E+2,6.820000E+2,6.820000E+2,6.810000E+2,6.800000E+2,6.790000E+2,6.790000E+2,6.780000E+2,6.770000E+2,6.760000E+2,6.760000E+2,6.750000E+2,6.740000E+2,6.740000E+2,6.730000E+2,6.720000E+2,6.710000E+2,6.710000E+2,6.700000E+2,6.690000E+2,6.680000E+2,6.680000E+2,6.670000E+2,6.660000E+2,6.650000E+2,6.650000E+2,6.640000E+2,6.630000E+2,6.620000E+2,6.620000E+2,6.610000E+2,6.600000E+2,6.600000E+2,6.590000E+2,6.580000E+2,6.570000E+2,6.570000E+2,6.560000E+2,6.550000E+2,6.540000E+2,6.540000E+2,6.530000E+2,6.520000E+2,6.510000E+2,6.510000E+2,6.500000E+2,6.490000E+2,6.490000E+2,6.480000E+2,6.470000E+2,6.460000E+2,6.460000E+2,6.450000E+2,6.440000E+2,6.430000E+2,6.430000E+2,6.420000E+2,6.410000E+2,6.400000E+2,6.400000E+2,6.390000E+2,6.380000E+2,6.370000E+2,6.370000E+2,6.360000E+2,6.350000E+2,6.350000E+2,6.340000E+2,6.330000E+2,6.320000E+2,6.320000E+2,6.310000E+2,6.300000E+2,6.290000E+2,6.290000E+2,6.280000E+2,6.270000E+2,6.260000E+2,6.260000E+2,6.250000E+2,6.240000E+2,6.230000E+2,6.230000E+2,6.220000E+2,6.210000E+2,6.210000E+2,6.200000E+2,6.190000E+2,6.180000E+2,6.180000E+2,6.170000E+2,6.160000E+2,6.150000E+2,6.150000E+2,6.140000E+2,6.130000E+2,6.120000E+2,6.120000E+2,6.110000E+2,6.100000E+2,6.090000E+2,6.090000E+2,6.080000E+2,6.070000E+2])
        self.viscosity.data           = np.array([5.020000E-4,4.540000E-4,4.100000E-4,3.700000E-4,3.350000E-4,3.020000E-4,2.730000E-4,2.470000E-4,2.230000E-4,2.010000E-4,1.820000E-4,1.640000E-4,1.490000E-4,1.340000E-4,1.210000E-4,1.100000E-4,9.900000E-5,8.900000E-5,8.100000E-5,7.300000E-5,6.600000E-5,6.000000E-5,5.400000E-5,4.900000E-5,4.400000E-5,4.000000E-5,3.600000E-5,3.200000E-5,2.900000E-5,2.600000E-5,2.400000E-5,2.200000E-5,2.000000E-5,1.800000E-5,2.200000E-5,2.000000E-5,1.900000E-5,1.800000E-5,1.700000E-5,1.600000E-5,1.500000E-5,1.400000E-5,1.400000E-5,1.300000E-5,1.200000E-5,1.200000E-5,1.100000E-5,1.100000E-5,1.000000E-5,9.600000E-6,9.200000E-6,8.800000E-6,8.400000E-6,8.000000E-6,7.700000E-6,7.400000E-6,7.100000E-6,6.800000E-6,6.500000E-6,6.300000E-6,6.000000E-6,5.800000E-6,5.600000E-6,5.400000E-6,5.200000E-6,5.000000E-6,4.800000E-6,4.700000E-6,4.500000E-6,4.400000E-6,4.200000E-6,4.100000E-6,4.000000E-6,3.800000E-6,3.700000E-6,3.600000E-6,3.500000E-6,3.400000E-6,3.300000E-6,3.200000E-6,3.100000E-6,3.000000E-6,2.900000E-6,2.800000E-6,2.800000E-6,2.700000E-6,2.600000E-6,2.500000E-6,2.500000E-6,2.400000E-6,2.300000E-6,2.300000E-6,2.200000E-6,2.200000E-6,2.100000E-6,2.100000E-6,2.000000E-6,2.000000E-6,1.900000E-6,1.900000E-6,1.800000E-6,1.800000E-6,1.700000E-6,1.700000E-6,1.700000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,9.800000E-7,9.700000E-7,9.600000E-7,9.400000E-7,9.300000E-7,9.200000E-7,9.000000E-7,8.900000E-7,8.800000E-7,8.600000E-7,8.500000E-7,8.400000E-7,8.300000E-7,8.200000E-7,8.100000E-7,7.900000E-7,7.800000E-7,7.700000E-7,7.600000E-7,7.500000E-7,7.400000E-7,7.300000E-7,7.200000E-7,7.100000E-7,7.000000E-7,6.900000E-7,6.800000E-7,6.700000E-7,6.600000E-7,6.500000E-7,6.400000E-7,6.400000E-7,6.300000E-7,6.200000E-7,6.100000E-7,6.000000E-7,5.900000E-7,5.800000E-7,5.800000E-7,5.700000E-7,5.600000E-7,5.500000E-7,5.400000E-7,5.400000E-7,5.300000E-7,5.200000E-7,5.100000E-7,5.100000E-7,5.000000E-7,4.900000E-7,5.400000E-7,5.300000E-7,5.200000E-7,5.200000E-7,5.100000E-7,5.000000E-7,5.000000E-7,4.900000E-7,4.900000E-7,4.800000E-7,4.800000E-7,4.700000E-7,4.600000E-7,4.600000E-7,4.500000E-7,4.500000E-7,4.400000E-7,4.400000E-7,4.300000E-7,4.300000E-7,4.300000E-7,4.200000E-7,4.200000E-7,4.100000E-7,4.100000E-7,4.000000E-7,4.000000E-7,4.000000E-7,3.900000E-7,3.900000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.600000E-7,3.600000E-7,3.600000E-7,3.500000E-7,3.500000E-7,3.500000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.000000E-7,3.000000E-7,3.000000E-7,3.000000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.500000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.200000E-7,2.200000E-7,2.200000E-7,2.200000E-7,2.200000E-7,2.200000E-7,2.200000E-7,2.100000E-7,2.100000E-7,2.100000E-7,2.100000E-7,2.100000E-7,2.100000E-7,2.100000E-7,2.100000E-7,2.000000E-7,2.000000E-7,2.000000E-7,2.000000E-7,2.000000E-7,2.000000E-7,2.000000E-7,2.000000E-7,1.900000E-7,1.900000E-7,1.900000E-7,1.900000E-7,1.900000E-7,1.900000E-7,1.900000E-7,1.900000E-7,1.900000E-7,1.900000E-7,1.800000E-7])*1e3
        self.specific_heat.data       = np.array
        self.conductivity.data        = np.array([1.600000E-1,1.600000E-1,1.600000E-1,1.600000E-1,1.600000E-1,1.600000E-1,1.590000E-1,1.590000E-1,1.590000E-1,1.590000E-1,1.590000E-1,1.590000E-1,1.590000E-1,1.590000E-1,1.590000E-1,1.590000E-1,1.590000E-1,1.590000E-1,1.580000E-1,1.580000E-1,1.580000E-1,1.580000E-1,1.580000E-1,1.580000E-1,1.580000E-1,1.580000E-1,1.580000E-1,1.580000E-1,1.580000E-1,1.580000E-1,1.580000E-1,1.570000E-1,1.570000E-1,1.570000E-1,1.570000E-1,1.570000E-1,1.570000E-1,1.570000E-1,1.570000E-1,1.570000E-1,1.570000E-1,1.570000E-1,1.570000E-1,1.560000E-1,1.560000E-1,1.560000E-1,1.560000E-1,1.560000E-1,1.560000E-1,1.560000E-1,1.560000E-1,1.560000E-1,1.560000E-1,1.560000E-1,1.560000E-1,1.560000E-1,1.550000E-1,1.550000E-1,1.550000E-1,1.550000E-1,1.550000E-1,1.550000E-1,1.550000E-1,1.550000E-1,1.550000E-1,1.550000E-1,1.550000E-1,1.550000E-1,1.540000E-1,1.540000E-1,1.540000E-1,1.540000E-1,1.540000E-1,1.540000E-1,1.540000E-1,1.540000E-1,1.540000E-1,1.540000E-1,1.540000E-1,1.540000E-1,1.540000E-1,1.530000E-1,1.530000E-1,1.530000E-1,1.530000E-1,1.530000E-1,1.530000E-1,1.530000E-1,1.530000E-1,1.530000E-1,1.530000E-1,1.530000E-1,1.530000E-1,1.520000E-1,1.520000E-1,1.520000E-1,1.520000E-1,1.520000E-1,1.520000E-1,1.520000E-1,1.520000E-1,1.520000E-1,1.520000E-1,1.520000E-1,1.520000E-1,1.520000E-1,1.510000E-1,1.510000E-1,1.510000E-1,1.510000E-1,1.510000E-1,1.510000E-1,1.510000E-1,1.510000E-1,1.510000E-1,1.510000E-1,1.510000E-1,1.510000E-1,1.500000E-1,1.500000E-1,1.500000E-1,1.500000E-1,1.500000E-1,1.500000E-1,1.500000E-1,1.500000E-1,1.500000E-1,1.500000E-1,1.500000E-1,1.500000E-1,1.500000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.490000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.480000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.470000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.460000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.450000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.440000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.430000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.420000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.410000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.400000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.390000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.380000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.370000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.360000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1,1.350000E-1])
        self.saturation_pressure.data = np.array([     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,1.000000E+4,1.000000E+4,1.100000E+4,1.100000E+4,1.200000E+4,1.200000E+4,1.300000E+4,1.300000E+4,1.400000E+4,1.400000E+4,1.500000E+4,1.600000E+4,1.600000E+4,1.700000E+4,1.800000E+4,1.800000E+4,1.900000E+4,2.000000E+4,2.100000E+4,2.100000E+4,2.200000E+4,2.300000E+4,2.400000E+4,2.500000E+4,2.600000E+4,2.700000E+4,2.800000E+4,2.900000E+4,3.000000E+4,3.100000E+4,3.200000E+4,3.300000E+4,3.400000E+4,3.500000E+4,3.700000E+4,3.800000E+4,3.900000E+4,4.000000E+4,4.200000E+4,4.300000E+4,4.400000E+4,4.500000E+4,4.700000E+4,4.800000E+4,5.000000E+4,5.100000E+4,5.300000E+4,5.500000E+4,5.700000E+4,6.000000E+4,6.200000E+4,6.400000E+4,6.600000E+4,6.800000E+4,7.000000E+4,7.200000E+4,7.400000E+4,7.600000E+4,7.800000E+4,8.000000E+4,8.200000E+4,8.400000E+4,8.600000E+4,8.800000E+4,8.900000E+4,9.100000E+4,9.300000E+4,9.500000E+4,9.700000E+4,9.800000E+4,1.000000E+5,1.020000E+5,1.030000E+5,1.050000E+5,1.070000E+5,1.080000E+5,1.100000E+5,1.110000E+5,1.130000E+5,1.150000E+5,1.160000E+5,1.180000E+5,1.190000E+5,1.210000E+5,1.220000E+5,1.230000E+5,1.250000E+5,1.260000E+5,1.270000E+5,1.290000E+5,1.300000E+5,1.310000E+5,1.330000E+5,1.340000E+5,1.350000E+5,1.360000E+5,1.380000E+5,1.390000E+5,1.400000E+5])
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = np.min(self.temperature.data[~np.isnan(self.saturation_pressure.data)])
        self.name        = "PLR"
        self.description = "Paratherm "+ self.name[1:]
        self.reference   = "Paratherm2013"
        self.reshapeAll()




class PMR(PureData):
    """
    Paratherm MR is a food grade (NSF Certified) single fluid heating and
    cooling from 36 F to 550 F. Eliminates design and maintenance problems
    caused by steam/chilled water temperature control systems. Quick low-
    temperature start-ups.
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([2.331500E+2,2.341500E+2,2.351500E+2,2.361500E+2,2.371500E+2,2.381500E+2,2.391500E+2,2.401500E+2,2.411500E+2,2.421500E+2,2.431500E+2,2.441500E+2,2.451500E+2,2.461500E+2,2.471500E+2,2.481500E+2,2.491500E+2,2.501500E+2,2.511500E+2,2.521500E+2,2.531500E+2,2.541500E+2,2.551500E+2,2.561500E+2,2.571500E+2,2.581500E+2,2.591500E+2,2.601500E+2,2.611500E+2,2.621500E+2,2.631500E+2,2.641500E+2,2.651500E+2,2.661500E+2,2.671500E+2,2.681500E+2,2.691500E+2,2.701500E+2,2.711500E+2,2.721500E+2,2.731500E+2,2.741500E+2,2.751500E+2,2.761500E+2,2.771500E+2,2.781500E+2,2.791500E+2,2.801500E+2,2.811500E+2,2.821500E+2,2.831500E+2,2.841500E+2,2.851500E+2,2.861500E+2,2.871500E+2,2.881500E+2,2.891500E+2,2.901500E+2,2.911500E+2,2.921500E+2,2.931500E+2,2.941500E+2,2.951500E+2,2.961500E+2,2.971500E+2,2.981500E+2,2.991500E+2,3.001500E+2,3.011500E+2,3.021500E+2,3.031500E+2,3.041500E+2,3.051500E+2,3.061500E+2,3.071500E+2,3.081500E+2,3.091500E+2,3.101500E+2,3.111500E+2,3.121500E+2,3.131500E+2,3.141500E+2,3.151500E+2,3.161500E+2,3.171500E+2,3.181500E+2,3.191500E+2,3.201500E+2,3.211500E+2,3.221500E+2,3.231500E+2,3.241500E+2,3.251500E+2,3.261500E+2,3.271500E+2,3.281500E+2,3.291500E+2,3.301500E+2,3.311500E+2,3.321500E+2,3.331500E+2,3.341500E+2,3.351500E+2,3.361500E+2,3.371500E+2,3.381500E+2,3.391500E+2,3.401500E+2,3.411500E+2,3.421500E+2,3.431500E+2,3.441500E+2,3.451500E+2,3.461500E+2,3.471500E+2,3.481500E+2,3.491500E+2,3.501500E+2,3.511500E+2,3.521500E+2,3.531500E+2,3.541500E+2,3.551500E+2,3.561500E+2,3.571500E+2,3.581500E+2,3.591500E+2,3.601500E+2,3.611500E+2,3.621500E+2,3.631500E+2,3.641500E+2,3.651500E+2,3.661500E+2,3.671500E+2,3.681500E+2,3.691500E+2,3.701500E+2,3.711500E+2,3.721500E+2,3.731500E+2,3.741500E+2,3.751500E+2,3.761500E+2,3.771500E+2,3.781500E+2,3.791500E+2,3.801500E+2,3.811500E+2,3.821500E+2,3.831500E+2,3.841500E+2,3.851500E+2,3.861500E+2,3.871500E+2,3.881500E+2,3.891500E+2,3.901500E+2,3.911500E+2,3.921500E+2,3.931500E+2,3.941500E+2,3.951500E+2,3.961500E+2,3.971500E+2,3.981500E+2,3.991500E+2,4.001500E+2,4.011500E+2,4.021500E+2,4.031500E+2,4.041500E+2,4.051500E+2,4.061500E+2,4.071500E+2,4.081500E+2,4.091500E+2,4.101500E+2,4.111500E+2,4.121500E+2,4.131500E+2,4.141500E+2,4.151500E+2,4.161500E+2,4.171500E+2,4.181500E+2,4.191500E+2,4.201500E+2,4.211500E+2,4.221500E+2,4.231500E+2,4.241500E+2,4.251500E+2,4.261500E+2,4.271500E+2,4.281500E+2,4.291500E+2,4.301500E+2,4.311500E+2,4.321500E+2,4.331500E+2,4.341500E+2,4.351500E+2,4.361500E+2,4.371500E+2,4.381500E+2,4.391500E+2,4.401500E+2,4.411500E+2,4.421500E+2,4.431500E+2,4.441500E+2,4.451500E+2,4.461500E+2,4.471500E+2,4.481500E+2,4.491500E+2,4.501500E+2,4.511500E+2,4.521500E+2,4.531500E+2,4.541500E+2,4.551500E+2,4.561500E+2,4.571500E+2,4.581500E+2,4.591500E+2,4.601500E+2,4.611500E+2,4.621500E+2,4.631500E+2,4.641500E+2,4.651500E+2,4.661500E+2,4.671500E+2,4.681500E+2,4.691500E+2,4.701500E+2,4.711500E+2,4.721500E+2,4.731500E+2,4.741500E+2,4.751500E+2,4.761500E+2,4.771500E+2,4.781500E+2,4.791500E+2,4.801500E+2,4.811500E+2,4.821500E+2,4.831500E+2,4.841500E+2,4.851500E+2,4.861500E+2,4.871500E+2,4.881500E+2,4.891500E+2,4.901500E+2,4.911500E+2,4.921500E+2,4.931500E+2,4.941500E+2,4.951500E+2,4.961500E+2,4.971500E+2,4.981500E+2,4.991500E+2,5.001500E+2,5.011500E+2,5.021500E+2,5.031500E+2,5.041500E+2,5.051500E+2,5.061500E+2,5.071500E+2,5.081500E+2,5.091500E+2,5.101500E+2,5.111500E+2,5.121500E+2,5.131500E+2,5.141500E+2,5.151500E+2,5.161500E+2,5.171500E+2,5.181500E+2,5.191500E+2,5.201500E+2,5.211500E+2,5.221500E+2,5.231500E+2,5.241500E+2,5.251500E+2,5.261500E+2,5.271500E+2,5.281500E+2,5.291500E+2,5.301500E+2,5.311500E+2,5.321500E+2,5.331500E+2,5.341500E+2,5.351500E+2,5.361500E+2,5.371500E+2,5.381500E+2,5.391500E+2,5.401500E+2,5.411500E+2,5.421500E+2,5.431500E+2,5.441500E+2,5.451500E+2,5.461500E+2,5.471500E+2,5.481500E+2,5.491500E+2,5.501500E+2,5.511500E+2,5.521500E+2,5.531500E+2,5.541500E+2,5.551500E+2,5.561500E+2,5.571500E+2,5.581500E+2,5.591500E+2,5.601500E+2,5.611500E+2,5.621500E+2,5.631500E+2,5.641500E+2,5.651500E+2,5.661500E+2,5.671500E+2,5.681500E+2,5.691500E+2,5.701500E+2,5.711500E+2,5.721500E+2,5.731500E+2,5.741500E+2,5.751500E+2,5.761500E+2,5.771500E+2,5.781500E+2,5.791500E+2,5.801500E+2,5.811500E+2,5.821500E+2,5.831500E+2,5.841500E+2,5.851500E+2,5.861500E+2,5.871500E+2,5.881500E+2])
        self.density.data             = np.array([8.680000E+2,8.670000E+2,8.650000E+2,8.640000E+2,8.630000E+2,8.620000E+2,8.600000E+2,8.590000E+2,8.580000E+2,8.570000E+2,8.550000E+2,8.540000E+2,8.530000E+2,8.520000E+2,8.510000E+2,8.490000E+2,8.480000E+2,8.470000E+2,8.460000E+2,8.450000E+2,8.430000E+2,8.420000E+2,8.410000E+2,8.400000E+2,8.390000E+2,8.380000E+2,8.360000E+2,8.350000E+2,8.340000E+2,8.330000E+2,8.320000E+2,8.310000E+2,8.300000E+2,8.280000E+2,8.270000E+2,8.260000E+2,8.250000E+2,8.240000E+2,8.230000E+2,8.220000E+2,8.210000E+2,8.200000E+2,8.180000E+2,8.170000E+2,8.160000E+2,8.150000E+2,8.140000E+2,8.130000E+2,8.120000E+2,8.110000E+2,8.100000E+2,8.090000E+2,8.080000E+2,8.070000E+2,8.060000E+2,8.050000E+2,8.040000E+2,8.020000E+2,8.010000E+2,8.000000E+2,7.990000E+2,7.980000E+2,7.970000E+2,7.960000E+2,7.950000E+2,7.940000E+2,7.930000E+2,7.920000E+2,7.910000E+2,7.900000E+2,7.890000E+2,7.880000E+2,7.870000E+2,7.860000E+2,7.860000E+2,7.850000E+2,7.840000E+2,7.830000E+2,7.820000E+2,7.810000E+2,7.800000E+2,7.790000E+2,7.780000E+2,7.770000E+2,7.760000E+2,7.750000E+2,7.740000E+2,7.730000E+2,7.720000E+2,7.720000E+2,7.710000E+2,7.700000E+2,7.690000E+2,7.680000E+2,7.670000E+2,7.660000E+2,7.650000E+2,7.640000E+2,7.640000E+2,7.630000E+2,7.620000E+2,7.610000E+2,7.600000E+2,7.590000E+2,7.580000E+2,7.580000E+2,7.570000E+2,7.560000E+2,7.550000E+2,7.540000E+2,7.530000E+2,7.530000E+2,7.520000E+2,7.510000E+2,7.500000E+2,7.490000E+2,7.490000E+2,7.480000E+2,7.470000E+2,7.460000E+2,7.450000E+2,7.450000E+2,7.440000E+2,7.430000E+2,7.420000E+2,7.420000E+2,7.410000E+2,7.400000E+2,7.390000E+2,7.390000E+2,7.380000E+2,7.370000E+2,7.360000E+2,7.360000E+2,7.350000E+2,7.340000E+2,7.330000E+2,7.330000E+2,7.320000E+2,7.310000E+2,7.310000E+2,7.300000E+2,7.290000E+2,7.290000E+2,7.280000E+2,7.270000E+2,7.260000E+2,7.260000E+2,7.250000E+2,7.240000E+2,7.240000E+2,7.230000E+2,7.220000E+2,7.220000E+2,7.210000E+2,7.210000E+2,7.200000E+2,7.190000E+2,7.190000E+2,7.180000E+2,7.170000E+2,7.170000E+2,7.160000E+2,7.160000E+2,7.150000E+2,7.140000E+2,7.140000E+2,7.130000E+2,7.130000E+2,7.120000E+2,7.110000E+2,7.110000E+2,7.100000E+2,7.100000E+2,7.090000E+2,7.090000E+2,7.080000E+2,7.070000E+2,7.070000E+2,7.060000E+2,7.060000E+2,7.050000E+2,7.050000E+2,7.040000E+2,7.040000E+2,7.030000E+2,7.030000E+2,7.020000E+2,7.020000E+2,7.010000E+2,7.010000E+2,7.000000E+2,7.000000E+2,6.990000E+2,6.990000E+2,6.980000E+2,6.980000E+2,6.970000E+2,6.970000E+2,6.960000E+2,6.960000E+2,6.950000E+2,6.950000E+2,6.940000E+2,6.940000E+2,6.940000E+2,6.930000E+2,6.930000E+2,6.920000E+2,6.920000E+2,6.910000E+2,6.910000E+2,6.910000E+2,6.900000E+2,6.900000E+2,6.890000E+2,6.890000E+2,6.890000E+2,6.880000E+2,6.880000E+2,6.870000E+2,6.870000E+2,6.870000E+2,6.860000E+2,6.860000E+2,6.860000E+2,6.850000E+2,6.850000E+2,6.840000E+2,6.840000E+2,6.840000E+2,6.830000E+2,6.830000E+2,6.830000E+2,6.820000E+2,6.820000E+2,6.820000E+2,6.820000E+2,6.810000E+2,6.810000E+2,6.810000E+2,6.800000E+2,6.800000E+2,6.800000E+2,6.790000E+2,6.790000E+2,6.790000E+2,6.790000E+2,6.780000E+2,6.780000E+2,6.780000E+2,6.780000E+2,6.770000E+2,6.770000E+2,6.770000E+2,6.770000E+2,6.760000E+2,6.760000E+2,6.760000E+2,6.760000E+2,6.750000E+2,6.750000E+2,6.750000E+2,6.750000E+2,6.750000E+2,6.740000E+2,6.740000E+2,6.740000E+2,6.740000E+2,6.740000E+2,6.730000E+2,6.730000E+2,6.730000E+2,6.730000E+2,6.730000E+2,6.730000E+2,6.720000E+2,6.720000E+2,6.720000E+2,6.720000E+2,6.720000E+2,6.720000E+2,6.720000E+2,6.710000E+2,6.710000E+2,6.710000E+2,6.710000E+2,6.710000E+2,6.710000E+2,6.710000E+2,6.710000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.700000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.690000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.680000E+2,6.670000E+2,6.670000E+2,6.670000E+2,6.670000E+2,6.670000E+2,6.670000E+2,6.670000E+2,6.670000E+2])
        self.viscosity.data           = np.array([3.860000E-4,3.150000E-4,2.730000E-4,2.440000E-4,2.210000E-4,2.030000E-4,1.870000E-4,1.730000E-4,1.610000E-4,1.500000E-4,1.410000E-4,1.320000E-4,1.240000E-4,1.160000E-4,1.090000E-4,1.020000E-4,9.600000E-5,9.000000E-5,8.500000E-5,8.000000E-5,7.500000E-5,7.000000E-5,6.500000E-5,6.100000E-5,5.700000E-5,5.300000E-5,4.900000E-5,4.500000E-5,4.200000E-5,3.800000E-5,3.500000E-5,3.200000E-5,2.800000E-5,2.500000E-5,2.800000E-5,2.700000E-5,2.600000E-5,2.500000E-5,2.400000E-5,2.300000E-5,2.200000E-5,2.100000E-5,2.000000E-5,1.900000E-5,1.900000E-5,1.800000E-5,1.700000E-5,1.600000E-5,1.600000E-5,1.500000E-5,1.400000E-5,1.400000E-5,1.300000E-5,1.200000E-5,1.200000E-5,1.100000E-5,1.100000E-5,1.000000E-5,1.000000E-5,9.600000E-6,9.200000E-6,8.900000E-6,8.500000E-6,8.200000E-6,8.000000E-6,7.700000E-6,7.500000E-6,7.300000E-6,7.100000E-6,7.000000E-6,6.800000E-6,6.600000E-6,6.400000E-6,6.200000E-6,6.000000E-6,5.800000E-6,5.700000E-6,5.500000E-6,5.300000E-6,5.200000E-6,5.100000E-6,4.900000E-6,4.800000E-6,4.700000E-6,4.600000E-6,4.500000E-6,4.400000E-6,4.300000E-6,4.200000E-6,4.100000E-6,4.000000E-6,3.900000E-6,3.800000E-6,3.800000E-6,3.700000E-6,3.600000E-6,3.600000E-6,3.500000E-6,3.400000E-6,3.400000E-6,3.300000E-6,3.100000E-6,3.000000E-6,3.000000E-6,2.900000E-6,2.800000E-6,2.800000E-6,2.700000E-6,2.600000E-6,2.600000E-6,2.500000E-6,2.500000E-6,2.400000E-6,2.400000E-6,2.300000E-6,2.300000E-6,2.200000E-6,2.200000E-6,2.100000E-6,2.100000E-6,2.100000E-6,2.000000E-6,2.000000E-6,2.000000E-6,1.900000E-6,1.900000E-6,1.800000E-6,1.800000E-6,1.800000E-6,1.800000E-6,1.700000E-6,1.700000E-6,1.700000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,9.800000E-7,9.700000E-7,9.600000E-7,9.500000E-7,9.400000E-7,9.300000E-7,9.200000E-7,9.100000E-7,9.000000E-7,8.900000E-7,8.800000E-7,8.700000E-7,8.600000E-7,8.500000E-7,8.400000E-7,8.300000E-7,8.200000E-7,8.200000E-7,8.100000E-7,8.000000E-7,7.900000E-7,7.800000E-7,7.800000E-7,7.700000E-7,7.600000E-7,7.500000E-7,7.500000E-7,7.400000E-7,7.300000E-7,7.200000E-7,7.200000E-7,7.100000E-7,7.000000E-7,7.000000E-7,6.900000E-7,6.800000E-7,6.800000E-7,6.700000E-7,6.700000E-7,6.600000E-7,6.500000E-7,6.500000E-7,6.400000E-7,6.400000E-7,6.300000E-7,6.300000E-7,6.200000E-7,6.200000E-7,6.100000E-7,6.100000E-7,6.000000E-7,5.900000E-7,5.900000E-7,5.900000E-7,5.800000E-7,5.800000E-7,5.700000E-7,5.700000E-7,5.600000E-7,5.600000E-7,5.500000E-7,5.500000E-7,5.400000E-7,5.400000E-7,5.400000E-7,5.300000E-7,5.300000E-7,5.200000E-7,5.200000E-7,5.200000E-7,5.100000E-7,5.100000E-7,5.000000E-7,5.000000E-7,5.000000E-7,4.900000E-7,4.900000E-7,4.900000E-7,4.800000E-7,4.800000E-7,4.700000E-7,4.700000E-7,4.700000E-7,4.600000E-7,4.600000E-7,4.600000E-7,4.500000E-7,4.500000E-7,4.500000E-7,4.500000E-7,4.400000E-7,4.400000E-7,4.400000E-7,4.300000E-7,4.300000E-7,4.300000E-7,4.200000E-7,4.200000E-7,4.200000E-7,4.200000E-7,4.100000E-7,4.100000E-7,4.100000E-7,4.100000E-7,4.000000E-7,4.000000E-7,4.000000E-7,3.900000E-7,3.900000E-7,3.900000E-7,3.900000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.800000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.700000E-7,3.600000E-7,3.600000E-7,3.600000E-7,3.600000E-7,3.600000E-7,3.500000E-7,3.500000E-7,3.500000E-7,3.500000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.400000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.300000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.200000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.100000E-7,3.000000E-7,3.000000E-7,3.000000E-7,3.000000E-7,3.000000E-7,3.000000E-7,3.000000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.900000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.700000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.600000E-7])*1e3
        self.specific_heat.data       = np.array
        self.conductivity.data        = np.array
        self.saturation_pressure.data = np.array([     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,1.000000E+4,1.000000E+4,1.000000E+4,1.100000E+4,1.100000E+4,1.100000E+4,1.200000E+4,1.200000E+4,1.200000E+4,1.300000E+4,1.300000E+4,1.300000E+4,1.400000E+4,1.400000E+4,1.500000E+4,1.500000E+4,1.500000E+4,1.600000E+4,1.600000E+4,1.700000E+4,1.700000E+4,1.800000E+4,1.800000E+4,1.900000E+4,1.900000E+4,2.000000E+4,2.000000E+4,2.100000E+4,2.100000E+4,2.200000E+4,2.200000E+4,2.300000E+4,2.400000E+4,2.400000E+4,2.500000E+4,2.600000E+4,2.600000E+4,2.700000E+4,2.800000E+4,2.800000E+4,2.900000E+4,3.000000E+4,3.000000E+4,3.100000E+4,3.200000E+4,3.300000E+4,3.400000E+4,3.500000E+4,3.500000E+4,3.600000E+4,3.700000E+4,3.800000E+4,3.900000E+4,4.000000E+4,4.100000E+4,4.200000E+4,4.300000E+4,4.400000E+4,4.500000E+4,4.600000E+4,4.700000E+4,4.800000E+4,4.900000E+4,5.100000E+4,5.200000E+4,5.300000E+4,5.400000E+4,5.500000E+4,5.700000E+4,5.800000E+4,5.900000E+4,6.100000E+4,6.200000E+4,6.400000E+4,6.500000E+4,6.700000E+4,6.800000E+4,7.000000E+4,7.100000E+4,7.300000E+4,7.400000E+4,7.600000E+4,7.800000E+4])
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = np.min(self.temperature.data[~np.isnan(self.saturation_pressure.data)])
        self.name        = "PMR"
        self.description = "Paratherm "+ self.name[1:]
        self.reference   = "Paratherm2013"
        self.reshapeAll()




class PNF(PureData):
    """
    The Paratherm NF heat transfer fluid is highly efficient, thermally stable
    and cost-effective. Completely non-toxic, it is exceptionally safe to use
    and is easy to dispose. Used fluid can be safely combined with spent
    lubricating oils and recycled locally (EPA, citation 57FR21524). The NF
    fluid is specified in a broad variety of applications, world wide. It is
    tough and durable with a proven record of success under demanding
    conditions, yet is easy and safe to handle.
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([2.631500E+2,2.641500E+2,2.651500E+2,2.661500E+2,2.671500E+2,2.681500E+2,2.691500E+2,2.701500E+2,2.711500E+2,2.721500E+2,2.731500E+2,2.741500E+2,2.751500E+2,2.761500E+2,2.771500E+2,2.781500E+2,2.791500E+2,2.801500E+2,2.811500E+2,2.821500E+2,2.831500E+2,2.841500E+2,2.851500E+2,2.861500E+2,2.871500E+2,2.881500E+2,2.891500E+2,2.901500E+2,2.911500E+2,2.921500E+2,2.931500E+2,2.941500E+2,2.951500E+2,2.961500E+2,2.971500E+2,2.981500E+2,2.991500E+2,3.001500E+2,3.011500E+2,3.021500E+2,3.031500E+2,3.041500E+2,3.051500E+2,3.061500E+2,3.071500E+2,3.081500E+2,3.091500E+2,3.101500E+2,3.111500E+2,3.121500E+2,3.131500E+2,3.141500E+2,3.151500E+2,3.161500E+2,3.171500E+2,3.181500E+2,3.191500E+2,3.201500E+2,3.211500E+2,3.221500E+2,3.231500E+2,3.241500E+2,3.251500E+2,3.261500E+2,3.271500E+2,3.281500E+2,3.291500E+2,3.301500E+2,3.311500E+2,3.321500E+2,3.331500E+2,3.341500E+2,3.351500E+2,3.361500E+2,3.371500E+2,3.381500E+2,3.391500E+2,3.401500E+2,3.411500E+2,3.421500E+2,3.431500E+2,3.441500E+2,3.451500E+2,3.461500E+2,3.471500E+2,3.481500E+2,3.491500E+2,3.501500E+2,3.511500E+2,3.521500E+2,3.531500E+2,3.541500E+2,3.551500E+2,3.561500E+2,3.571500E+2,3.581500E+2,3.591500E+2,3.601500E+2,3.611500E+2,3.621500E+2,3.631500E+2,3.641500E+2,3.651500E+2,3.661500E+2,3.671500E+2,3.681500E+2,3.691500E+2,3.701500E+2,3.711500E+2,3.721500E+2,3.731500E+2,3.741500E+2,3.751500E+2,3.761500E+2,3.771500E+2,3.781500E+2,3.791500E+2,3.801500E+2,3.811500E+2,3.821500E+2,3.831500E+2,3.841500E+2,3.851500E+2,3.861500E+2,3.871500E+2,3.881500E+2,3.891500E+2,3.901500E+2,3.911500E+2,3.921500E+2,3.931500E+2,3.941500E+2,3.951500E+2,3.961500E+2,3.971500E+2,3.981500E+2,3.991500E+2,4.001500E+2,4.011500E+2,4.021500E+2,4.031500E+2,4.041500E+2,4.051500E+2,4.061500E+2,4.071500E+2,4.081500E+2,4.091500E+2,4.101500E+2,4.111500E+2,4.121500E+2,4.131500E+2,4.141500E+2,4.151500E+2,4.161500E+2,4.171500E+2,4.181500E+2,4.191500E+2,4.201500E+2,4.211500E+2,4.221500E+2,4.231500E+2,4.241500E+2,4.251500E+2,4.261500E+2,4.271500E+2,4.281500E+2,4.291500E+2,4.301500E+2,4.311500E+2,4.321500E+2,4.331500E+2,4.341500E+2,4.351500E+2,4.361500E+2,4.371500E+2,4.381500E+2,4.391500E+2,4.401500E+2,4.411500E+2,4.421500E+2,4.431500E+2,4.441500E+2,4.451500E+2,4.461500E+2,4.471500E+2,4.481500E+2,4.491500E+2,4.501500E+2,4.511500E+2,4.521500E+2,4.531500E+2,4.541500E+2,4.551500E+2,4.561500E+2,4.571500E+2,4.581500E+2,4.591500E+2,4.601500E+2,4.611500E+2,4.621500E+2,4.631500E+2,4.641500E+2,4.651500E+2,4.661500E+2,4.671500E+2,4.681500E+2,4.691500E+2,4.701500E+2,4.711500E+2,4.721500E+2,4.731500E+2,4.741500E+2,4.751500E+2,4.761500E+2,4.771500E+2,4.781500E+2,4.791500E+2,4.801500E+2,4.811500E+2,4.821500E+2,4.831500E+2,4.841500E+2,4.851500E+2,4.861500E+2,4.871500E+2,4.881500E+2,4.891500E+2,4.901500E+2,4.911500E+2,4.921500E+2,4.931500E+2,4.941500E+2,4.951500E+2,4.961500E+2,4.971500E+2,4.981500E+2,4.991500E+2,5.001500E+2,5.011500E+2,5.021500E+2,5.031500E+2,5.041500E+2,5.051500E+2,5.061500E+2,5.071500E+2,5.081500E+2,5.091500E+2,5.101500E+2,5.111500E+2,5.121500E+2,5.131500E+2,5.141500E+2,5.151500E+2,5.161500E+2,5.171500E+2,5.181500E+2,5.191500E+2,5.201500E+2,5.211500E+2,5.221500E+2,5.231500E+2,5.241500E+2,5.251500E+2,5.261500E+2,5.271500E+2,5.281500E+2,5.291500E+2,5.301500E+2,5.311500E+2,5.321500E+2,5.331500E+2,5.341500E+2,5.351500E+2,5.361500E+2,5.371500E+2,5.381500E+2,5.391500E+2,5.401500E+2,5.411500E+2,5.421500E+2,5.431500E+2,5.441500E+2,5.451500E+2,5.461500E+2,5.471500E+2,5.481500E+2,5.491500E+2,5.501500E+2,5.511500E+2,5.521500E+2,5.531500E+2,5.541500E+2,5.551500E+2,5.561500E+2,5.571500E+2,5.581500E+2,5.591500E+2,5.601500E+2,5.611500E+2,5.621500E+2,5.631500E+2,5.641500E+2,5.651500E+2,5.661500E+2,5.671500E+2,5.681500E+2,5.691500E+2,5.701500E+2,5.711500E+2,5.721500E+2,5.731500E+2,5.741500E+2,5.751500E+2,5.761500E+2,5.771500E+2,5.781500E+2,5.791500E+2,5.801500E+2,5.811500E+2,5.821500E+2,5.831500E+2,5.841500E+2,5.851500E+2,5.861500E+2,5.871500E+2,5.881500E+2])
        self.density.data             = np.array([9.040000E+2,9.030000E+2,9.030000E+2,9.020000E+2,9.010000E+2,9.010000E+2,9.000000E+2,8.990000E+2,8.990000E+2,8.980000E+2,8.970000E+2,8.970000E+2,8.960000E+2,8.950000E+2,8.950000E+2,8.940000E+2,8.930000E+2,8.930000E+2,8.920000E+2,8.910000E+2,8.910000E+2,8.900000E+2,8.890000E+2,8.890000E+2,8.880000E+2,8.870000E+2,8.870000E+2,8.860000E+2,8.850000E+2,8.850000E+2,8.840000E+2,8.830000E+2,8.830000E+2,8.820000E+2,8.810000E+2,8.810000E+2,8.800000E+2,8.790000E+2,8.790000E+2,8.780000E+2,8.780000E+2,8.770000E+2,8.760000E+2,8.760000E+2,8.750000E+2,8.740000E+2,8.740000E+2,8.730000E+2,8.720000E+2,8.720000E+2,8.710000E+2,8.700000E+2,8.700000E+2,8.690000E+2,8.680000E+2,8.680000E+2,8.670000E+2,8.660000E+2,8.660000E+2,8.650000E+2,8.640000E+2,8.640000E+2,8.630000E+2,8.620000E+2,8.620000E+2,8.610000E+2,8.600000E+2,8.600000E+2,8.590000E+2,8.580000E+2,8.580000E+2,8.570000E+2,8.560000E+2,8.560000E+2,8.550000E+2,8.540000E+2,8.540000E+2,8.530000E+2,8.520000E+2,8.520000E+2,8.510000E+2,8.500000E+2,8.500000E+2,8.490000E+2,8.480000E+2,8.480000E+2,8.470000E+2,8.460000E+2,8.460000E+2,8.450000E+2,8.440000E+2,8.440000E+2,8.430000E+2,8.420000E+2,8.420000E+2,8.410000E+2,8.400000E+2,8.400000E+2,8.390000E+2,8.380000E+2,8.380000E+2,8.370000E+2,8.360000E+2,8.360000E+2,8.350000E+2,8.340000E+2,8.340000E+2,8.330000E+2,8.320000E+2,8.320000E+2,8.310000E+2,8.300000E+2,8.300000E+2,8.290000E+2,8.280000E+2,8.280000E+2,8.270000E+2,8.260000E+2,8.260000E+2,8.250000E+2,8.240000E+2,8.240000E+2,8.230000E+2,8.220000E+2,8.220000E+2,8.210000E+2,8.200000E+2,8.200000E+2,8.190000E+2,8.190000E+2,8.180000E+2,8.170000E+2,8.170000E+2,8.160000E+2,8.150000E+2,8.150000E+2,8.140000E+2,8.130000E+2,8.130000E+2,8.120000E+2,8.110000E+2,8.110000E+2,8.100000E+2,8.090000E+2,8.090000E+2,8.080000E+2,8.070000E+2,8.070000E+2,8.060000E+2,8.050000E+2,8.050000E+2,8.040000E+2,8.030000E+2,8.030000E+2,8.020000E+2,8.010000E+2,8.010000E+2,8.000000E+2,7.990000E+2,7.990000E+2,7.980000E+2,7.970000E+2,7.970000E+2,7.960000E+2,7.950000E+2,7.950000E+2,7.940000E+2,7.930000E+2,7.930000E+2,7.920000E+2,7.910000E+2,7.910000E+2,7.900000E+2,7.890000E+2,7.890000E+2,7.880000E+2,7.870000E+2,7.870000E+2,7.860000E+2,7.850000E+2,7.850000E+2,7.840000E+2,7.830000E+2,7.830000E+2,7.820000E+2,7.810000E+2,7.810000E+2,7.800000E+2,7.790000E+2,7.790000E+2,7.780000E+2,7.770000E+2,7.770000E+2,7.760000E+2,7.750000E+2,7.750000E+2,7.740000E+2,7.730000E+2,7.730000E+2,7.720000E+2,7.710000E+2,7.710000E+2,7.700000E+2,7.690000E+2,7.690000E+2,7.680000E+2,7.670000E+2,7.670000E+2,7.660000E+2,7.650000E+2,7.650000E+2,7.640000E+2,7.630000E+2,7.630000E+2,7.620000E+2,7.610000E+2,7.610000E+2,7.600000E+2,7.590000E+2,7.590000E+2,7.580000E+2,7.580000E+2,7.570000E+2,7.560000E+2,7.560000E+2,7.550000E+2,7.540000E+2,7.540000E+2,7.530000E+2,7.520000E+2,7.520000E+2,7.510000E+2,7.500000E+2,7.500000E+2,7.490000E+2,7.480000E+2,7.480000E+2,7.470000E+2,7.460000E+2,7.460000E+2,7.450000E+2,7.440000E+2,7.440000E+2,7.430000E+2,7.420000E+2,7.420000E+2,7.410000E+2,7.400000E+2,7.400000E+2,7.390000E+2,7.380000E+2,7.380000E+2,7.370000E+2,7.360000E+2,7.360000E+2,7.350000E+2,7.340000E+2,7.340000E+2,7.330000E+2,7.320000E+2,7.320000E+2,7.310000E+2,7.300000E+2,7.300000E+2,7.290000E+2,7.280000E+2,7.280000E+2,7.270000E+2,7.260000E+2,7.260000E+2,7.250000E+2,7.240000E+2,7.240000E+2,7.230000E+2,7.220000E+2,7.220000E+2,7.210000E+2,7.200000E+2,7.200000E+2,7.190000E+2,7.180000E+2,7.180000E+2,7.170000E+2,7.160000E+2,7.160000E+2,7.150000E+2,7.140000E+2,7.140000E+2,7.130000E+2,7.120000E+2,7.120000E+2,7.110000E+2,7.100000E+2,7.100000E+2,7.090000E+2,7.080000E+2,7.080000E+2,7.070000E+2,7.060000E+2,7.060000E+2,7.050000E+2,7.040000E+2,7.040000E+2,7.030000E+2,7.020000E+2,7.020000E+2,7.010000E+2,7.000000E+2,7.000000E+2,6.990000E+2,6.980000E+2,6.980000E+2,6.970000E+2,6.970000E+2,6.960000E+2,6.950000E+2,6.950000E+2,6.940000E+2,6.930000E+2,6.930000E+2,6.920000E+2,6.910000E+2,6.910000E+2,6.900000E+2,6.890000E+2,6.890000E+2])
        self.viscosity.data           = np.array([4.760000E-4,4.380000E-4,4.040000E-4,3.720000E-4,3.430000E-4,3.160000E-4,2.910000E-4,2.680000E-4,2.470000E-4,2.280000E-4,2.100000E-4,1.940000E-4,1.780000E-4,1.640000E-4,1.510000E-4,1.400000E-4,1.290000E-4,1.180000E-4,1.090000E-4,1.010000E-4,9.300000E-5,8.600000E-5,8.000000E-5,7.400000E-5,6.900000E-5,6.400000E-5,5.900000E-5,5.500000E-5,5.100000E-5,4.800000E-5,4.500000E-5,4.200000E-5,3.900000E-5,3.700000E-5,3.400000E-5,3.200000E-5,3.100000E-5,2.900000E-5,2.700000E-5,2.600000E-5,2.500000E-5,2.400000E-5,2.200000E-5,2.100000E-5,2.100000E-5,2.000000E-5,1.900000E-5,1.800000E-5,1.800000E-5,1.700000E-5,1.600000E-5,1.500000E-5,1.500000E-5,1.400000E-5,1.400000E-5,1.300000E-5,1.300000E-5,1.200000E-5,1.200000E-5,1.100000E-5,1.100000E-5,1.000000E-5,1.000000E-5,9.700000E-6,9.400000E-6,9.100000E-6,8.800000E-6,8.500000E-6,8.200000E-6,8.000000E-6,7.800000E-6,7.500000E-6,7.300000E-6,7.100000E-6,6.900000E-6,6.700000E-6,6.500000E-6,6.300000E-6,6.200000E-6,6.000000E-6,5.900000E-6,5.700000E-6,5.600000E-6,5.400000E-6,5.300000E-6,5.200000E-6,5.100000E-6,4.900000E-6,4.800000E-6,4.700000E-6,4.600000E-6,4.500000E-6,4.400000E-6,4.300000E-6,4.200000E-6,4.100000E-6,4.000000E-6,3.900000E-6,3.900000E-6,3.800000E-6,3.700000E-6,3.600000E-6,3.600000E-6,3.500000E-6,3.400000E-6,3.400000E-6,3.300000E-6,3.200000E-6,3.200000E-6,3.100000E-6,3.100000E-6,3.000000E-6,3.000000E-6,2.900000E-6,2.800000E-6,2.800000E-6,2.800000E-6,2.700000E-6,2.700000E-6,2.600000E-6,2.600000E-6,2.500000E-6,2.500000E-6,2.500000E-6,2.400000E-6,2.400000E-6,2.300000E-6,2.300000E-6,2.300000E-6,2.200000E-6,2.200000E-6,2.200000E-6,2.100000E-6,2.100000E-6,2.100000E-6,2.000000E-6,2.000000E-6,2.000000E-6,2.000000E-6,1.900000E-6,1.900000E-6,1.900000E-6,1.800000E-6,1.800000E-6,1.800000E-6,1.800000E-6,1.700000E-6,1.700000E-6,1.700000E-6,1.700000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.600000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.500000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.400000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.300000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.200000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.100000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,1.000000E-6,9.900000E-7,9.800000E-7,9.700000E-7,9.600000E-7,9.600000E-7,9.500000E-7,9.400000E-7,9.300000E-7,9.200000E-7,9.100000E-7,9.000000E-7,8.900000E-7,8.800000E-7,8.600000E-7,8.500000E-7,8.400000E-7,8.300000E-7,8.100000E-7,8.000000E-7,7.900000E-7,7.800000E-7,7.700000E-7,7.500000E-7,7.400000E-7,7.300000E-7,7.200000E-7,7.100000E-7,7.000000E-7,6.900000E-7,6.800000E-7,6.700000E-7,6.600000E-7,6.500000E-7,6.400000E-7,6.300000E-7,6.200000E-7,6.100000E-7,6.000000E-7,5.900000E-7,5.800000E-7,5.700000E-7,5.600000E-7,5.600000E-7,5.500000E-7,5.400000E-7,5.300000E-7,5.200000E-7,5.200000E-7,5.100000E-7,5.000000E-7,4.900000E-7,4.800000E-7,4.800000E-7,4.700000E-7,4.600000E-7,4.600000E-7,4.500000E-7,4.400000E-7,4.400000E-7,4.300000E-7,4.200000E-7,4.200000E-7,4.100000E-7,4.000000E-7,4.000000E-7,3.900000E-7,3.900000E-7,3.800000E-7,3.700000E-7,3.700000E-7,3.600000E-7,3.600000E-7,3.500000E-7,3.500000E-7,3.400000E-7,3.400000E-7,3.300000E-7,3.300000E-7,3.200000E-7,3.200000E-7,3.100000E-7,3.100000E-7,3.000000E-7,3.000000E-7,2.900000E-7,2.900000E-7,2.800000E-7,2.800000E-7,2.800000E-7,2.700000E-7,2.700000E-7,2.600000E-7,2.600000E-7,2.600000E-7,2.500000E-7,2.500000E-7,2.400000E-7,2.400000E-7,2.400000E-7,2.300000E-7,2.300000E-7,2.300000E-7,2.200000E-7,2.200000E-7,2.200000E-7,2.100000E-7,2.100000E-7,2.100000E-7,2.000000E-7,2.000000E-7,2.000000E-7,1.900000E-7,1.900000E-7,1.900000E-7,1.900000E-7,1.800000E-7,1.800000E-7,1.800000E-7,1.800000E-7,1.700000E-7,1.700000E-7,1.700000E-7,1.600000E-7,1.600000E-7,1.600000E-7,1.600000E-7,1.600000E-7,1.500000E-7,1.500000E-7,1.500000E-7,1.500000E-7])*1e3
        self.specific_heat.data       = np.array
        self.conductivity.data        = np.array([1.070000E-1,1.070000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.060000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.050000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.040000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.030000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.020000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.010000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,1.000000E-1,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.900000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.800000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.700000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.600000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.500000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.400000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.300000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.200000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.100000E-2,9.000000E-2,9.000000E-2,9.000000E-2,9.000000E-2,9.000000E-2,9.000000E-2,9.000000E-2,9.000000E-2,9.000000E-2,9.000000E-2,9.000000E-2])
        self.saturation_pressure.data = np.array([     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,3.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,4.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,5.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,6.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,7.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,8.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,9.000000E+3,1.000000E+4,1.000000E+4,1.000000E+4,1.000000E+4,1.000000E+4,1.000000E+4,1.000000E+4,1.000000E+4,1.000000E+4,1.100000E+4,1.100000E+4,1.100000E+4,1.100000E+4,1.100000E+4,1.100000E+4,1.100000E+4,1.200000E+4,1.200000E+4,1.200000E+4,1.200000E+4,1.200000E+4,1.200000E+4,1.200000E+4,1.300000E+4,1.300000E+4,1.300000E+4,1.300000E+4,1.300000E+4,1.300000E+4,1.300000E+4,1.400000E+4,1.400000E+4,1.400000E+4,1.400000E+4])
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = np.min(self.temperature.data[~np.isnan(self.saturation_pressure.data)])
        self.name        = "PNF"
        self.description = "Paratherm "+ self.name[1:]
        self.reference   = "Paratherm2013"
        self.reshapeAll()


class Water(PureData):
    """
    This is just a fit of the full EOS from Wagner and Pruss
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([0.0000e+00, 5.1282e+00, 1.0256e+01, 1.5385e+01, 2.0513e+01, 2.5641e+01, 3.0769e+01, 3.5897e+01, 4.1026e+01, 4.6154e+01, 5.1282e+01, 5.6410e+01, 6.1538e+01, 6.6667e+01, 7.1795e+01, 7.6923e+01, 8.2051e+01, 8.7179e+01, 9.2308e+01, 9.7436e+01, 1.0256e+02, 1.0769e+02, 1.1282e+02, 1.1795e+02, 1.2308e+02, 1.2821e+02, 1.3333e+02, 1.3846e+02, 1.4359e+02, 1.4872e+02, 1.5385e+02, 1.5897e+02, 1.6410e+02, 1.6923e+02, 1.7436e+02, 1.7949e+02, 1.8462e+02, 1.8974e+02, 1.9487e+02, 2.0000e+02 ])+273.15
        self.density.data             = np.array([1.0023e+03, 1.0024e+03, 1.0020e+03, 1.0013e+03, 1.0003e+03, 9.9907e+02, 9.9758e+02, 9.9587e+02, 9.9396e+02, 9.9185e+02, 9.8957e+02, 9.8713e+02, 9.8453e+02, 9.8178e+02, 9.7888e+02, 9.7585e+02, 9.7343e+02, 9.7014e+02, 9.6674e+02, 9.6321e+02, 9.5956e+02, 9.5580e+02, 9.5192e+02, 9.4793e+02, 9.4383e+02, 9.3962e+02, 9.3530e+02, 9.3086e+02, 9.2632e+02, 9.2166e+02, 9.1689e+02, 9.1200e+02, 9.0700e+02, 9.0188e+02, 8.9663e+02, 8.9127e+02, 8.8577e+02, 8.8014e+02, 8.7438e+02, 8.6848e+02 ])
        self.specific_heat.data       = np.array([4.1960e+03, 4.1845e+03, 4.1768e+03, 4.1719e+03, 4.1689e+03, 4.1673e+03, 4.1668e+03, 4.1670e+03, 4.1678e+03, 4.1691e+03, 4.1707e+03, 4.1727e+03, 4.1750e+03, 4.1777e+03, 4.1807e+03, 4.1840e+03, 4.1842e+03, 4.1884e+03, 4.1930e+03, 4.1981e+03, 4.2038e+03, 4.2100e+03, 4.2168e+03, 4.2242e+03, 4.2323e+03, 4.2411e+03, 4.2507e+03, 4.2611e+03, 4.2723e+03, 4.2844e+03, 4.2974e+03, 4.3114e+03, 4.3265e+03, 4.3426e+03, 4.3600e+03, 4.3785e+03, 4.3984e+03, 4.4198e+03, 4.4427e+03, 4.4672e+03 ])
        self.conductivity.data        = np.array([5.5933e-01, 5.7148e-01, 5.8247e-01, 5.9252e-01, 6.0177e-01, 6.1031e-01, 6.1823e-01, 6.2557e-01, 6.3240e-01, 6.3873e-01, 6.4460e-01, 6.5002e-01, 6.5501e-01, 6.5958e-01, 6.6376e-01, 6.6754e-01, 6.7095e-01, 6.7398e-01, 6.7665e-01, 6.7897e-01, 6.8187e-01, 6.8352e-01, 6.8484e-01, 6.8584e-01, 6.8652e-01, 6.8689e-01, 6.8697e-01, 6.8675e-01, 6.8624e-01, 6.8544e-01, 6.8437e-01, 6.8306e-01, 6.8169e-01, 6.8001e-01, 6.7802e-01, 6.7577e-01, 6.7326e-01, 6.7050e-01, 6.6749e-01, 6.6423e-01 ])
        self.viscosity.data           = np.array([1.7811e-03, 1.5053e-03, 1.2921e-03, 1.1236e-03, 9.8781e-04, 8.7664e-04, 7.8435e-04, 7.0683e-04, 6.4103e-04, 5.8466e-04, 5.3599e-04, 4.9366e-04, 4.5661e-04, 4.2399e-04, 3.9511e-04, 3.6944e-04, 3.4650e-04, 3.2593e-04, 3.0741e-04, 2.9068e-04, 2.7595e-04, 2.6216e-04, 2.4957e-04, 2.3807e-04, 2.2752e-04, 2.1782e-04, 2.0888e-04, 2.0062e-04, 1.9297e-04, 1.8588e-04, 1.7928e-04, 1.7313e-04, 1.6739e-04, 1.6202e-04, 1.5698e-04, 1.5225e-04, 1.4780e-04, 1.4360e-04, 1.3963e-04, 1.3587e-04 ])
        self.saturation_pressure.data = np.array([    np.NAN, 8.8041e+02, 1.2495e+03, 1.7485e+03, 2.4147e+03, 3.2931e+03, 4.4381e+03, 5.9145e+03, 7.7984e+03, 1.0179e+04, 1.3160e+04, 1.6858e+04, 2.1410e+04, 2.6968e+04, 3.3704e+04, 4.1808e+04, 5.1493e+04, 6.2992e+04, 7.6562e+04, 9.2482e+04, 1.1106e+05, 1.3261e+05, 1.5750e+05, 1.8610e+05, 2.1882e+05, 2.5608e+05, 2.9834e+05, 3.4608e+05, 3.9979e+05, 4.6002e+05, 5.2732e+05, 6.0227e+05, 6.8548e+05, 7.7757e+05, 8.7919e+05, 9.9104e+05, 1.1138e+06, 1.2482e+06, 1.3950e+06, 1.5549e+06 ])
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = np.min(self.temperature.data[~np.isnan(self.saturation_pressure.data)])
        self.name        = "Water"
        self.description = "Fit of EOS from 1 bar to 100 bar"
        self.reference   = "Wagner-JPCRD-2002, Huber-JPCRD-2009"
        self.reshapeAll()
        # Specific heat needs special coefficiencts
        # self.specific_heat.coeffs = np.zeros((5,7))


class Pirobloc(PureData):
    """
    Pirobloc HTF-BASIC is a fluid for heat transmission specially 
    formulated from synthetic oils and additives. It allows to work 
    till 330C in a close circuit. 
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        #self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([   50,   100,   150,   200,   250,   300])+273.15 # C -> K
        self.density.data             = np.array([0.857, 0.824, 0.792, 0.759, 0.727, 0.692])*1e3 # kg/l -> kg/m3
        self.viscosity.data           = np.array([ 17.0,  4.50,  1.80,  1.00,  0.65,  0.50])/1e6*self.density.data # cSt -> Pa*s
        self.specific_heat.data       = np.array([0.474, 0.522, 0.568, 0.617, 0.663, 0.712])*4186.799993 # cal/g -> J/kg
        self.conductivity.data        = np.array([0.111, 0.107, 0.104, 0.101, 0.098, 0.095])*1.162222 # cal/h/m/C -> W/m/K
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = self.Tmax # np.min(self.temperature.data[~np.isnan(self.saturation_pressure.data)])
        self.name        = "PBB"
        self.description = "Pirobloc HTF-BASIC"
        self.reference   = "http://www.fluidotermico.com"
        self.reshapeAll()
        

class Syltherm800(PureData):
    """
    Syltherm800 is a fluid for high temperature heat transfer. 
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.saturation_pressure.source = self.saturation_pressure.SOURCE_DATA
        self.temperature.data         = np.array([-4.000E+01, -3.800E+01, -3.600E+01, -3.400E+01, -3.200E+01, -3.000E+01, -2.800E+01, -2.600E+01, -2.400E+01, -2.200E+01, -2.000E+01, -1.800E+01, -1.600E+01, -1.400E+01, -1.200E+01, -1.000E+01, -8.000E+00, -6.000E+00, -4.000E+00, -2.000E+00,  0.000E+00,  2.000E+00,  4.000E+00,  6.000E+00,  8.000E+00,  1.000E+01,  1.200E+01,  1.400E+01,  1.600E+01,  1.800E+01,  2.000E+01,  2.200E+01,  2.400E+01,  2.600E+01,  2.800E+01,  3.000E+01,  3.200E+01,  3.400E+01,  3.600E+01,  3.800E+01,  4.000E+01,  4.200E+01,  4.400E+01,  4.600E+01,  4.800E+01,  5.000E+01,  5.200E+01,  5.400E+01,  5.600E+01,  5.800E+01,  6.000E+01,  6.200E+01,  6.400E+01,  6.600E+01,  6.800E+01,  7.000E+01,  7.200E+01,  7.400E+01,  7.600E+01,  7.800E+01,  8.000E+01,  8.200E+01,  8.400E+01,  8.600E+01,  8.800E+01,  9.000E+01,  9.200E+01,  9.400E+01,  9.600E+01,  9.800E+01,  1.000E+02,  1.020E+02,  1.040E+02,  1.060E+02,  1.080E+02,  1.100E+02,  1.120E+02,  1.140E+02,  1.160E+02,  1.180E+02,  1.200E+02,  1.220E+02,  1.240E+02,  1.260E+02,  1.280E+02,  1.300E+02,  1.320E+02,  1.340E+02,  1.360E+02,  1.380E+02,  1.400E+02,  1.420E+02,  1.440E+02,  1.460E+02,  1.480E+02,  1.500E+02,  1.520E+02,  1.540E+02,  1.560E+02,  1.580E+02,  1.600E+02,  1.620E+02,  1.640E+02,  1.660E+02,  1.680E+02,  1.700E+02,  1.720E+02,  1.740E+02,  1.760E+02,  1.780E+02,  1.800E+02,  1.820E+02,  1.840E+02,  1.860E+02,  1.880E+02,  1.900E+02,  1.920E+02,  1.940E+02,  1.960E+02,  1.980E+02,  2.000E+02,  2.020E+02,  2.040E+02,  2.060E+02,  2.080E+02,  2.100E+02,  2.120E+02,  2.140E+02,  2.160E+02,  2.180E+02,  2.200E+02,  2.220E+02,  2.240E+02,  2.260E+02,  2.280E+02,  2.300E+02,  2.320E+02,  2.340E+02,  2.360E+02,  2.380E+02,  2.400E+02,  2.420E+02,  2.440E+02,  2.460E+02,  2.480E+02,  2.500E+02,  2.520E+02,  2.540E+02,  2.560E+02,  2.580E+02,  2.600E+02,  2.620E+02,  2.640E+02,  2.660E+02,  2.680E+02,  2.700E+02,  2.720E+02,  2.740E+02,  2.760E+02,  2.780E+02,  2.800E+02,  2.820E+02,  2.840E+02,  2.860E+02,  2.880E+02,  2.900E+02,  2.920E+02,  2.940E+02,  2.960E+02,  2.980E+02,  3.000E+02,  3.020E+02,  3.040E+02,  3.060E+02,  3.080E+02,  3.100E+02,  3.120E+02,  3.140E+02,  3.160E+02,  3.180E+02,  3.200E+02,  3.220E+02,  3.240E+02,  3.260E+02,  3.280E+02,  3.300E+02,  3.320E+02,  3.340E+02,  3.360E+02,  3.380E+02,  3.400E+02,  3.420E+02,  3.440E+02,  3.460E+02,  3.480E+02,  3.500E+02,  3.520E+02,  3.540E+02,  3.560E+02,  3.580E+02,  3.600E+02,  3.620E+02,  3.640E+02,  3.660E+02,  3.680E+02,  3.700E+02,  3.720E+02,  3.740E+02,  3.760E+02,  3.780E+02,  3.800E+02,  3.820E+02,  3.840E+02,  3.860E+02,  3.880E+02,  3.900E+02,  3.920E+02,  3.940E+02,  3.960E+02,  3.980E+02])+273.15
        self.density.data             = np.array([ 9.917E+02,  9.898E+02,  9.879E+02,  9.860E+02,  9.841E+02,  9.822E+02,  9.803E+02,  9.784E+02,  9.765E+02,  9.746E+02,  9.728E+02,  9.709E+02,  9.690E+02,  9.672E+02,  9.653E+02,  9.635E+02,  9.616E+02,  9.598E+02,  9.579E+02,  9.561E+02,  9.542E+02,  9.524E+02,  9.506E+02,  9.487E+02,  9.469E+02,  9.451E+02,  9.433E+02,  9.415E+02,  9.397E+02,  9.378E+02,  9.360E+02,  9.342E+02,  9.324E+02,  9.306E+02,  9.288E+02,  9.270E+02,  9.252E+02,  9.235E+02,  9.217E+02,  9.199E+02,  9.181E+02,  9.163E+02,  9.145E+02,  9.128E+02,  9.110E+02,  9.092E+02,  9.074E+02,  9.056E+02,  9.039E+02,  9.021E+02,  9.003E+02,  8.986E+02,  8.968E+02,  8.950E+02,  8.933E+02,  8.915E+02,  8.897E+02,  8.880E+02,  8.862E+02,  8.844E+02,  8.827E+02,  8.809E+02,  8.791E+02,  8.774E+02,  8.756E+02,  8.738E+02,  8.721E+02,  8.703E+02,  8.685E+02,  8.668E+02,  8.650E+02,  8.632E+02,  8.615E+02,  8.597E+02,  8.579E+02,  8.562E+02,  8.544E+02,  8.526E+02,  8.509E+02,  8.491E+02,  8.473E+02,  8.455E+02,  8.437E+02,  8.420E+02,  8.402E+02,  8.384E+02,  8.366E+02,  8.348E+02,  8.330E+02,  8.312E+02,  8.294E+02,  8.276E+02,  8.258E+02,  8.240E+02,  8.222E+02,  8.204E+02,  8.186E+02,  8.168E+02,  8.150E+02,  8.132E+02,  8.114E+02,  8.095E+02,  8.077E+02,  8.059E+02,  8.040E+02,  8.022E+02,  8.004E+02,  7.985E+02,  7.967E+02,  7.948E+02,  7.930E+02,  7.911E+02,  7.892E+02,  7.874E+02,  7.855E+02,  7.836E+02,  7.818E+02,  7.799E+02,  7.780E+02,  7.761E+02,  7.742E+02,  7.723E+02,  7.704E+02,  7.685E+02,  7.666E+02,  7.646E+02,  7.627E+02,  7.608E+02,  7.588E+02,  7.569E+02,  7.550E+02,  7.530E+02,  7.510E+02,  7.491E+02,  7.471E+02,  7.451E+02,  7.432E+02,  7.412E+02,  7.392E+02,  7.372E+02,  7.352E+02,  7.332E+02,  7.311E+02,  7.291E+02,  7.271E+02,  7.250E+02,  7.230E+02,  7.210E+02,  7.189E+02,  7.168E+02,  7.148E+02,  7.127E+02,  7.106E+02,  7.085E+02,  7.064E+02,  7.043E+02,  7.022E+02,  7.001E+02,  6.979E+02,  6.958E+02,  6.936E+02,  6.915E+02,  6.893E+02,  6.872E+02,  6.850E+02,  6.828E+02,  6.806E+02,  6.784E+02,  6.762E+02,  6.740E+02,  6.717E+02,  6.695E+02,  6.673E+02,  6.650E+02,  6.627E+02,  6.605E+02,  6.582E+02,  6.559E+02,  6.536E+02,  6.513E+02,  6.490E+02,  6.466E+02,  6.443E+02,  6.420E+02,  6.396E+02,  6.372E+02,  6.349E+02,  6.325E+02,  6.301E+02,  6.277E+02,  6.253E+02,  6.228E+02,  6.204E+02,  6.179E+02,  6.155E+02,  6.130E+02,  6.105E+02,  6.080E+02,  6.055E+02,  6.030E+02,  6.005E+02,  5.980E+02,  5.954E+02,  5.929E+02,  5.903E+02,  5.877E+02,  5.851E+02,  5.825E+02,  5.799E+02,  5.773E+02,  5.747E+02,  5.720E+02,  5.693E+02,  5.667E+02,  5.640E+02,  5.613E+02,  5.586E+02,  5.559E+02,  5.531E+02,  5.504E+02])
        self.specific_heat.data       = np.array([ 1.510E+00,  1.510E+00,  1.510E+00,  1.520E+00,  1.520E+00,  1.520E+00,  1.530E+00,  1.530E+00,  1.530E+00,  1.540E+00,  1.540E+00,  1.540E+00,  1.550E+00,  1.550E+00,  1.550E+00,  1.560E+00,  1.560E+00,  1.560E+00,  1.570E+00,  1.570E+00,  1.570E+00,  1.580E+00,  1.580E+00,  1.580E+00,  1.590E+00,  1.590E+00,  1.600E+00,  1.600E+00,  1.600E+00,  1.610E+00,  1.610E+00,  1.610E+00,  1.620E+00,  1.620E+00,  1.620E+00,  1.630E+00,  1.630E+00,  1.630E+00,  1.640E+00,  1.640E+00,  1.640E+00,  1.650E+00,  1.650E+00,  1.650E+00,  1.660E+00,  1.660E+00,  1.660E+00,  1.670E+00,  1.670E+00,  1.670E+00,  1.680E+00,  1.680E+00,  1.680E+00,  1.690E+00,  1.690E+00,  1.690E+00,  1.700E+00,  1.700E+00,  1.700E+00,  1.710E+00,  1.710E+00,  1.710E+00,  1.720E+00,  1.720E+00,  1.720E+00,  1.730E+00,  1.730E+00,  1.740E+00,  1.740E+00,  1.740E+00,  1.750E+00,  1.750E+00,  1.750E+00,  1.750E+00,  1.760E+00,  1.760E+00,  1.770E+00,  1.770E+00,  1.770E+00,  1.780E+00,  1.780E+00,  1.780E+00,  1.790E+00,  1.790E+00,  1.790E+00,  1.800E+00,  1.800E+00,  1.800E+00,  1.810E+00,  1.810E+00,  1.810E+00,  1.820E+00,  1.820E+00,  1.820E+00,  1.830E+00,  1.830E+00,  1.830E+00,  1.840E+00,  1.840E+00,  1.840E+00,  1.850E+00,  1.850E+00,  1.850E+00,  1.860E+00,  1.860E+00,  1.860E+00,  1.870E+00,  1.870E+00,  1.880E+00,  1.880E+00,  1.880E+00,  1.890E+00,  1.890E+00,  1.890E+00,  1.900E+00,  1.900E+00,  1.900E+00,  1.910E+00,  1.910E+00,  1.910E+00,  1.920E+00,  1.920E+00,  1.920E+00,  1.930E+00,  1.930E+00,  1.930E+00,  1.940E+00,  1.940E+00,  1.940E+00,  1.950E+00,  1.950E+00,  1.950E+00,  1.960E+00,  1.960E+00,  1.960E+00,  1.970E+00,  1.970E+00,  1.970E+00,  1.980E+00,  1.980E+00,  1.980E+00,  1.990E+00,  1.990E+00,  1.990E+00,  2.000E+00,  2.000E+00,  2.000E+00,  2.010E+00,  2.010E+00,  2.020E+00,  2.020E+00,  2.020E+00,  2.030E+00,  2.030E+00,  2.030E+00,  2.040E+00,  2.040E+00,  2.040E+00,  2.050E+00,  2.050E+00,  2.050E+00,  2.060E+00,  2.060E+00,  2.060E+00,  2.070E+00,  2.070E+00,  2.070E+00,  2.080E+00,  2.080E+00,  2.080E+00,  2.090E+00,  2.090E+00,  2.090E+00,  2.100E+00,  2.100E+00,  2.100E+00,  2.110E+00,  2.110E+00,  2.110E+00,  2.120E+00,  2.120E+00,  2.120E+00,  2.130E+00,  2.130E+00,  2.130E+00,  2.140E+00,  2.140E+00,  2.140E+00,  2.150E+00,  2.150E+00,  2.150E+00,  2.160E+00,  2.160E+00,  2.170E+00,  2.170E+00,  2.170E+00,  2.170E+00,  2.180E+00,  2.180E+00,  2.190E+00,  2.190E+00,  2.190E+00,  2.200E+00,  2.200E+00,  2.200E+00,  2.210E+00,  2.210E+00,  2.210E+00,  2.220E+00,  2.220E+00,  2.220E+00,  2.230E+00,  2.230E+00,  2.230E+00,  2.240E+00,  2.240E+00,  2.240E+00,  2.250E+00,  2.250E+00,  2.250E+00])*1e3
        self.conductivity.data        = np.array([ 1.460E-01,  1.460E-01,  1.460E-01,  1.450E-01,  1.450E-01,  1.440E-01,  1.440E-01,  1.440E-01,  1.430E-01,  1.430E-01,  1.430E-01,  1.420E-01,  1.420E-01,  1.410E-01,  1.410E-01,  1.410E-01,  1.400E-01,  1.400E-01,  1.400E-01,  1.390E-01,  1.390E-01,  1.380E-01,  1.380E-01,  1.380E-01,  1.370E-01,  1.370E-01,  1.370E-01,  1.360E-01,  1.360E-01,  1.350E-01,  1.350E-01,  1.350E-01,  1.340E-01,  1.340E-01,  1.340E-01,  1.330E-01,  1.330E-01,  1.320E-01,  1.320E-01,  1.320E-01,  1.310E-01,  1.310E-01,  1.300E-01,  1.300E-01,  1.300E-01,  1.290E-01,  1.290E-01,  1.290E-01,  1.280E-01,  1.280E-01,  1.270E-01,  1.270E-01,  1.270E-01,  1.260E-01,  1.260E-01,  1.260E-01,  1.250E-01,  1.250E-01,  1.240E-01,  1.240E-01,  1.240E-01,  1.230E-01,  1.230E-01,  1.230E-01,  1.220E-01,  1.220E-01,  1.210E-01,  1.210E-01,  1.210E-01,  1.200E-01,  1.200E-01,  1.200E-01,  1.190E-01,  1.190E-01,  1.180E-01,  1.180E-01,  1.180E-01,  1.170E-01,  1.170E-01,  1.170E-01,  1.160E-01,  1.160E-01,  1.150E-01,  1.150E-01,  1.150E-01,  1.140E-01,  1.140E-01,  1.140E-01,  1.130E-01,  1.130E-01,  1.120E-01,  1.120E-01,  1.120E-01,  1.110E-01,  1.110E-01,  1.110E-01,  1.100E-01,  1.100E-01,  1.090E-01,  1.090E-01,  1.090E-01,  1.080E-01,  1.080E-01,  1.080E-01,  1.070E-01,  1.070E-01,  1.060E-01,  1.060E-01,  1.060E-01,  1.050E-01,  1.050E-01,  1.050E-01,  1.040E-01,  1.040E-01,  1.030E-01,  1.030E-01,  1.030E-01,  1.020E-01,  1.020E-01,  1.020E-01,  1.010E-01,  1.010E-01,  1.000E-01,  1.000E-01,  1.000E-01,  9.900E-02,  9.900E-02,  9.900E-02,  9.800E-02,  9.800E-02,  9.700E-02,  9.700E-02,  9.700E-02,  9.600E-02,  9.600E-02,  9.600E-02,  9.500E-02,  9.500E-02,  9.400E-02,  9.400E-02,  9.400E-02,  9.300E-02,  9.300E-02,  9.300E-02,  9.200E-02,  9.200E-02,  9.100E-02,  9.100E-02,  9.100E-02,  9.000E-02,  9.000E-02,  8.900E-02,  8.900E-02,  8.900E-02,  8.800E-02,  8.800E-02,  8.800E-02,  8.700E-02,  8.700E-02,  8.600E-02,  8.600E-02,  8.600E-02,  8.500E-02,  8.500E-02,  8.500E-02,  8.400E-02,  8.400E-02,  8.300E-02,  8.300E-02,  8.300E-02,  8.200E-02,  8.200E-02,  8.200E-02,  8.100E-02,  8.100E-02,  8.000E-02,  8.000E-02,  8.000E-02,  7.900E-02,  7.900E-02,  7.900E-02,  7.800E-02,  7.800E-02,  7.700E-02,  7.700E-02,  7.700E-02,  7.600E-02,  7.600E-02,  7.600E-02,  7.500E-02,  7.500E-02,  7.400E-02,  7.400E-02,  7.400E-02,  7.300E-02,  7.300E-02,  7.300E-02,  7.200E-02,  7.200E-02,  7.100E-02,  7.100E-02,  7.100E-02,  7.000E-02,  7.000E-02,  7.000E-02,  6.900E-02,  6.900E-02,  6.800E-02,  6.800E-02,  6.800E-02,  6.700E-02,  6.700E-02,  6.700E-02,  6.600E-02,  6.600E-02,  6.500E-02,  6.500E-02,  6.500E-02,  6.400E-02,  6.400E-02])
        self.viscosity.data           = np.array([ 5.100E+01,  4.720E+01,  4.380E+01,  4.070E+01,  3.800E+01,  3.550E+01,  3.320E+01,  3.110E+01,  2.920E+01,  2.750E+01,  2.590E+01,  2.440E+01,  2.310E+01,  2.180E+01,  2.070E+01,  1.960E+01,  1.860E+01,  1.770E+01,  1.690E+01,  1.610E+01,  1.530E+01,  1.460E+01,  1.400E+01,  1.340E+01,  1.280E+01,  1.230E+01,  1.180E+01,  1.130E+01,  1.080E+01,  1.040E+01,  1.000E+01,  9.650E+00,  9.290E+00,  8.950E+00,  8.630E+00,  8.320E+00,  8.030E+00,  7.760E+00,  7.490E+00,  7.240E+00,  7.000E+00,  6.770E+00,  6.560E+00,  6.350E+00,  6.150E+00,  5.960E+00,  5.780E+00,  5.600E+00,  5.430E+00,  5.270E+00,  5.120E+00,  4.970E+00,  4.830E+00,  4.690E+00,  4.560E+00,  4.430E+00,  4.310E+00,  4.190E+00,  4.080E+00,  3.970E+00,  3.860E+00,  3.760E+00,  3.660E+00,  3.570E+00,  3.480E+00,  3.390E+00,  3.300E+00,  3.220E+00,  3.140E+00,  3.070E+00,  2.990E+00,  2.920E+00,  2.850E+00,  2.780E+00,  2.710E+00,  2.650E+00,  2.590E+00,  2.530E+00,  2.470E+00,  2.410E+00,  2.360E+00,  2.310E+00,  2.250E+00,  2.210E+00,  2.160E+00,  2.110E+00,  2.060E+00,  2.020E+00,  1.980E+00,  1.930E+00,  1.890E+00,  1.850E+00,  1.810E+00,  1.780E+00,  1.740E+00,  1.700E+00,  1.670E+00,  1.630E+00,  1.600E+00,  1.570E+00,  1.540E+00,  1.510E+00,  1.480E+00,  1.450E+00,  1.420E+00,  1.390E+00,  1.370E+00,  1.340E+00,  1.310E+00,  1.290E+00,  1.260E+00,  1.240E+00,  1.220E+00,  1.190E+00,  1.170E+00,  1.150E+00,  1.130E+00,  1.110E+00,  1.090E+00,  1.070E+00,  1.050E+00,  1.030E+00,  1.010E+00,  9.950E-01,  9.770E-01,  9.600E-01,  9.430E-01,  9.270E-01,  9.110E-01,  8.950E-01,  8.800E-01,  8.650E-01,  8.500E-01,  8.360E-01,  8.220E-01,  8.080E-01,  7.950E-01,  7.810E-01,  7.690E-01,  7.560E-01,  7.440E-01,  7.320E-01,  7.200E-01,  7.080E-01,  6.970E-01,  6.860E-01,  6.750E-01,  6.640E-01,  6.540E-01,  6.430E-01,  6.330E-01,  6.240E-01,  6.140E-01,  6.050E-01,  5.950E-01,  5.860E-01,  5.770E-01,  5.690E-01,  5.600E-01,  5.520E-01,  5.430E-01,  5.350E-01,  5.270E-01,  5.200E-01,  5.120E-01,  5.050E-01,  4.970E-01,  4.900E-01,  4.830E-01,  4.760E-01,  4.690E-01,  4.630E-01,  4.560E-01,  4.500E-01,  4.430E-01,  4.370E-01,  4.310E-01,  4.250E-01,  4.190E-01,  4.130E-01,  4.080E-01,  4.020E-01,  3.970E-01,  3.910E-01,  3.860E-01,  3.810E-01,  3.760E-01,  3.710E-01,  3.660E-01,  3.610E-01,  3.560E-01,  3.520E-01,  3.470E-01,  3.420E-01,  3.380E-01,  3.340E-01,  3.290E-01,  3.250E-01,  3.210E-01,  3.170E-01,  3.130E-01,  3.090E-01,  3.050E-01,  3.010E-01,  2.980E-01,  2.940E-01,  2.900E-01,  2.870E-01,  2.830E-01,  2.800E-01,  2.760E-01,  2.730E-01,  2.700E-01,  2.670E-01,  2.630E-01,  2.600E-01,  2.570E-01,  2.540E-01,  2.510E-01,  2.480E-01])/1e3
        self.saturation_pressure.data = np.array([    np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,     np.NAN,  1.000E-03,  1.000E-03,  1.000E-03,  1.000E-03,  1.000E-03,  1.000E-03,  1.000E-03,  2.000E-03,  2.000E-03,  2.000E-03,  3.000E-03,  3.000E-03,  4.000E-03,  4.000E-03,  5.000E-03,  6.000E-03,  6.000E-03,  7.000E-03,  8.000E-03,  9.000E-03,  1.000E-02,  1.200E-02,  1.300E-02,  1.500E-02,  1.600E-02,  1.800E-02,  2.000E-02,  2.200E-02,  2.500E-02,  2.700E-02,  3.000E-02,  3.300E-02,  3.600E-02,  4.000E-02,  4.400E-02,  4.800E-02,  5.200E-02,  5.700E-02,  6.200E-02,  6.800E-02,  7.300E-02,  7.900E-02,  8.600E-02,  9.300E-02,  1.000E-01,  1.080E-01,  1.170E-01,  1.250E-01,  1.350E-01,  1.450E-01,  1.550E-01,  1.660E-01,  1.780E-01,  1.900E-01,  2.030E-01,  2.160E-01,  2.300E-01,  2.450E-01,  2.610E-01,  2.770E-01,  2.940E-01,  3.120E-01,  3.310E-01,  3.500E-01,  3.700E-01,  3.910E-01,  4.140E-01,  4.370E-01,  4.600E-01,  4.850E-01,  5.110E-01,  5.380E-01,  5.660E-01,  5.950E-01,  6.250E-01,  6.560E-01,  6.880E-01,  7.210E-01,  7.550E-01,  7.910E-01,  8.280E-01,  8.660E-01,  9.050E-01,  9.460E-01,  9.870E-01,  1.030E+00,  1.080E+00,  1.120E+00,  1.170E+00,  1.220E+00,  1.270E+00,  1.320E+00,  1.370E+00,  1.420E+00,  1.480E+00,  1.540E+00,  1.600E+00,  1.660E+00,  1.720E+00,  1.780E+00,  1.840E+00,  1.910E+00,  1.980E+00,  2.050E+00,  2.120E+00,  2.190E+00,  2.270E+00,  2.340E+00,  2.420E+00,  2.500E+00,  2.580E+00,  2.670E+00,  2.750E+00,  2.840E+00,  2.920E+00,  3.020E+00,  3.110E+00,  3.200E+00,  3.300E+00,  3.390E+00,  3.490E+00,  3.590E+00,  3.700E+00,  3.800E+00,  3.910E+00,  4.020E+00,  4.130E+00,  4.240E+00,  4.350E+00,  4.470E+00,  4.590E+00,  4.710E+00,  4.830E+00,  4.960E+00,  5.080E+00,  5.210E+00,  5.340E+00,  5.470E+00,  5.610E+00,  5.740E+00,  5.880E+00,  6.020E+00,  6.160E+00,  6.310E+00,  6.450E+00,  6.600E+00,  6.750E+00,  6.900E+00,  7.060E+00,  7.210E+00,  7.370E+00,  7.530E+00,  7.690E+00,  7.860E+00,  8.020E+00,  8.190E+00,  8.360E+00,  8.530E+00,  8.710E+00,  8.880E+00,  9.060E+00,  9.240E+00,  9.430E+00,  9.610E+00,  9.800E+00,  9.990E+00,  1.020E+01,  1.040E+01,  1.060E+01,  1.080E+01,  1.100E+01,  1.120E+01,  1.140E+01,  1.160E+01,  1.180E+01,  1.200E+01,  1.220E+01,  1.240E+01,  1.260E+01,  1.280E+01,  1.310E+01,  1.330E+01,  1.350E+01])*1e5
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = np.min(self.temperature.data[~np.isnan(self.saturation_pressure.data)])
        self.name        = "S800"
        self.description = "Syltherm 800"
        self.reference   = "Dow Chemical Company - FLUIDFILE Software accessed May 2017"
        self.reshapeAll()
        

class DynaleneSF(PureData):
    """
    Dynalene SF is a fluid for high temperature heat transfer. 
    """
    def __init__(self):
        PureData.__init__(self)
        self.density.source           = self.density.SOURCE_DATA
        self.viscosity.source         = self.viscosity.SOURCE_DATA
        self.specific_heat.source     = self.specific_heat.SOURCE_DATA
        self.conductivity.source      = self.conductivity.SOURCE_DATA
        self.temperature.data         = np.array([ 0.000E+00,  1.000E+01,  2.000E+01,  3.000E+01,  4.000E+01,  5.000E+01,  6.000E+01,  7.000E+01,  8.000E+01,  9.000E+01,  1.000E+02,  1.100E+02,  1.200E+02,  1.300E+02,  1.400E+02,  1.500E+02,  1.600E+02,  1.700E+02,  1.800E+02,  1.900E+02,  2.000E+02,  2.100E+02,  2.200E+02,  2.300E+02,  2.400E+02,  2.500E+02,  2.600E+02,  2.700E+02,  2.800E+02,  2.900E+02,  3.000E+02,  3.100E+02,  3.150E+02])+273.15
        self.density.data             = np.array([ 8.900E+02,  8.440E+02,  8.770E+02,  8.700E+02,  8.630E+02,  8.570E+02,  8.500E+02,  8.430E+02,  8.360E+02,  8.300E+02,  8.230E+02,  8.160E+02,  8.100E+02,  8.030E+02,  7.960E+02,  7.890E+02,  7.830E+02,  7.760E+02,  7.690E+02,  7.630E+02,  7.560E+02,  7.490E+02,  7.420E+02,  7.360E+02,  7.290E+02,  7.220E+02,  7.150E+02,  7.090E+02,  7.020E+02,  6.950E+02,  6.890E+02,  6.820E+02,  6.780E+02])
        self.specific_heat.data       = np.array([ 1.894E+00,  1.930E+00,  1.967E+00,  2.003E+00,  2.040E+00,  2.076E+00,  2.113E+00,  2.150E+00,  2.186E+00,  2.223E+00,  2.259E+00,  2.296E+00,  2.332E+00,  2.369E+00,  2.405E+00,  2.442E+00,  2.478E+00,  2.515E+00,  2.552E+00,  2.588E+00,  2.625E+00,  2.661E+00,  2.698E+00,  2.734E+00,  2.771E+00,  2.807E+00,  2.844E+00,  2.880E+00,  2.917E+00,  2.954E+00,  2.990E+00,  3.027E+00,  3.045E+00])*1e3
        self.conductivity.data        = np.array([ 1.361E-01,  1.354E-01,  1.347E-01,  1.340E-01,  1.332E-01,  1.325E-01,  1.318E-01,  1.310E-01,  1.303E-01,  1.295E-01,  1.287E-01,  1.280E-01,  1.272E-01,  1.264E-01,  1.256E-01,  1.248E-01,  1.240E-01,  1.232E-01,  1.224E-01,  1.216E-01,  1.208E-01,  1.200E-01,  1.191E-01,  1.183E-01,  1.174E-01,  1.166E-01,  1.157E-01,  1.149E-01,  1.140E-01,  1.131E-01,  1.123E-01,  1.114E-01,  1.109E-01])
        self.viscosity.data           = np.array([ 1.600E+02,  7.000E+01,  3.700E+01,  2.300E+01,  1.500E+01,  1.100E+01,  8.100E+00,  6.300E+00,  5.000E+00,  4.100E+00,  3.400E+00,  2.900E+00,  2.400E+00,  2.200E+00,  1.900E+00,  1.700E+00,  1.500E+00,  1.300E+00,  1.200E+00,  1.100E+00,  1.000E+00,  8.800E-01,  8.100E-01,  7.500E-01,  6.900E-01,  6.400E-01,  5.900E-01,  5.500E-01,  5.100E-01,  4.800E-01,  4.500E-01,  4.200E-01,  4.100E-01])/1e3
        self.Tmin        = np.min(self.temperature.data)
        self.Tmax        = np.max(self.temperature.data)
        self.TminPsat    = np.min(self.temperature.data)
        self.name        = "DSF"
        self.description = "Dynalene SF"
        self.reference   = "Dynalene, Inc."
        self.reshapeAll()
        
        
